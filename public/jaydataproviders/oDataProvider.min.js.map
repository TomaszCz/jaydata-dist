{"version":3,"sources":["node_modules/browser-pack/_prelude.js","oDataProvider.js","src/Types/StorageProviders/oData/SaveStrategies/batch.js","src/Types/StorageProviders/oData/SaveStrategies/empty.js","src/Types/StorageProviders/oData/SaveStrategies/single.js","src/Types/StorageProviders/oData/index.js","src/Types/StorageProviders/oData/oDataCompiler.js","src/Types/StorageProviders/oData/oDataConverter.js","src/Types/StorageProviders/oData/oDataIncludeCompiler.js","src/Types/StorageProviders/oData/oDataOrderCompiler.js","src/Types/StorageProviders/oData/oDataPagingCompiler.js","src/Types/StorageProviders/oData/oDataProjectionCompiler.js","src/Types/StorageProviders/oData/oDataProvider.js","src/Types/StorageProviders/oData/oDataRequestActivities.js","src/Types/StorageProviders/oData/oDataWhereCompiler.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","$data","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","_dereq_","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","strategy","undefined","_core","_core2","name","condition","provider","convertedItems","disabled","providerConfiguration","disableBatch","defaults","OData","requests","getItems","save","callBack","that","items","map","it","request","build","get","requestData","requestUri","oDataServiceHost","method","data","__batchRequests","__changeRequests","headers","response","statusCode","result","__batchResponses","__changeResponses","errors","item","getByResponse","Entity","reload_fromResponse","setProcessed","push","parseError","error","Exception","success","oData","batch","batchHandler","useJsonLight","appendBasicAuth","user","password","withCredentials","context","prepareRequest","apply","jaydata/core","2","3","doSave","index","done","err","4","_oDataConverter","_oDataProvider","_oDataCompiler","_oDataWhereCompiler","_oDataIncludeCompiler","_oDataOrderCompiler","_oDataPagingCompiler","_oDataProjectionCompiler","./oDataCompiler.js","./oDataConverter.js","./oDataIncludeCompiler.js","./oDataOrderCompiler.js","./oDataPagingCompiler.js","./oDataProjectionCompiler.js","./oDataProvider.js","./oDataWhereCompiler.js","5","_toConsumableArray","arr","Array","isArray","arr2","from","$C","modelBinder","ModelBinderConfigCompiler","VisitEntityFieldOperationExpression","expression","builder","Visit","source","opDef","operation","memberDefinition","projection","modelBinderConfig","$type","returnType","dataType","$value","meta","$source","aggregate","Expressions","EntityExpressionVisitor","constructor","includes","mainEntitySet","compile","query","storageProvider","defaultType","getEntitySetFromElementType","queryFragments","urlText","$expand","toString","$apply","join","groupby","filter","indexOf","$filter","assign","$select","storageProviders","oDataModelBinderConfigCompiler","create","queryText","addAmp","$funcParams","postData","withInlineCount","isBatchExecuteQuery","_isBatchExecuteQuery","subQueries","_subQueries","params","_getComplitedData","VisitOrderExpression","orderCompiler","Container","createoDataOrderCompiler","VisitPagingExpression","pagingCompiler","createoDataPagingCompiler","VisitIncludeExpression","includeCompiler","createoDataIncludeCompiler","includeContext","selector","VisitFindExpression","subMember","memberName","param","typeName","resolveName","type","converter","fieldConverter","toDb","escape","VisitProjectionExpression","projectionCompiler","createoDataProjectionCompiler","VisitFilterExpression","filterCompiler","createoDataWhereCompiler","VisitInlineCountExpression","maxDataServiceVersion","VisitEntitySetExpression","instance","tableName","VisitServiceOperationExpression","boundItem","entitySet","getEntityKeysValue","cfg","namespace","serviceName","serviceConfig","VisitBatchDeleteExpression","VisitConstantExpression","fullName","paramConfig","useAlias","useParameterAlias","paramValue","paramName","VisitCountExpression","VisitBatchExecuteQueryExpression","members","queryable","compiler","oDataCompiler","compiled","VisitDistinctExpression","_context$groupby","split","VisitGroupExpression","_context$groupby2","groupContext","6","_atob","_atob2","oDataWebApi","oDataConverter","fromDb","$data.Enum","v","enumType","convertTo","$data.Byte","proxyConverter","$data.SByte","$data.Decimal","Decimal","$data.Float","$data.Int16","$data.Int64","Int64","$data.ObjectID","$data.Integer","$data.Int32","$data.Number","$data.Date","dbData","Date","substring","parseInt","substr","match","$data.DateTimeOffset","$data.Time","Time","$data.Day","$data.Duration","$data.String","$data.Boolean","$data.Blob","$data.Object","JSON","parse","$data.Array","$data.GeographyPoint","GeographyPoint","$data.GeographyLineString","GeographyLineString","$data.GeographyPolygon","GeographyPolygon","$data.GeographyMultiPoint","GeographyMultiPoint","$data.GeographyMultiLineString","GeographyMultiLineString","$data.GeographyMultiPolygon","GeographyMultiPolygon","$data.GeographyCollection","GeographyCollection","$data.GeometryPoint","GeometryPoint","$data.GeometryLineString","GeometryLineString","$data.GeometryPolygon","GeometryPolygon","$data.GeometryMultiPoint","GeometryMultiPoint","$data.GeometryMultiLineString","GeometryMultiLineString","$data.GeometryMultiPolygon","GeometryMultiPolygon","$data.GeometryCollection","GeometryCollection","$data.Guid","guid","getEnumName","$data.Entity","toISOString","replace","Blob","toBase64","def","elementType","values","arguments","stringify","d","encodeURIComponent","date","text","bool","b","GeographyBase","stringifyToUrl","GeometryBase","unescape","config","resolveType","converters","toLowerCase","lastIndexOf","test","slice","parseGuid","isAssignableTo","DateTimeOffset","Day","Duration","createFromHexString","parseFromString","xmlEscape","simple","7","_classCallCheck","Constructor","TypeError","ODataIncludeFragment","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","$operators","_i","operator","j","path","_createIncludePath","includedFragment","_setImplicitMap","inc","current","included","__implicit","includeFragment","entityContext","VisitParametricQueryExpression","AssociationInfoExpression","VisitAssociationInfoExpression","propName","associationInfo","FromPropertyName","sm","_storageModel","getStorageModel","FromType","inheritsFrom","IsComplexType","includePath","currentPath","some","include","ToType","VisitFrameOperationExpression","includeFrameName","opName","paramCounter","parameters","args","arg","compilerType","frameContext","Queryable","preparator","createQueryExpressionCreator","prep_expression","implementation","8","oDataWhereCompiler","orderContext","nodeType","ExpressionType","OrderByDescending","VisitEntityFieldExpression","VisitComplexTypeExpression","VisitEntityExpression","VisitMemberInfoExpression","definedBy","Guard","requireType","MemberInfoExpression","mapTo","forEach","VisitEntityFunctionOperationExpression","ConstantExpression","VisitContextFunctionOperationExpression","9","pagingContext","amount","Skip","Take","raise","10","hasObjectLiteral","modelBinderMapping","mapping","m","EntityExpression","EntitySetExpression","pop","addInclude","VisitObjectLiteralExpression","member","VisitObjectFieldExpression","propertyName","EntityFieldExpression","storageModel","isComplexProperty","ComplexTypes","complexProperty","addImplicitMap","ComplexTypeExpression","isComplexField","checkODataMode","temp","field","11","_interopRequireWildcard","newObj","hasOwnProperty","_typeof","Symbol","iterator","_oDataRequestActivities","activities","_empty","_single","_batch","withReferenceMethods","eTagAny","enableDeepSave","disableCompltexTypeMapping","_checkODataMode","functionName","Base","_items","_entities","add","changedItem","countable","entity","itemIndex","maxItemIndex","references","SetHeaderProperty","addItemReference","reference","getItem","getItemIndex","idx","removed","onlyAvailable","remove","_indexCalculated","_dataForResult","isProcessed","StorageProviderBase","ctx","SqlCommands","typeSystem","extend","dbCreation","DbCreationType","DropTableIfChanged","serviceUrl","dataServiceVersion","UpdateMethod","odatajs","_buildDbType_generateConvertToFunction","buildDbType_generateConvertToFunction","_buildDbType_modifyInstanceDefinition","buildDbType_modifyInstanceDefinition","fixkDataServiceVersions","setDataServiceVersionToMax","initializeStore","PromiseHandlerBase","createCallbackSettings","DropAllExistingTables","logicalEntity","dbInstance","PhysicalType","entityState","memberDefinitions","getPublicMappedProperties","property","initData","Associations","association","FromMultiplicity","ToMultiplicity","refValue","rv","contentId","EntityState","Modified","sMod","getType","tblName","TableName","pk","__metadata","uri","__convertedRefence","cmpType","executeQuery","sql","_compile","countProperty","textStatus","jqXHR","body","processSuccess","rawDataList","cnt","Integer","__count","Number","valueOf","resp","enableJSONP","enableJsonpCallback","saveChanges","changedItems","saveInternal","independentBlocks","buildIndependentBlocks","_checkDeepSave","_buildSaveData","actionMode","saveStrategySelector","saveStrategies","saveAction","_discoverSaveOrder","entityItems","entityInfo","visited","entityQueue","discoveredEntities","process","currentEntity","info","visiting","referredBy","concat","dependentOn","ref","refIndex","deepParent","parent","currentItem","shift","discover","innerChangeItem","Added","additionalDependentOn","RequestManager","independentItem","RequestBuilder","SetUrl","_buildRequestObject","EntityState_20","convertedItem","SetMethod","AppendUrl","SetDataProperty","save_getInitData","EntityState_30","keysValue","addETagHeader","EntityState_40","ClearRequestData","memDef","propType","computed","inverseProperty","concurrencyMode","ConcurrencyMode","Fixed","aeType","arrayProperty","ap","aitem","isNullOrUndefined","etypeName","econverter","isComplex","isDeep","physicalData","hasSavedProperty","asArray","memdef","propertyConversationSelector","kind","MemberTypes","_complexPropertySelector","_propertySelector","navProperty","_navigationPropertySelector","propertyConversationStrategies","notMapped","_propertyIsChanged","_this","navigationValue","navItem","_processDeepSaveItems","_simpleNavigationPropertySelector","navigationEntity","referencedItems","deepItem","referencedRequest","changedProperties","complexElement","innerRequest","req","SetProperty","reqItem","additionalRequest","targetItem","getEntityUrlReference","refItem","deepSave","deepSaveArray","navigation","complex","headerValue","getTraceString","supportedDataTypes","String","Boolean","Guid","Byte","SByte","Float","Int16","Int32","supportedBinaryOperators","equal","allowedIn","FilterExpression","OrderExpression","SomeExpression","EveryExpression","notEqual","equalTyped","notEqualTyped","greaterThan","greaterThanOrEqual","lessThan","lessThenOrEqual","or","and","divide","multiply","subtract","modulo","in","supportedUnaryOperators","not","supportedFieldOperations","contains","startsWith","endsWith","allowedType","ProjectionExpression","fixedDataType","strLength","baseIndex","optional","toUpperCase","trim","day","getUTCDate","hour","getUTCHours","minute","getUTCMinutes","month","getUTCMonth","second","getUTCSeconds","year","getFullYear","fractionalseconds","getUTCMilliseconds","round","floor","ceiling","distance","intersects","sum","count","min","max","avg","supportedSetOperations","IncludeExpression","frameType","toArray","single","invokable","every","take","PagingExpression","skip","orderBy","orderByDescending","frameTypeFactory","first","batchDelete","InlineCountExpression","find","distinct","groupBy","supportedContextOperation","batchExecuteQuery","resolveTypeOperations","entityType","getMemberDefinition","IsSideEffecting","resolveSetOperations","esDef","ContextType","ItemName","actions","MemberDefinition","translateDefinition","resolveContextOperations","keyValue","memDefs","getKeyProperties","l","getFieldUrl","fieldName","keyPart","servicehost","message","errorObj","Authorization","__encodeBase64","val","chr1","chr2","enc1","enc2","enc3","b64array","input","base64","chr3","enc4","charCodeAt","isNaN","charAt","registerProvider","oDataProvider","./SaveStrategies/batch","./SaveStrategies/empty","./SaveStrategies/single","./oDataRequestActivities.js","12","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","RequestActivity","_context","_request","_activities","SetRequestActivity","_RequestActivity","_this2","getPrototypeOf","SetRequestProperty","_SetRequestActivity","_SetRequestActivity2","_SetRequestActivity3","_SetRequestProperty","url","_SetUrl","_SetRequestProperty2","_SetDataProperty","SetNavigationProperty","_SetDataProperty2","_RequestActivity2","13","lambdaPrefix","VisitUnaryExpression","resolution","operand","VisitSimpleBinaryExpression","right","orResolution","eqResolution","idValue","idCheck","createSimpleBinaryExpression","left","Equal","Or","VisitQueryParameterExpression","lambda"],"mappings":"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","file":"oDataProvider.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","﻿// JayData 1.5.13 \r\n// Dual licensed under MIT and GPL v2\r\n// Copyright JayStack Technologies (http://jaydata.org/licensing)\r\n//\r\n// JayData is a standards-based, cross-platform Javascript library and a set of\r\n// practices to access and manipulate data from various online and offline sources.\r\n//\r\n// Credits:\r\n//     Hajnalka Battancs, Dániel József, János Roden, László Horváth, Péter Nochta\r\n//     Péter Zentai, Róbert Bónay, Szabolcs Czinege, Viktor Borza, Viktor Lázár,\r\n//     Zoltán Gyebrovszki, Gábor Dolla\r\n//\r\n// More info: http://jaydata.org\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define(\"jaydata/odata\",[\"jaydata/core\"],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.$data = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.strategy = undefined;\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar strategy = {\n    name: 'batch',\n    condition: function condition(provider, convertedItems) {\n        var disabled = false;\n        if (typeof provider.providerConfiguration.disableBatch !== 'undefined') {\n            disabled = !!provider.providerConfiguration.disableBatch;\n        } else {\n            disabled = !!_core2.default.defaults.OData.disableBatch;\n        }\n\n        if (!disabled) {\n            var requests = convertedItems.getItems();\n            return requests.length > 1;\n        }\n\n        return false;\n    },\n    save: function save(provider, convertedItems, callBack) {\n        var that = provider;\n        var items = convertedItems.getItems();\n        var requests = items.map(function (it) {\n            return it.request.build().get();\n        });\n\n        var requestData = [{\n            requestUri: that.providerConfiguration.oDataServiceHost + \"/$batch\",\n            method: \"POST\",\n            data: {\n                __batchRequests: [{ __changeRequests: requests }]\n            },\n            headers: {}\n        }, function (data, response) {\n            if (response.statusCode == 200 || response.statusCode == 202) {\n                var result = data.__batchResponses[0].__changeResponses;\n                var errors = [];\n\n                for (var i = 0; i < result.length; i++) {\n                    if (result[i].statusCode >= 200 && result[i].statusCode < 300) {\n                        var item = convertedItems.getByResponse(result[i], i);\n                        if (item instanceof _core2.default.Entity && result[i].statusCode != 204) {\n                            that.reload_fromResponse(item, result[i].data, result[i]);\n                            convertedItems.setProcessed(item);\n                        }\n                    } else {\n                        errors.push(that.parseError(result[i]));\n                    }\n                }\n                if (errors.length > 0) {\n                    if (errors.length === 1) {\n                        callBack.error(errors[0]);\n                    } else {\n                        callBack.error(new _core.Exception('See inner exceptions', 'Batch failed', errors));\n                    }\n                } else if (callBack.success) {\n                    callBack.success(convertedItems.length);\n                }\n            } else {\n                callBack.error(that.parseError(response));\n            }\n        }, function (e) {\n            callBack.error(that.parseError(e));\n        }, that.oData.batch.batchHandler];\n\n        if (typeof that.providerConfiguration.useJsonLight !== 'undefined') {\n            requestData[0].useJsonLight = that.providerConfiguration.useJsonLight;\n        }\n\n        that.appendBasicAuth(requestData[0], that.providerConfiguration.user, that.providerConfiguration.password, that.providerConfiguration.withCredentials);\n\n        that.context.prepareRequest.call(that, requestData);\n        that.oData.request.apply(that, requestData);\n    }\n};\n\nexports.strategy = strategy;\n\n},{\"jaydata/core\":\"jaydata/core\"}],2:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar strategy = {\n    name: 'empty',\n    condition: function condition(provider, convertedItems) {\n        return true;\n    },\n    save: function save(provider, convertedItems, callBack) {\n        callBack.success(0);\n    }\n};\n\nexports.strategy = strategy;\n\n},{}],3:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.strategy = undefined;\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar strategy = {\n    name: 'single',\n    condition: function condition(provider, convertedItems) {\n        var requests = convertedItems.getItems();\n        return requests.length > 0;\n    },\n    save: function save(provider, convertedItems, callBack) {\n        var that = provider;\n        var items = convertedItems.getItems();\n\n        var doSave = function doSave(items, index, done) {\n            var item = items[index];\n            if (!item) return done();\n\n            var request = item.request.build().get();\n            var requestData = [request, function (data, response) {\n                if (response.statusCode >= 200 && response.statusCode < 300) {\n                    var item = convertedItems.getByResponse(response, index);\n                    if (item instanceof _core2.default.Entity && response.statusCode != 204) {\n                        that.reload_fromResponse(item, data, response);\n                        convertedItems.setProcessed(item);\n                    }\n\n                    doSave(items, ++index, done);\n                } else {\n                    done(response);\n                }\n            }, done];\n\n            that.appendBasicAuth(requestData[0], that.providerConfiguration.user, that.providerConfiguration.password, that.providerConfiguration.withCredentials);\n            that.context.prepareRequest.call(that, requestData);\n            that.oData.request.apply(that, requestData);\n        };\n\n        doSave(items, 0, function (err, result) {\n            if (err) return callBack.error(that.parseError(err));\n            callBack.success(result);\n        });\n    }\n};\n\nexports.strategy = strategy;\n\n},{\"jaydata/core\":\"jaydata/core\"}],4:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _oDataConverter = _dereq_('./oDataConverter.js');\n\nvar _oDataConverter2 = _interopRequireDefault(_oDataConverter);\n\nvar _oDataProvider = _dereq_('./oDataProvider.js');\n\nvar _oDataProvider2 = _interopRequireDefault(_oDataProvider);\n\nvar _oDataCompiler = _dereq_('./oDataCompiler.js');\n\nvar _oDataCompiler2 = _interopRequireDefault(_oDataCompiler);\n\nvar _oDataWhereCompiler = _dereq_('./oDataWhereCompiler.js');\n\nvar _oDataWhereCompiler2 = _interopRequireDefault(_oDataWhereCompiler);\n\nvar _oDataIncludeCompiler = _dereq_('./oDataIncludeCompiler.js');\n\nvar _oDataIncludeCompiler2 = _interopRequireDefault(_oDataIncludeCompiler);\n\nvar _oDataOrderCompiler = _dereq_('./oDataOrderCompiler.js');\n\nvar _oDataOrderCompiler2 = _interopRequireDefault(_oDataOrderCompiler);\n\nvar _oDataPagingCompiler = _dereq_('./oDataPagingCompiler.js');\n\nvar _oDataPagingCompiler2 = _interopRequireDefault(_oDataPagingCompiler);\n\nvar _oDataProjectionCompiler = _dereq_('./oDataProjectionCompiler.js');\n\nvar _oDataProjectionCompiler2 = _interopRequireDefault(_oDataProjectionCompiler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _core2.default;\nmodule.exports = exports['default'];\n\n},{\"./oDataCompiler.js\":5,\"./oDataConverter.js\":6,\"./oDataIncludeCompiler.js\":7,\"./oDataOrderCompiler.js\":8,\"./oDataPagingCompiler.js\":9,\"./oDataProjectionCompiler.js\":10,\"./oDataProvider.js\":11,\"./oDataWhereCompiler.js\":13,\"jaydata/core\":\"jaydata/core\"}],5:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n(0, _core.$C)('$data.storageProviders.oData.oDataModelBinderConfigCompiler', _core2.default.modelBinder.ModelBinderConfigCompiler, null, {\n    VisitEntityFieldOperationExpression: function VisitEntityFieldOperationExpression(expression, builder) {\n        this.Visit(expression.source, builder);\n        var opDef = expression.operation.memberDefinition;\n        if (typeof opDef.projection == \"function\") {\n            builder.modelBinderConfig.$type = opDef.returnType || opDef.dataType;\n            builder.modelBinderConfig.$value = function (meta, data) {\n                return opDef.projection(data[meta.$source]);\n            };\n        }\n        if (opDef.aggregate) {\n            if (opDef.returnType || opDef.dataType) builder.modelBinderConfig.$type = opDef.returnType || opDef.dataType;\n        }\n    }\n});\n\n(0, _core.$C)('$data.storageProviders.oData.oDataCompiler', _core2.default.Expressions.EntityExpressionVisitor, null, {\n    constructor: function constructor() {\n        this.context = {};\n        this.provider = {};\n        //this.logicalType = null;\n        this.includes = null;\n        this.mainEntitySet = null;\n    },\n    compile: function compile(query) {\n\n        this.provider = query.context.storageProvider;\n        this.context = query.context;\n\n        if (query.defaultType) {\n            this.mainEntitySet = query.context.getEntitySetFromElementType(query.defaultType);\n        }\n\n        var queryFragments = { urlText: \"\" };\n\n        this.Visit(query.expression, queryFragments);\n        if (queryFragments.$expand) {\n            queryFragments.$expand = queryFragments.$expand.toString();\n        }\n        var $apply = \"\";\n        if (queryFragments.aggregate) {\n            $apply = 'aggregate(' + queryFragments.aggregate.join(\",\") + ')';\n        }\n        if (queryFragments.groupby) {\n            queryFragments.groupby = queryFragments.groupby.filter(function (it, i, arr) {\n                return arr.indexOf(it) == i;\n            });\n            $apply = queryFragments.aggregate ? 'groupby((' + queryFragments.groupby.join(\",\") + '),' + $apply + ')' : 'groupby((' + queryFragments.groupby.join(\",\") + '))';\n        }\n        if ($apply && queryFragments.$filter) {\n            $apply = 'filter(' + queryFragments.$filter + ')/' + $apply;\n        }\n        if ($apply) {\n            queryFragments = Object.assign({}, queryFragments, {\n                aggregate: [],\n                groupby: [],\n                $filter: \"\",\n                $select: \"\",\n                $apply: $apply\n            });\n        }\n\n        query.modelBinderConfig = {};\n        var modelBinder = _core2.default.storageProviders.oData.oDataModelBinderConfigCompiler.create(query, this.includes, true);\n        modelBinder.Visit(query.expression);\n\n        var queryText = queryFragments.urlText;\n        var addAmp = false;\n\n        if (queryFragments.$funcParams) {\n            queryText += \"(\" + queryFragments.$funcParams + \")\";\n        }\n\n        for (var name in queryFragments) {\n            if (name != \"urlText\" && name != \"actionPack\" && name != \"data\" && name != \"lambda\" && name != \"method\" && name != \"postData\" && name != \"_isBatchExecuteQuery\" && name != \"_subQueries\" && name != \"$funcParams\" && queryFragments[name] != \"\") {\n\n                if (addAmp) {\n                    queryText += \"&\";\n                } else {\n                    queryText += \"?\";\n                }\n                addAmp = true;\n                if (name != \"$urlParams\") {\n                    queryText += name + '=' + queryFragments[name];\n                } else {\n                    queryText += queryFragments[name];\n                }\n            }\n        }\n        query.queryText = queryText;\n        query.postData = queryFragments.postData;\n        var result = {\n            queryText: queryText,\n            withInlineCount: '$inlinecount' in queryFragments || '$count' in queryFragments,\n            method: queryFragments.method || 'GET',\n            postData: queryFragments.postData,\n            isBatchExecuteQuery: queryFragments._isBatchExecuteQuery,\n            subQueries: queryFragments._subQueries,\n            params: []\n        };\n\n        query._getComplitedData = function () {\n            return result;\n        };\n\n        return result;\n    },\n    VisitOrderExpression: function VisitOrderExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        var orderCompiler = _core.Container.createoDataOrderCompiler(this.provider);\n        orderCompiler.compile(expression, context);\n    },\n    VisitPagingExpression: function VisitPagingExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        var pagingCompiler = _core.Container.createoDataPagingCompiler(this.provider);\n        pagingCompiler.compile(expression, context);\n    },\n    VisitIncludeExpression: function VisitIncludeExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        var includeCompiler = _core.Container.createoDataIncludeCompiler(this.provider);\n        this.includes = this.includes || [];\n        var includeContext = { data: context[\"$expand\"], includes: this.includes };\n        includeCompiler.compile(expression.selector, includeContext);\n        context[\"$expand\"] = includeContext.data;\n    },\n    VisitFindExpression: function VisitFindExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        if (expression.subMember) {\n            context.urlText += \"/\" + expression.subMember.memberName;\n        }\n\n        if (expression.params && expression.params.length > 0) {\n            context.urlText += '(';\n            if (expression.params.length === 1) {\n                var param = expression.params[0];\n                var typeName = _core.Container.resolveName(param.type);\n\n                var converter = this.provider.fieldConverter.toDb[typeName];\n                var value = converter ? converter(param.value) : param.value;\n\n                converter = this.provider.fieldConverter.escape[typeName];\n                value = converter ? converter(param.value) : param.value;\n                context.urlText += value;\n            } else {\n                for (var i = 0; i < expression.params.length; i++) {\n                    var param = expression.params[i];\n                    var typeName = _core.Container.resolveName(param.type);\n\n                    var converter = this.provider.fieldConverter.toDb[typeName];\n                    var value = converter ? converter(param.value) : param.value;\n\n                    converter = this.provider.fieldConverter.escape[typeName];\n                    value = converter ? converter(param.value) : param.value;\n\n                    if (i > 0) context.urlText += ',';\n                    context.urlText += param.name + '=' + value;\n                }\n            }\n            context.urlText += ')';\n        }\n    },\n    VisitProjectionExpression: function VisitProjectionExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        var projectionCompiler = _core.Container.createoDataProjectionCompiler(this.provider);\n        projectionCompiler.compile(expression, context);\n    },\n    VisitFilterExpression: function VisitFilterExpression(expression, context) {\n        ///<param name=\"expression\" type=\"$data.Expressions.FilterExpression\" />\n\n        this.Visit(expression.source, context);\n\n        var filterCompiler = _core.Container.createoDataWhereCompiler(this.provider);\n        context.data = \"\";\n        filterCompiler.compile(expression.selector, context);\n        context[\"$filter\"] = context.data;\n        context.data = \"\";\n    },\n    VisitInlineCountExpression: function VisitInlineCountExpression(expression, context) {\n        this.Visit(expression.source, context);\n        if (this.provider.providerConfiguration.maxDataServiceVersion === \"4.0\") {\n            context[\"$count\"] = expression.selector.value === 'allpages';\n        } else {\n            context[\"$inlinecount\"] = expression.selector.value;\n        }\n    },\n    VisitEntitySetExpression: function VisitEntitySetExpression(expression, context) {\n        this.Visit(expression.source, context);\n        context.urlText += \"/\" + expression.instance.tableName;\n        //this.logicalType = expression.instance.elementType;\n        if (expression.params) {\n            for (var i = 0; i < expression.params.length; i++) {\n                this.Visit(expression.params[i], context);\n            }\n        }\n    },\n    VisitServiceOperationExpression: function VisitServiceOperationExpression(expression, context) {\n        if (expression.boundItem) {\n            context.urlText += \"/\" + expression.boundItem.entitySet.tableName;\n            if (expression.boundItem.data instanceof _core2.default.Entity) {\n                context.urlText += '(' + this.provider.getEntityKeysValue(expression.boundItem) + ')';\n            }\n        }\n        context.urlText += \"/\" + (expression.cfg.namespace ? expression.cfg.namespace + \".\" + expression.cfg.serviceName : expression.cfg.serviceName);\n        context.method = context.method || expression.cfg.method;\n\n        //this.logicalType = expression.returnType;\n        if (expression.params) {\n            context.serviceConfig = expression.cfg;\n            for (var i = 0; i < expression.params.length; i++) {\n                this.Visit(expression.params[i], context);\n            }\n            delete context.serviceConfig;\n        }\n    },\n    VisitBatchDeleteExpression: function VisitBatchDeleteExpression(expression, context) {\n        this.Visit(expression.source, context);\n        context.urlText += '/$batchDelete';\n        context.method = 'DELETE';\n    },\n\n    VisitConstantExpression: function VisitConstantExpression(expression, context) {\n        var typeName = _core.Container.resolveName(expression.type);\n        if (expression.value instanceof _core2.default.Entity) typeName = _core2.default.Entity.fullName;\n\n        var converter = this.provider.fieldConverter.toDb[typeName];\n        var value = converter ? converter(expression.value, expression) : expression.value;\n\n        if (context.method === 'GET' || !context.method) {\n            converter = this.provider.fieldConverter.escape[typeName];\n            value = converter ? converter(value, expression) : value;\n            if (value !== undefined) {\n                var serviceConfig = context.serviceConfig || {};\n                var paramConfig = serviceConfig && serviceConfig.params.filter(function (p) {\n                    return p.name == expression.name;\n                })[0] || {};\n\n                var useAlias = serviceConfig.namespace && (paramConfig.useAlias || serviceConfig.useAlias || this.provider.providerConfiguration.useParameterAlias || _core2.default.defaults.OData.useParameterAlias);\n\n                var paramValue = useAlias ? \"@\" + expression.name : value;\n                var paramName = (useAlias ? \"@\" : \"\") + expression.name;\n\n                if (context['$funcParams']) {\n                    context['$funcParams'] += ',';\n                } else {\n                    context['$funcParams'] = '';\n                }\n                context['$funcParams'] += expression.name + '=' + paramValue;\n\n                if (useAlias) {\n                    if (context['$urlParams']) {\n                        context['$urlParams'] += '&';\n                    } else {\n                        context['$urlParams'] = '';\n                    }\n                    context['$urlParams'] += paramName + '=' + value;\n                }\n            }\n        } else {\n            context.postData = context.postData || {};\n            context.postData[expression.name] = value;\n        }\n    },\n    //    VisitConstantExpression: function (expression, context) {\n    //        if (context['$urlParams']) { context['$urlParams'] += '&'; } else { context['$urlParams'] = ''; }\n    //\n    //\n    //        var valueType = Container.getTypeName(expression.value);\n    //\n    //\n    //\n    //        context['$urlParams'] += expression.name + '=' + this.provider.fieldConverter.toDb[Container.resolveName(Container.resolveType(valueType))](expression.value);\n    //    },\n\n\n    VisitCountExpression: function VisitCountExpression(expression, context) {\n        this.Visit(expression.source, context);\n        context.urlText += '/$count';\n    },\n\n    VisitBatchExecuteQueryExpression: function VisitBatchExecuteQueryExpression(expression, context) {\n        context.urlText += '/$batch';\n        context.method = 'POST';\n        context.postData = { __batchRequests: [] };\n        context._isBatchExecuteQuery = true;\n        context._subQueries = expression.members;\n\n        for (var i = 0; i < expression.members.length; i++) {\n            var queryable = expression.members[i];\n            var compiler = new _core2.default.storageProviders.oData.oDataCompiler();\n            var compiled = compiler.compile(queryable);\n            context.postData.__batchRequests.push({\n                requestUri: this.provider.providerConfiguration.oDataServiceHost + compiled.queryText,\n                method: compiled.method,\n                data: compiled.data,\n                headers: compiled.headers\n            });\n        }\n    },\n\n    VisitDistinctExpression: function VisitDistinctExpression(expression, context) {\n        var _context$groupby;\n\n        this.Visit(expression.source, context);\n        context.groupby = context.groupby || [];\n        (_context$groupby = context.groupby).push.apply(_context$groupby, _toConsumableArray(context.$select.split(',')));\n    },\n\n    VisitGroupExpression: function VisitGroupExpression(expression, context) {\n        var _context$groupby2;\n\n        this.Visit(expression.source, context);\n\n        var groupContext = Object.assign({}, context);\n        var orderCompiler = _core.Container.createoDataOrderCompiler(this.provider);\n        orderCompiler.compile(expression.selector, groupContext);\n\n        context.groupby = context.groupby || [];\n        (_context$groupby2 = context.groupby).push.apply(_context$groupby2, _toConsumableArray(groupContext.data.split(',')));\n    }\n}, {});\n\n},{\"jaydata/core\":\"jaydata/core\"}],6:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _atob = (typeof window !== \"undefined\" ? window['atob'] : typeof global !== \"undefined\" ? global['atob'] : null);\n\nvar _atob2 = _interopRequireDefault(_atob);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_core2.default.defaults = _core2.default.defaults || {};\n_core2.default.defaults.oDataWebApi = false;\n\n_core2.default.oDataConverter = {\n    fromDb: {\n        '$data.Enum': function $dataEnum(v, enumType) {\n            return _core2.default.Container.convertTo(v, enumType);\n        },\n        '$data.Byte': _core2.default.Container.proxyConverter,\n        '$data.SByte': _core2.default.Container.proxyConverter,\n        '$data.Decimal': function $dataDecimal(v) {\n            return _core2.default.Container.convertTo(v, _core2.default.Decimal);\n        },\n        '$data.Float': _core2.default.Container.proxyConverter,\n        '$data.Int16': _core2.default.Container.proxyConverter,\n        '$data.Int64': function $dataInt64(v) {\n            return _core2.default.Container.convertTo(v, _core2.default.Int64);\n        },\n        '$data.ObjectID': _core2.default.Container.proxyConverter,\n        '$data.Integer': _core2.default.Container.proxyConverter, //function (number) { return (typeof number === 'string' && /^\\d+$/.test(number)) ? parseInt(number) : number; },\n        '$data.Int32': _core2.default.Container.proxyConverter,\n        '$data.Number': _core2.default.Container.proxyConverter,\n        '$data.Date': function $dataDate(dbData) {\n            if (dbData) {\n                if (dbData instanceof Date) {\n                    return dbData;\n                } else if (dbData.substring(0, 6) === '/Date(') {\n                    return new Date(parseInt(dbData.substr(6)));\n                } else {\n                    //ISODate without Z? Safari compatible with Z\n                    if (dbData.indexOf('Z') === -1 && !dbData.match('T.*[+-]')) dbData += 'Z';\n                    return new Date(dbData);\n                }\n            } else {\n                return dbData;\n            }\n        },\n        '$data.DateTimeOffset': function $dataDateTimeOffset(dbData) {\n            if (dbData) {\n                if (dbData instanceof Date) {\n                    return dbData;\n                } else if (dbData.substring(0, 6) === '/Date(') {\n                    return new Date(parseInt(dbData.substr(6)));\n                } else {\n                    //ISODate without Z? Safari compatible with Z\n                    if (dbData.indexOf('Z') === -1 && !dbData.match('T.*[+-]')) dbData += 'Z';\n                    return new Date(dbData);\n                }\n            } else {\n                return dbData;\n            }\n        },\n        '$data.Time': function $dataTime(v) {\n            return _core2.default.Container.convertTo(v, _core2.default.Time);\n        },\n        '$data.Day': _core2.default.Container.proxyConverter,\n        '$data.Duration': _core2.default.Container.proxyConverter,\n        '$data.String': _core2.default.Container.proxyConverter,\n        '$data.Boolean': _core2.default.Container.proxyConverter,\n        '$data.Blob': function $dataBlob(v) {\n            if (typeof v == 'string') {\n                try {\n                    return _core2.default.Container.convertTo((0, _atob2.default)(v), '$data.Blob');\n                } catch (e) {\n                    return v;\n                }\n            } else return v;\n        },\n        '$data.Object': function $dataObject(o) {\n            if (o === undefined) {\n                return new _core2.default.Object();\n            } else if (typeof o === 'string') {\n                return JSON.parse(o);\n            }return o;\n        },\n        '$data.Array': function $dataArray(o) {\n            if (o === undefined) {\n                return new _core2.default.Array();\n            } else if (o instanceof _core2.default.Array) {\n                return o;\n            }return JSON.parse(o);\n        },\n        '$data.GeographyPoint': function $dataGeographyPoint(g) {\n            if (g) {\n                return new _core2.default.GeographyPoint(g);\n            }return g;\n        },\n        '$data.GeographyLineString': function $dataGeographyLineString(g) {\n            if (g) {\n                return new _core2.default.GeographyLineString(g);\n            }return g;\n        },\n        '$data.GeographyPolygon': function $dataGeographyPolygon(g) {\n            if (g) {\n                return new _core2.default.GeographyPolygon(g);\n            }return g;\n        },\n        '$data.GeographyMultiPoint': function $dataGeographyMultiPoint(g) {\n            if (g) {\n                return new _core2.default.GeographyMultiPoint(g);\n            }return g;\n        },\n        '$data.GeographyMultiLineString': function $dataGeographyMultiLineString(g) {\n            if (g) {\n                return new _core2.default.GeographyMultiLineString(g);\n            }return g;\n        },\n        '$data.GeographyMultiPolygon': function $dataGeographyMultiPolygon(g) {\n            if (g) {\n                return new _core2.default.GeographyMultiPolygon(g);\n            }return g;\n        },\n        '$data.GeographyCollection': function $dataGeographyCollection(g) {\n            if (g) {\n                return new _core2.default.GeographyCollection(g);\n            }return g;\n        },\n        '$data.GeometryPoint': function $dataGeometryPoint(g) {\n            if (g) {\n                return new _core2.default.GeometryPoint(g);\n            }return g;\n        },\n        '$data.GeometryLineString': function $dataGeometryLineString(g) {\n            if (g) {\n                return new _core2.default.GeometryLineString(g);\n            }return g;\n        },\n        '$data.GeometryPolygon': function $dataGeometryPolygon(g) {\n            if (g) {\n                return new _core2.default.GeometryPolygon(g);\n            }return g;\n        },\n        '$data.GeometryMultiPoint': function $dataGeometryMultiPoint(g) {\n            if (g) {\n                return new _core2.default.GeometryMultiPoint(g);\n            }return g;\n        },\n        '$data.GeometryMultiLineString': function $dataGeometryMultiLineString(g) {\n            if (g) {\n                return new _core2.default.GeometryMultiLineString(g);\n            }return g;\n        },\n        '$data.GeometryMultiPolygon': function $dataGeometryMultiPolygon(g) {\n            if (g) {\n                return new _core2.default.GeometryMultiPolygon(g);\n            }return g;\n        },\n        '$data.GeometryCollection': function $dataGeometryCollection(g) {\n            if (g) {\n                return new _core2.default.GeometryCollection(g);\n            }return g;\n        },\n        '$data.Guid': function $dataGuid(guid) {\n            return guid ? guid.toString() : guid;\n        }\n    },\n    toDb: {\n        '$data.Enum': function $dataEnum(e, enumType) {\n            return e !== null && e !== undefined ? enumType && enumType.getEnumName ? enumType.getEnumName(e) : \"\" : e;\n        },\n        '$data.Entity': _core2.default.Container.proxyConverter,\n        '$data.Byte': _core2.default.Container.proxyConverter,\n        '$data.SByte': _core2.default.Container.proxyConverter,\n        '$data.Decimal': _core2.default.Container.proxyConverter, //function (v) { return v ? parseFloat(v) : v },\n        '$data.Float': _core2.default.Container.proxyConverter,\n        '$data.Int16': _core2.default.Container.proxyConverter,\n        '$data.Int64': _core2.default.Container.proxyConverter, //function (v) { return v ? parseInt(v) : v },\n        '$data.ObjectID': _core2.default.Container.proxyConverter,\n        '$data.Integer': _core2.default.Container.proxyConverter,\n        '$data.Int32': _core2.default.Container.proxyConverter,\n        '$data.Number': _core2.default.Container.proxyConverter,\n        '$data.Date': function $dataDate(e) {\n            return e ? e.toISOString().replace('Z', '') : e;\n        },\n        '$data.Time': _core2.default.Container.proxyConverter,\n        '$data.Day': _core2.default.Container.proxyConverter,\n        '$data.Duration': _core2.default.Container.proxyConverter,\n        '$data.DateTimeOffset': function $dataDateTimeOffset(v) {\n            return v ? v.toISOString() : v;\n        },\n        '$data.String': _core2.default.Container.proxyConverter,\n        '$data.Boolean': _core2.default.Container.proxyConverter,\n        '$data.Blob': function $dataBlob(v) {\n            return v ? _core2.default.Blob.toBase64(v) : v;\n        },\n        '$data.Object': _core2.default.Container.proxyConverter,\n        '$data.Array': function $dataArray(o, def) {\n            if (o && def && def.elementType) {\n                var typeName = _core.Container.resolveName(def.elementType);\n                var converter = _core2.default.oDataConverter['toDb'][typeName];\n                var values = [];\n                for (var i = 0; i < o.length; i++) {\n                    values.push(converter ? converter(o[i]) : o[i]);\n                }\n\n                return values;\n            }\n            return _core2.default.Container.proxyConverter.apply(this, arguments);\n        },\n        '$data.GeographyPoint': _core2.default.Container.proxyConverter,\n        '$data.GeographyLineString': _core2.default.Container.proxyConverter,\n        '$data.GeographyPolygon': _core2.default.Container.proxyConverter,\n        '$data.GeographyMultiPoint': _core2.default.Container.proxyConverter,\n        '$data.GeographyMultiLineString': _core2.default.Container.proxyConverter,\n        '$data.GeographyMultiPolygon': _core2.default.Container.proxyConverter,\n        '$data.GeographyCollection': _core2.default.Container.proxyConverter,\n        '$data.GeometryPoint': _core2.default.Container.proxyConverter,\n        '$data.GeometryLineString': _core2.default.Container.proxyConverter,\n        '$data.GeometryPolygon': _core2.default.Container.proxyConverter,\n        '$data.GeometryMultiPoint': _core2.default.Container.proxyConverter,\n        '$data.GeometryMultiLineString': _core2.default.Container.proxyConverter,\n        '$data.GeometryMultiPolygon': _core2.default.Container.proxyConverter,\n        '$data.GeometryCollection': _core2.default.Container.proxyConverter,\n        '$data.Guid': _core2.default.Container.proxyConverter\n    },\n    escape: {\n        '$data.Enum': function $dataEnum(e, enumType) {\n            return e !== null && e !== undefined ? (enumType ? enumType.fullName : \"\") + \"'\" + e + \"'\" : e;\n        },\n        '$data.Entity': function $dataEntity(e) {\n            return JSON.stringify(e);\n        },\n        '$data.Integer': _core2.default.Container.proxyConverter,\n        '$data.Int32': _core2.default.Container.proxyConverter,\n        '$data.Number': function $dataNumber(v) {\n            return v && _core2.default.defaults.oDataWebApi ? v + 'd' : v;\n        },\n        '$data.Int16': _core2.default.Container.proxyConverter,\n        '$data.Byte': _core2.default.Container.proxyConverter,\n        '$data.SByte': _core2.default.Container.proxyConverter,\n        '$data.Decimal': function $dataDecimal(v) {\n            return v && _core2.default.defaults.oDataWebApi ? v + 'm' : v;\n        },\n        '$data.Float': function $dataFloat(v) {\n            return v && _core2.default.defaults.oDataWebApi ? v + 'f' : v;\n        },\n        '$data.Int64': _core2.default.Container.proxyConverter,\n        '$data.Time': _core2.default.Container.proxyConverter,\n        '$data.Day': _core2.default.Container.proxyConverter,\n        '$data.Duration': function $dataDuration(v) {\n            return v ? \"duration'\" + v + \"'\" : v;\n        },\n        '$data.DateTimeOffset': function $dataDateTimeOffset(d) {\n            return d ? encodeURIComponent(d) : d;\n        },\n        '$data.Date': function $dataDate(date) {\n            return date ? \"datetime'\" + date + \"'\" : date;\n        },\n        '$data.String': function $dataString(text) {\n            return typeof text === 'string' ? \"'\" + text.replace(/'/g, \"''\") + \"'\" : text;\n        },\n        '$data.ObjectID': function $dataObjectID(text) {\n            return typeof text === 'string' ? \"'\" + text.replace(/'/g, \"''\") + \"'\" : text;\n        },\n        '$data.Boolean': function $dataBoolean(bool) {\n            return typeof bool === 'boolean' ? bool.toString() : bool;\n        },\n        '$data.Blob': function $dataBlob(b) {\n            return b ? \"binary'\" + b + \"'\" : b;\n        },\n        '$data.Object': function $dataObject(o) {\n            return JSON.stringify(o);\n        },\n        '$data.Array': function $dataArray(o, def) {\n            if (o && def && def.elementType) {\n                var typeName = _core.Container.resolveName(def.elementType);\n                var values = [];\n                for (var i = 0; i < o.length; i++) {\n                    values.push(_core2.default.oDataConverter['escape'][typeName](o[i]));\n                }\n\n                return \"[\" + values.join(',') + \"]\";\n            }\n            return JSON.stringify(o);\n        },\n        '$data.GeographyPoint': function $dataGeographyPoint(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeographyLineString': function $dataGeographyLineString(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeographyPolygon': function $dataGeographyPolygon(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeographyMultiPoint': function $dataGeographyMultiPoint(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeographyMultiLineString': function $dataGeographyMultiLineString(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeographyMultiPolygon': function $dataGeographyMultiPolygon(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeographyCollection': function $dataGeographyCollection(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryPoint': function $dataGeometryPoint(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryLineString': function $dataGeometryLineString(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryPolygon': function $dataGeometryPolygon(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryMultiPoint': function $dataGeometryMultiPoint(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryMultiLineString': function $dataGeometryMultiLineString(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryMultiPolygon': function $dataGeometryMultiPolygon(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryCollection': function $dataGeometryCollection(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.Guid': function $dataGuid(guid) {\n            return guid ? \"\" + guid.toString() + \"\" : guid;\n        }\n    },\n    unescape: {\n        '$data.Entity': function $dataEntity(v, c) {\n            var config = c || {};\n            var value = JSON.parse(v);\n            if (value && config.type) {\n                var type = _core.Container.resolveType(config.type);\n                /*Todo converter*/\n                return new type(value, { converters: undefined });\n            }\n            return value;\n        },\n        '$data.Number': function $dataNumber(v) {\n            return JSON.parse(v);\n        },\n        '$data.Integer': function $dataInteger(v) {\n            return JSON.parse(v);\n        },\n        '$data.Int32': function $dataInt32(v) {\n            return JSON.parse(v);\n        },\n        '$data.Byte': function $dataByte(v) {\n            return JSON.parse(v);\n        },\n        '$data.SByte': function $dataSByte(v) {\n            return JSON.parse(v);\n        },\n        '$data.Decimal': function $dataDecimal(v) {\n            if (typeof v === 'string' && v.toLowerCase().lastIndexOf('m') === v.length - 1) {\n                return v.substr(0, v.length - 1);\n            } else {\n                return v;\n            }\n        },\n        '$data.Float': function $dataFloat(v) {\n            if (typeof v === 'string' && v.toLowerCase().lastIndexOf('f') === v.length - 1) {\n                return v.substr(0, v.length - 1);\n            } else {\n                return v;\n            }\n        },\n        '$data.Int16': function $dataInt16(v) {\n            return JSON.parse(v);\n        },\n        '$data.Int64': function $dataInt64(v) {\n            return v;\n        },\n        '$data.Boolean': function $dataBoolean(v) {\n            return JSON.parse(v);\n        },\n        '$data.Date': function $dataDate(v) {\n            if (typeof v === 'string' && /^datetime'/.test(v)) {\n                return v.slice(9, v.length - 1);\n            }\n            return v;\n        },\n        '$data.String': function $dataString(v) {\n            if (typeof v === 'string' && v.indexOf(\"'\") === 0 && v.lastIndexOf(\"'\") === v.length - 1) {\n                return v.slice(1, v.length - 1);\n            } else {\n                return v;\n            }\n        },\n        '$data.ObjectID': function $dataObjectID(v) {\n            if (typeof v === 'string' && v.indexOf(\"'\") === 0 && v.lastIndexOf(\"'\") === v.length - 1) {\n                return v.slice(1, v.length - 1);\n            } else {\n                return v;\n            }\n        },\n        '$data.Guid': function $dataGuid(v) {\n            if (/^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$/.test(v)) {\n                var data = v.slice(5, v.length - 1);\n                return _core2.default.parseGuid(data).toString();\n            }\n            return v;\n        },\n        '$data.Array': function $dataArray(v, c) {\n            var config = c || {};\n\n            var value = JSON.parse(v) || [];\n            if (value && config.elementType) {\n                var type = _core.Container.resolveType(config.elementType);\n                var typeName = _core.Container.resolveName(type);\n                if (type && type.isAssignableTo && type.isAssignableTo(_core2.default.Entity)) {\n                    typeName = _core2.default.Entity.fullName;\n                }\n\n                if (Array.isArray(value)) {\n                    var converter = _core2.default.oDataConverter.unescape[typeName];\n                    for (var i = 0; i < value.length; i++) {\n                        value[i] = converter ? converter(value[i]) : value[i];\n                    }\n                }\n                return value;\n            }\n            return value;\n        },\n        '$data.DateTimeOffset': function $dataDateTimeOffset(v) {\n            if (typeof v === 'string') {\n                return _core2.default.Container.convertTo(v, _core2.default.DateTimeOffset);\n            }\n            return v;\n        },\n        '$data.Time': function $dataTime(v) {\n            if (typeof v === 'string' && /^time'/.test(v)) {\n                return _core2.default.Container.convertTo(v.slice(5, v.length - 1), _core2.default.Time);\n            }\n            return v;\n        },\n        '$data.Day': function $dataDay(v) {\n            if (typeof v === 'string' && /^date'/.test(v)) {\n                return _core2.default.Container.convertTo(v.slice(5, v.length - 1), _core2.default.Day);\n            }\n            return v;\n        },\n        '$data.Duration': function $dataDuration(v) {\n            if (typeof v === 'string' && /^duration'/.test(v)) {\n                return _core2.default.Container.convertTo(v.slice(9, v.length - 1), _core2.default.Duration);\n            }\n            return v;\n        },\n        '$data.Blob': function $dataBlob(v) {\n            if (typeof v === 'string') {\n                if (/^X'/.test(v)) {\n                    return _core2.default.Blob.createFromHexString(v.slice(2, v.length - 1));\n                } else if (/^binary'/.test(v)) {\n                    return _core2.default.Blob.createFromHexString(v.slice(7, v.length - 1));\n                }\n            }\n            return v;\n        },\n        '$data.Object': function $dataObject(v) {\n            return JSON.parse(v);\n        },\n        '$data.GeographyPoint': function $dataGeographyPoint(v) {\n            if (/^geography'POINT\\(/i.test(v)) {\n                var data = v.slice(10, v.length - 1);\n                return _core2.default.GeographyBase.parseFromString(data);\n            }\n            return v;\n        },\n        '$data.GeographyPolygon': function $dataGeographyPolygon(v) {\n            if (/^geography'POLYGON\\(/i.test(v)) {\n                var data = v.slice(10, v.length - 1);\n                return _core2.default.GeographyBase.parseFromString(data);\n            }\n            return v;\n        },\n        '$data.GeometryPoint': function $dataGeometryPoint(v) {\n            if (/^geometry'POINT\\(/i.test(v)) {\n                var data = v.slice(9, v.length - 1);\n                return _core2.default.GeometryBase.parseFromString(data);\n            }\n            return v;\n        },\n        '$data.GeometryPolygon': function $dataGeometryPolygon(v) {\n            if (/^geometry'POLYGON\\(/i.test(v)) {\n                var data = v.slice(9, v.length - 1);\n                return _core2.default.GeometryBase.parseFromString(data);\n            }\n            return v;\n        }\n    },\n    xmlEscape: {\n        '$data.Byte': function $dataByte(v) {\n            return v.toString();\n        },\n        '$data.SByte': function $dataSByte(v) {\n            return v.toString();\n        },\n        '$data.Decimal': function $dataDecimal(v) {\n            return v.toString();\n        },\n        '$data.Float': function $dataFloat(v) {\n            return v.toString();\n        },\n        '$data.Int16': function $dataInt16(v) {\n            return v.toString();\n        },\n        '$data.Int64': function $dataInt64(v) {\n            return v.toString();\n        },\n        '$data.Integer': function $dataInteger(v) {\n            return v.toString();\n        },\n        '$data.Int32': function $dataInt32(v) {\n            return v.toString();\n        },\n        '$data.Boolean': function $dataBoolean(v) {\n            return v.toString();\n        },\n        '$data.Blob': function $dataBlob(v) {\n            return _core2.default.Blob.toBase64(v);\n        },\n        '$data.Date': function $dataDate(v) {\n            return v.toISOString().replace('Z', '');\n        },\n        '$data.DateTimeOffset': function $dataDateTimeOffset(v) {\n            return v.toISOString();\n        },\n        '$data.Time': function $dataTime(v) {\n            return v.toString();\n        },\n        '$data.Day': function $dataDay(v) {\n            return v.toString();\n        },\n        '$data.Duration': function $dataDuration(v) {\n            return v.toString();\n        },\n        '$data.Number': function $dataNumber(v) {\n            return v.toString();\n        },\n        '$data.String': function $dataString(v) {\n            return v.toString();\n        },\n        '$data.ObjectID': function $dataObjectID(v) {\n            return v.toString();\n        },\n        '$data.Object': function $dataObject(v) {\n            return JSON.stringify(v);\n        },\n        '$data.Guid': function $dataGuid(v) {\n            return v.toString();\n        } /*,\r\n          '$data.GeographyPoint': function (v) { return this._buildSpatialPoint(v, 'http://www.opengis.net/def/crs/EPSG/0/4326'); },\r\n          '$data.GeometryPoint': function (v) { return this._buildSpatialPoint(v, 'http://www.opengis.net/def/crs/EPSG/0/0'); },\r\n          '$data.GeographyLineString': function (v) { return this._buildSpatialLineString(v, 'http://www.opengis.net/def/crs/EPSG/0/4326'); },\r\n          '$data.GeometryLineString': function (v) { return this._buildSpatialLineString(v, 'http://www.opengis.net/def/crs/EPSG/0/0'); }*/\n    },\n    simple: { //$value, $count\n        '$data.Byte': function $dataByte(v) {\n            return v.toString();\n        },\n        '$data.SByte': function $dataSByte(v) {\n            return v.toString();\n        },\n        '$data.Decimal': function $dataDecimal(v) {\n            return v.toString();\n        },\n        '$data.Float': function $dataFloat(v) {\n            return v.toString();\n        },\n        '$data.Int16': function $dataInt16(v) {\n            return v.toString();\n        },\n        '$data.Int64': function $dataInt64(v) {\n            return v.toString();\n        },\n        '$data.ObjectID': function $dataObjectID(o) {\n            return o.toString();\n        },\n        '$data.Integer': function $dataInteger(o) {\n            return o.toString();\n        },\n        '$data.Int32': function $dataInt32(o) {\n            return o.toString();\n        },\n        '$data.Number': function $dataNumber(o) {\n            return o.toString();\n        },\n        '$data.Date': function $dataDate(o) {\n            return o instanceof _core2.default.Date ? o.toISOString().replace('Z', '') : o.toString();\n        },\n        '$data.DateTimeOffset': function $dataDateTimeOffset(v) {\n            return v ? v.toISOString() : v;\n        },\n        '$data.Time': function $dataTime(o) {\n            return o.toString();\n        },\n        '$data.Day': function $dataDay(o) {\n            return o.toString();\n        },\n        '$data.Duration': function $dataDuration(o) {\n            return o.toString();\n        },\n        '$data.String': function $dataString(o) {\n            return o.toString();\n        },\n        '$data.Boolean': function $dataBoolean(o) {\n            return o.toString();\n        },\n        '$data.Blob': function $dataBlob(o) {\n            return o;\n        },\n        '$data.Object': function $dataObject(o) {\n            return JSON.stringify(o);\n        },\n        '$data.Array': function $dataArray(o) {\n            return JSON.stringify(o);\n        },\n        '$data.Guid': function $dataGuid(o) {\n            return o.toString();\n        },\n        '$data.GeographyPoint': function $dataGeographyPoint(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryPoint': function $dataGeometryPoint(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeographyLineString': function $dataGeographyLineString(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeographyPolygon': function $dataGeographyPolygon(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeographyMultiPoint': function $dataGeographyMultiPoint(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeographyMultiLineString': function $dataGeographyMultiLineString(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeographyMultiPolygon': function $dataGeographyMultiPolygon(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeographyCollection': function $dataGeographyCollection(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryLineString': function $dataGeometryLineString(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryPolygon': function $dataGeometryPolygon(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryMultiPoint': function $dataGeometryMultiPoint(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryMultiLineString': function $dataGeometryMultiLineString(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryMultiPolygon': function $dataGeometryMultiPolygon(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryCollection': function $dataGeometryCollection(o) {\n            return JSON.stringify(o);\n        }\n    }\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"jaydata/core\":\"jaydata/core\"}],7:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ODataIncludeFragment = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ODataIncludeFragment = exports.ODataIncludeFragment = function () {\n    function ODataIncludeFragment(name) {\n        _classCallCheck(this, ODataIncludeFragment);\n\n        this.name = name;\n        this.$expand = [];\n        this.$operators = [];\n    }\n\n    _createClass(ODataIncludeFragment, [{\n        key: 'toString',\n        value: function toString() {\n            var data = '';\n            if (this.$expand.length) {\n                if (this.name) {\n                    data += this.name + '($expand=';\n                }\n                for (var i = 0; i < this.$expand.length; i++) {\n                    if (i !== 0) data += ',';\n                    data += this[this.$expand[i]].toString();\n                }\n                if (this.name) {\n                    data += ')';\n                }\n            }\n\n            if (this.name) {\n                for (var _i = 0; _i < this.$operators.length; _i++) {\n                    var operator = this.$operators[_i];\n                    var values = this[operator];\n                    for (var j = 0; j < values.length; j++) {\n                        if (data) data += ',';\n                        data += this.name + '(' + operator + '=';\n                        data += values[j];\n                        data += ')';\n                    }\n                }\n            }\n\n            if (this.name && !data) {\n                data = this.name;\n            }\n\n            return data;\n        }\n    }, {\n        key: 'addInclude',\n        value: function addInclude(path, map) {\n            this._createIncludePath(path);\n        }\n    }, {\n        key: 'addImplicitMap',\n        value: function addImplicitMap(path, map) {\n            var includedFragment = this._createIncludePath(path);\n            this._setImplicitMap(includedFragment, map);\n        }\n    }, {\n        key: '_createIncludePath',\n        value: function _createIncludePath(path) {\n            if (!path) return this;\n            var inc = path;\n\n            var current = this;\n            for (var i = 0; i < inc.length; i++) {\n                var it = inc[i];\n                var included = true;\n                if (current.$expand.indexOf(it) < 0) {\n                    included = false;\n                    current.$expand.push(it);\n                    current[it] = new ODataIncludeFragment(it);\n                    current[it].__implicit = true;\n                }\n\n                current = current[it];\n                if (i < inc.length - 1 && current.__implicit) {\n                    this._setImplicitMap(current, inc[i + 1]);\n                }\n            }\n\n            return current;\n        }\n    }, {\n        key: '_setImplicitMap',\n        value: function _setImplicitMap(includeFragment, map) {\n            if (map) {\n                if (includeFragment.$operators.indexOf('$select') < 0) {\n                    if (includeFragment.__implicit) {\n                        includeFragment.$operators.push('$select');\n                        includeFragment.$select = [map];\n                    }\n                } else if (includeFragment.$expand.indexOf(map) < 0) {\n                    includeFragment.$select[0] += ',' + map;\n                }\n            }\n        }\n    }]);\n\n    return ODataIncludeFragment;\n}();\n\n_core2.default.storageProviders.oData.ODataIncludeFragment = ODataIncludeFragment;\n\n(0, _core.$C)('$data.storageProviders.oData.oDataIncludeCompiler', _core2.default.Expressions.EntityExpressionVisitor, null, {\n    constructor: function constructor(provider) {\n        this.provider = provider;\n        this.entityContext = provider.context;\n    },\n\n    compile: function compile(expression, context) {\n        context.data = context.data || new ODataIncludeFragment();\n        context.current = context.data;\n        this.Visit(expression, context);\n    },\n    VisitParametricQueryExpression: function VisitParametricQueryExpression(expression, context) {\n        this.Visit(expression.expression, context);\n    },\n\n    VisitEntitySetExpression: function VisitEntitySetExpression(expression, context) {\n        this.Visit(expression.source, context);\n        if (expression.selector instanceof _core2.default.Expressions.AssociationInfoExpression) {\n            this.Visit(expression.selector, context);\n        }\n    },\n\n    VisitAssociationInfoExpression: function VisitAssociationInfoExpression(expression, context) {\n        var propName = expression.associationInfo.FromPropertyName;\n        var sm = this.entityContext._storageModel.getStorageModel(expression.associationInfo.FromType.inheritsFrom);\n        if (sm && !sm.IsComplexType) {\n            propName = expression.associationInfo.FromType.fullName + \"/\" + propName;\n        }\n\n        this.includePath = this.includePath ? this.includePath + '.' : \"\";\n        this.includePath += propName;\n\n        var currentPath = this.includePath;\n        if (!context.includes.some(function (include) {\n            return include.name == currentPath;\n        }, this)) {\n            context.includes.push({ name: currentPath, type: expression.associationInfo.ToType });\n        }\n\n        if (context.current.$expand.indexOf(propName) < 0) {\n            context.current.$expand.push(propName);\n            context.current[propName] = new ODataIncludeFragment(propName);\n        }\n        context.current = context.current[propName];\n    },\n\n    VisitFrameOperationExpression: function VisitFrameOperationExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        var opDef = expression.operation.memberDefinition;\n        if (opDef && opDef.includeFrameName) {\n            var opName = opDef.includeFrameName;\n            var paramCounter = 0;\n            var params = opDef.parameters || [{ name: \"@expression\" }];\n\n            var args = params.map(function (item, index) {\n                if (item.name === \"@expression\") {\n                    return expression.source;\n                } else {\n                    return expression.parameters[paramCounter++];\n                };\n            });\n\n            if (opDef.includeCompiler) {\n                for (var i = 0; i < args.length; i++) {\n                    var arg = args[i];\n                    var compilerType = _core.Container.resolveType(opDef.includeCompiler);\n                    var compiler = new compilerType(this.provider);\n                    var frameContext = { data: \"\", $expand: context.current };\n\n                    if (arg && arg.value instanceof _core2.default.Queryable) {\n                        var preparator = _core.Container.createQueryExpressionCreator(arg.value.entityContext);\n                        var prep_expression = preparator.Visit(arg.value.expression);\n                        arg = prep_expression;\n                    }\n\n                    var compiled = compiler.compile(arg, frameContext);\n\n                    if (context.current['$operators'].indexOf(opName) < 0) {\n                        context.current[opName] = [];\n                        context.current['$operators'].push(opName);\n                    }\n                    context.current[opName].push(frameContext[opName] || frameContext.data);\n                }\n            } else if (opDef.implementation) {\n                if (context.current['$operators'].indexOf(opName) < 0) {\n                    context.current[opName] = [];\n                    context.current['$operators'].push(opName);\n                }\n                context.current[opName].push(opDef.implementation());\n            }\n        }\n    }\n});\n\n},{\"jaydata/core\":\"jaydata/core\"}],8:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _core.$C)('$data.storageProviders.oData.oDataOrderCompiler', _core2.default.storageProviders.oData.oDataWhereCompiler, null, {\n    constructor: function constructor(provider) {\n        this.provider = provider;\n        this.entityContext = provider.context;\n    },\n\n    compile: function compile(expression, context) {\n        this.Visit(expression, context);\n    },\n    VisitOrderExpression: function VisitOrderExpression(expression, context) {\n        var orderContext = { data: \"\" };\n        this.Visit(expression.selector, orderContext);\n        if (context['$orderby']) {\n            context['$orderby'] += ',';\n        } else {\n            context['$orderby'] = '';\n        }\n        context['$orderby'] += orderContext.data + (expression.nodeType == _core2.default.Expressions.ExpressionType.OrderByDescending ? \" desc\" : \"\");\n    },\n    VisitParametricQueryExpression: function VisitParametricQueryExpression(expression, context) {\n        this.Visit(expression.expression, context);\n    },\n    VisitEntityFieldExpression: function VisitEntityFieldExpression(expression, context) {\n        this.Visit(expression.source, context);\n        this.Visit(expression.selector, context);\n    },\n    VisitComplexTypeExpression: function VisitComplexTypeExpression(expression, context) {\n        this.Visit(expression.source, context);\n        this.Visit(expression.selector, context);\n        context.data += \"/\";\n    },\n    VisitEntitySetExpression: function VisitEntitySetExpression(expression, context) {\n        if (expression.selector instanceof _core2.default.Expressions.AssociationInfoExpression) {\n            this.Visit(expression.source, context);\n            this.Visit(expression.selector, context);\n        }\n    },\n    VisitAssociationInfoExpression: function VisitAssociationInfoExpression(expression, context) {\n        var propName = expression.associationInfo.FromPropertyName;\n        var sm = this.entityContext._storageModel.getStorageModel(expression.associationInfo.FromType.inheritsFrom);\n        if (sm && !sm.IsComplexType) {\n            propName = expression.associationInfo.FromType.fullName + \"/\" + propName;\n        }\n        context.data += propName + '/';\n    },\n    VisitEntityExpression: function VisitEntityExpression(expression, context) {\n        this.Visit(expression.source, context);\n        this.Visit(expression.selector, context);\n    },\n    VisitMemberInfoExpression: function VisitMemberInfoExpression(expression, context) {\n        var propName = expression.memberName;\n        var sm = this.entityContext._storageModel.getStorageModel(expression.memberDefinition.definedBy.inheritsFrom);\n        if (sm && !sm.IsComplexType) {\n            propName = expression.memberDefinition.definedBy.fullName + \"/\" + propName;\n        }\n        context.data += propName;\n    },\n    VisitEntityFieldOperationExpression: function VisitEntityFieldOperationExpression(expression, context) {\n        _core.Guard.requireType(\"expression.operation\", expression.operation, _core2.default.Expressions.MemberInfoExpression);\n\n        //TODO refactor!\n        var opDef = expression.operation.memberDefinition;\n        var opName = opDef.mapTo || opDef.name;\n        context.data += opName;\n        context.data += \"(\";\n        var paramCounter = 0;\n        var params = opDef.parameters || [{ name: \"@expression\" }];\n\n        var args = params.map(function (item, index) {\n            if (item.name === \"@expression\") {\n                return expression.source;\n            } else {\n                return expression.parameters[paramCounter++];\n            };\n        });\n\n        args.forEach(function (arg, index) {\n            if (index > 0) {\n                context.data += \",\";\n            };\n            this.Visit(arg, context);\n        }, this);\n        context.data += \")\";\n    },\n    VisitEntityFunctionOperationExpression: function VisitEntityFunctionOperationExpression(expression, context) {\n        _core.Guard.requireType(\"expression.operation\", expression.operation, _core2.default.Expressions.MemberInfoExpression);\n        this.Visit(expression.source, context);\n\n        //TODO refactor!\n        var opDef = expression.operation.memberDefinition;\n        var opName = opDef.mapTo || opDef.name;\n        context.data += opName;\n        context.data += \"(\";\n        var paramCounter = 0;\n        var params = opDef.method.params || [{ name: \"@expression\" }];\n\n        var args = params.map(function (item, index) {\n            if (item.name === \"@expression\") {\n                return expression.source;\n            } else {\n                return expression.parameters[paramCounter++];\n            };\n        });\n\n        var i = 0;\n        args.forEach(function (arg, index) {\n            if (arg === undefined || arg instanceof _core2.default.Expressions.ConstantExpression && typeof arg.value === 'undefined') return;\n\n            if (i > 0) {\n                context.data += \",\";\n            };\n            i++;\n            context.data += params[index].name + '=';\n            this.Visit(arg, context);\n        }, this);\n        context.data += \")\";\n    },\n    VisitContextFunctionOperationExpression: function VisitContextFunctionOperationExpression(expression, context) {\n        return this.VisitEntityFunctionOperationExpression(expression, context);\n    }\n});\n\n},{\"jaydata/core\":\"jaydata/core\"}],9:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _core.$C)('$data.storageProviders.oData.oDataPagingCompiler', _core2.default.Expressions.EntityExpressionVisitor, null, {\n    constructor: function constructor(provider) {\n        this.provider = provider;\n    },\n\n    compile: function compile(expression, context) {\n        this.Visit(expression, context);\n    },\n    VisitPagingExpression: function VisitPagingExpression(expression, context) {\n        var pagingContext = { data: \"\" };\n        this.Visit(expression.amount, pagingContext);\n        switch (expression.nodeType) {\n            case _core2.default.Expressions.ExpressionType.Skip:\n                context['$skip'] = pagingContext.data;break;\n            case _core2.default.Expressions.ExpressionType.Take:\n                context['$top'] = pagingContext.data;break;\n            default:\n                _core.Guard.raise(\"Not supported nodeType\");break;\n        }\n    },\n    VisitConstantExpression: function VisitConstantExpression(expression, context) {\n        var typeName = _core.Container.resolveName(expression.type);\n        var converter = this.provider.fieldConverter.escape[typeName];\n        context.data += converter ? converter(expression.value) : expression.value;\n    }\n});\n\n},{\"jaydata/core\":\"jaydata/core\"}],10:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _core.$C)('$data.storageProviders.oData.oDataProjectionCompiler', _core2.default.Expressions.EntityExpressionVisitor, null, {\n    constructor: function constructor(provider) {\n        this.provider = provider;\n        this.entityContext = provider.context;\n        this.hasObjectLiteral = false;\n        this.modelBinderMapping = [];\n    },\n\n    compile: function compile(expression, context) {\n        this.Visit(expression, context);\n    },\n    VisitProjectionExpression: function VisitProjectionExpression(expression, context) {\n        ///<summary></summary>\n        ///<param name=\"expression\" type=\"$data.Expressions.ProjectionExpression\" mayBeNull=\"false\"></param>\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\n        context.data = \"\";\n        this.mapping = [];\n\n        this.Visit(expression.selector, context);\n        if (context['$select']) {\n            context['$select'] += ',';\n        } else {\n            context['$select'] = '';\n        }\n        context[\"$select\"] += context.data;\n        context.data = \"\";\n    },\n    VisitParametricQueryExpression: function VisitParametricQueryExpression(expression, context) {\n        this.Visit(expression.expression, context);\n        var m = this.mapping.slice();\n\n        if (!(expression.expression instanceof _core2.default.Expressions.EntityExpression) && !(expression.expression instanceof _core2.default.Expressions.EntitySetExpression)) {\n            m.pop();\n        }\n\n        if (m.length > 0) {\n            if (!context['$expand'] || !(context['$expand'] instanceof _core2.default.storageProviders.oData.ODataIncludeFragment)) {\n                context['$expand'] = new _core2.default.storageProviders.oData.ODataIncludeFragment();\n            }\n            context['$expand'].addInclude(m);\n        }\n    },\n    VisitObjectLiteralExpression: function VisitObjectLiteralExpression(expression, context) {\n        ///<summary></summary>\n        ///<param name=\"expression\" type=\"$data.Expressions.ObjectLiteralExpression\" mayBeNull=\"false\"></param>\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\n\n        this.hasObjectLiteral = true;\n        expression.members.forEach(function (member, index) {\n            this.Visit(member, context);\n            if (index < expression.members.length - 1) {\n                context.data += ',';\n            }\n            this.mapping = [];\n        }, this);\n    },\n    VisitObjectFieldExpression: function VisitObjectFieldExpression(expression, context) {\n        this.Visit(expression.expression, context);\n\n        var m = this.mapping.slice();\n        var propertyName = \"\";\n        if (!(expression.expression instanceof _core2.default.Expressions.EntityExpression) && !(expression.expression instanceof _core2.default.Expressions.EntitySetExpression)) {\n            propertyName = m.pop();\n        }\n\n        if (m.length > 0) {\n            if (!context['$expand'] || !(context['$expand'] instanceof _core2.default.storageProviders.oData.ODataIncludeFragment)) {\n                context['$expand'] = new _core2.default.storageProviders.oData.ODataIncludeFragment();\n            }\n\n            if (expression.expression instanceof _core2.default.Expressions.EntityFieldExpression && expression.expression.selector instanceof _core2.default.Expressions.MemberInfoExpression) {\n                var storageModel = this.entityContext._storageModel.getStorageModel(expression.expression.selector.memberDefinition.definedBy);\n                if (!storageModel || storageModel.IsComplexType) return;\n\n                var isComplexProperty = storageModel && !!storageModel.ComplexTypes[expression.memberName];\n                if (isComplexProperty) {\n                    var complexProperty = m.pop();\n                    context['$expand'].addImplicitMap(m, complexProperty);\n                    return;\n                }\n            }\n\n            if (expression.expression instanceof _core2.default.Expressions.ComplexTypeExpression) {\n                context['$expand'].addImplicitMap(m, propertyName);\n            } else {\n                context['$expand'].addInclude(m);\n            }\n        }\n    },\n\n    VisitComplexTypeExpression: function VisitComplexTypeExpression(expression, context) {\n        this.Visit(expression.source, context);\n        this.Visit(expression.selector, context);\n    },\n\n    VisitEntityFieldExpression: function VisitEntityFieldExpression(expression, context) {\n        this.Visit(expression.source, context);\n        this.Visit(expression.selector, context);\n    },\n    VisitEntityExpression: function VisitEntityExpression(expression, context) {\n        ///<summary></summary>\n        ///<param name=\"expression\" type=\"$data.Expressions.EntityExpression\" mayBeNull=\"false\"></param>\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\n        this.Visit(expression.source, context);\n    },\n    VisitEntitySetExpression: function VisitEntitySetExpression(expression, context) {\n        ///<summary></summary>\n        ///<param name=\"expression\" type=\"$data.Expressions.EntitySetExpression\" mayBeNull=\"false\"></param>\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\n        if (expression.source instanceof _core2.default.Expressions.EntityExpression) {\n            this.Visit(expression.source, context);\n        }\n        if (expression.selector instanceof _core2.default.Expressions.AssociationInfoExpression) {\n            this.Visit(expression.selector, context);\n        }\n    },\n    VisitAssociationInfoExpression: function VisitAssociationInfoExpression(expression, context) {\n        var propName = expression.associationInfo.FromPropertyName;\n        var sm = this.entityContext._storageModel.getStorageModel(expression.associationInfo.FromType.inheritsFrom);\n        if (sm && !sm.IsComplexType) {\n            propName = expression.associationInfo.FromType.fullName + \"/\" + propName;\n        }\n        this.mapping.push(propName);\n\n        if (context.data && context.data.length > 0 && context.data[context.data.length - 1] != ',') {\n            if (!context['$expand'] || !(context['$expand'] instanceof _core2.default.storageProviders.oData.ODataIncludeFragment)) {\n                context['$expand'] = new _core2.default.storageProviders.oData.ODataIncludeFragment();\n            }\n            context['$expand'].addInclude(this.mapping);\n        } else {\n            context.data += propName;\n        }\n    },\n    VisitMemberInfoExpression: function VisitMemberInfoExpression(expression, context) {\n        var storageModel = this.entityContext._storageModel.getStorageModel(expression.memberDefinition.definedBy);\n        var isComplexProperty = storageModel && !storageModel.IsComplexType && !!storageModel.ComplexTypes[expression.memberName];\n        var isComplexField = !storageModel || storageModel.IsComplexType;\n\n        var propName = expression.memberName;\n        var sm = this.entityContext._storageModel.getStorageModel(expression.memberDefinition.definedBy.inheritsFrom);\n        if (sm && !sm.IsComplexType) {\n            propName = expression.memberDefinition.definedBy.fullName + \"/\" + propName;\n        }\n\n        if (context.data && context.data.length > 0 && context.data[context.data.length - 1] != ',') {\n            if (this.mapping) {\n                if (!context['$expand'] || !(context['$expand'] instanceof _core2.default.storageProviders.oData.ODataIncludeFragment)) {\n                    context['$expand'] = new _core2.default.storageProviders.oData.ODataIncludeFragment();\n                }\n                if (isComplexField) {\n                    var m = this.mapping.slice();\n                    var complexProperty = m.pop();\n                    if (this.provider.checkODataMode(\"disableCompltexTypeMapping\")) {\n                        context['$expand'].addImplicitMap(m, complexProperty);\n                    } else {\n                        context['$expand'].addImplicitMap(m, complexProperty + \"/\" + expression.memberName);\n                    }\n                } else if (!isComplexProperty) {\n                    context['$expand'].addImplicitMap(this.mapping, expression.memberName);\n                }\n            }\n        } else {\n            context.data += propName;\n        }\n\n        this.mapping.push(propName);\n    },\n    VisitConstantExpression: function VisitConstantExpression(expression, context) {\n        //Guard.raise(new Exception('Constant value is not supported in Projection.', 'Not supported!'));\n        //context.data += expression.value;\n        context.data = context.data.slice(0, context.data.length - 1);\n    },\n    VisitEntityFieldOperationExpression: function VisitEntityFieldOperationExpression(expression, context) {\n        _core.Guard.requireType(\"expression.operation\", expression.operation, _core2.default.Expressions.MemberInfoExpression);\n\n        var opDef = expression.operation.memberDefinition;\n        if (opDef.aggregate) {\n            var opName = opDef.mapTo || opDef.name;\n            context.aggregate = context.aggregate || [];\n\n            var temp = context.data;\n            this.Visit(expression.source, context);\n            var field = context.data.replace(temp, \"\");\n            context.data = temp.replace(/,$/, \"\");\n            context.aggregate.push(field + ' with ' + opName + ' as ' + field);\n        } else this.Visit(expression.source, context);\n    }\n});\n\n},{\"jaydata/core\":\"jaydata/core\"}],11:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _oDataRequestActivities = _dereq_('./oDataRequestActivities.js');\n\nvar activities = _interopRequireWildcard(_oDataRequestActivities);\n\nvar _empty = _dereq_('./SaveStrategies/empty');\n\nvar _single = _dereq_('./SaveStrategies/single');\n\nvar _batch = _dereq_('./SaveStrategies/batch');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_core2.default.defaults = _core2.default.defaults || {};\n_core2.default.defaults.OData = _core2.default.defaults.OData || {};\nif (!(\"withReferenceMethods\" in _core2.default.defaults.OData)) {\n    _core2.default.defaults.OData.withReferenceMethods = false;\n}\nif (!(\"disableBatch\" in _core2.default.defaults.OData)) {\n    _core2.default.defaults.OData.disableBatch = false;\n}\nif (!(\"eTagAny\" in _core2.default.defaults.OData)) {\n    _core2.default.defaults.OData.eTagAny = '*';\n}\nif (!(\"enableDeepSave\" in _core2.default.defaults.OData)) {\n    _core2.default.defaults.OData.enableDeepSave = false;\n}\nif (!(\"disableCompltexTypeMapping\" in _core2.default.defaults.OData)) {\n    _core2.default.defaults.OData.disableCompltexTypeMapping = false;\n}\n\nvar _checkODataMode = function _checkODataMode(context, functionName) {\n    if (typeof context.providerConfiguration[functionName] !== 'undefined') {\n        return !!context.providerConfiguration[functionName];\n    }\n    return !!_core2.default.defaults.OData[functionName];\n};\n\n(0, _core.$C)('$data.storageProviders.oData.RequestManager', _core2.default.Base, null, {\n    constructor: function constructor() {\n        this._items = [];\n        this._entities = [];\n    },\n    _items: { type: _core2.default.Array },\n    _entities: { type: _core2.default.Array },\n    add: function add(changedItem, request, countable) {\n        var item = {\n            data: changedItem,\n            entity: changedItem.data,\n            request: request,\n            itemIndex: ++this.maxItemIndex,\n            references: []\n        };\n\n        // request.headers = request.headers || {};\n        // request.headers[\"content-Id\"] = item.itemIndex; \n        request.add(new activities.SetHeaderProperty(\"content-Id\", item.itemIndex));\n\n        if (countable !== false) {\n            this.length++;\n        }\n\n        this._entities.push(item.entity);\n        this._items.push(item);\n\n        return item;\n    },\n    addItemReference: function addItemReference(entity, reference) {\n        var item = this.getItem(entity);\n        if (item) {\n            item.references.push(reference);\n        }\n    },\n    getItemIndex: function getItemIndex(entity) {\n        if (!entity) return -1;\n        var idx = this._entities.indexOf(entity);\n        if (idx >= 0 && !this._items[idx].removed) {\n            return this._items[idx].itemIndex;\n        }\n        return -1;\n    },\n    getItem: function getItem(entity, onlyAvailable) {\n        if (!entity) return null;\n        var idx = this._entities.indexOf(entity);\n        if (idx >= 0 && (!onlyAvailable || !this._items[idx].removed)) {\n            return this._items[idx];\n        }\n        return null;\n    },\n    remove: function remove(entity) {\n        var idx = this._entities.indexOf(entity);\n        if (idx >= 0) {\n            var item = this._items[idx];\n            if (!item.removed) {\n                this._items[idx].removed = true;\n                this.length--;\n                return true;\n            }\n        }\n        return false;\n    },\n    getItems: function getItems() {\n        return this._items.filter(function (it) {\n            return !it.removed;\n        });\n    },\n    getByResponse: function getByResponse(response, i) {\n        //use response.headers['content-id']\n\n        var idx = i;\n\n        if (!this._indexCalculated) {\n            this._indexCalculated = true;\n            this._dataForResult = this._items.filter(function (it) {\n                return !it.removed;\n            });\n        }\n\n        var item = this._dataForResult[idx++];\n        return item ? item.entity : null;\n    },\n    setProcessed: function setProcessed(entity) {\n        var idx = this._entities.indexOf(entity);\n        if (idx >= 0) {\n            var item = this._items[idx];\n            if (!item.isProcessed) {\n                this._items[idx].isProcessed = true;\n                return true;\n            }\n        }\n        return false;\n    },\n\n    maxItemIndex: { value: 0 },\n    length: { value: 0 }\n});\n\n(0, _core.$C)('$data.storageProviders.oData.oDataProvider', _core2.default.StorageProviderBase, null, {\n    constructor: function constructor(cfg, ctx) {\n        this.SqlCommands = [];\n        this.context = ctx;\n        this.providerConfiguration = _core2.default.typeSystem.extend({\n            dbCreation: _core2.default.storageProviders.DbCreationType.DropTableIfChanged,\n            oDataServiceHost: \"/odata.svc\",\n            serviceUrl: \"\",\n            maxDataServiceVersion: '4.0',\n            dataServiceVersion: undefined,\n            user: null,\n            password: null,\n            withCredentials: false,\n            //enableJSONP: undefined,\n            //useJsonLight: undefined\n            //disableBatch: undefined\n            //withReferenceMethods: undefined\n            //enableDeepSave: undefined\n            UpdateMethod: 'PATCH'\n        }, cfg);\n\n        if (typeof _core2.default.odatajs === 'undefined' || typeof _core2.default.odatajs.oData === 'undefined') {\n            if (typeof odatajs === 'undefined' || typeof odatajs.oData === 'undefined') {\n                _core.Guard.raise(new _core.Exception('odatajs is required', 'Not Found!'));\n            } else {\n                this.oData = odatajs.oData;\n            }\n        } else {\n            this.oData = _core2.default.odatajs.oData;\n        }\n\n        //this.fixkDataServiceVersions(cfg);\n\n        if (this.context && this.context._buildDbType_generateConvertToFunction && this.buildDbType_generateConvertToFunction) {\n            this.context._buildDbType_generateConvertToFunction = this.buildDbType_generateConvertToFunction;\n        }\n        if (this.context && this.context._buildDbType_modifyInstanceDefinition && this.buildDbType_modifyInstanceDefinition) {\n            this.context._buildDbType_modifyInstanceDefinition = this.buildDbType_modifyInstanceDefinition;\n        }\n    },\n    fixkDataServiceVersions: function fixkDataServiceVersions(cfg) {\n        if (this.providerConfiguration.dataServiceVersion > this.providerConfiguration.maxDataServiceVersion) {\n            this.providerConfiguration.dataServiceVersion = this.providerConfiguration.maxDataServiceVersion;\n        }\n\n        if (this.providerConfiguration.setDataServiceVersionToMax === true) {\n            this.providerConfiguration.dataServiceVersion = this.providerConfiguration.maxDataServiceVersion;\n        }\n\n        if (cfg && !cfg.UpdateMethod && this.providerConfiguration.dataServiceVersion < '3.0' || !this.providerConfiguration.dataServiceVersion) {\n            this.providerConfiguration.UpdateMethod = 'MERGE';\n        }\n    },\n    initializeStore: function initializeStore(callBack) {\n        callBack = _core2.default.PromiseHandlerBase.createCallbackSettings(callBack);\n        switch (this.providerConfiguration.dbCreation) {\n            case _core2.default.storageProviders.DbCreationType.DropAllExistingTables:\n                var that = this;\n                if (this.providerConfiguration.serviceUrl) {\n\n                    var requestData = [{\n                        requestUri: that.providerConfiguration.serviceUrl + \"/Delete\",\n                        method: 'POST'\n                    }, function (d) {\n                        //console.log(\"RESET oData database\");\n                        callBack.success(that.context);\n                    }, function (error) {\n                        callBack.success(that.context);\n                    }];\n\n                    this.appendBasicAuth(requestData[0], this.providerConfiguration.user, this.providerConfiguration.password, this.providerConfiguration.withCredentials);\n                    //if (this.providerConfiguration.user) {\n                    //    requestData[0].user = this.providerConfiguration.user;\n                    //    requestData[0].password = this.providerConfiguration.password || \"\";\n                    //}\n\n                    this.context.prepareRequest.call(this, requestData);\n                    this.oData.request.apply(this, requestData);\n                } else {\n                    callBack.success(that.context);\n                }\n                break;\n            default:\n                callBack.success(this.context);\n                break;\n        }\n    },\n    buildDbType_generateConvertToFunction: function buildDbType_generateConvertToFunction(storageModel, context) {\n        return function (logicalEntity, convertedItems) {\n            var dbInstance = new storageModel.PhysicalType();\n            dbInstance.entityState = logicalEntity.entityState;\n\n            storageModel.PhysicalType.memberDefinitions.getPublicMappedProperties().forEach(function (property) {\n                dbInstance.initData[property.name] = logicalEntity[property.name];\n            }, this);\n\n            if (storageModel.Associations) {\n                storageModel.Associations.forEach(function (association) {\n                    if (association.FromMultiplicity == \"*\" && association.ToMultiplicity == \"0..1\" || association.FromMultiplicity == \"0..1\" && association.ToMultiplicity == \"1\" || association.FromMultiplicity == '$$unbound') {\n                        var refValue = logicalEntity[association.FromPropertyName];\n                        if ( /*refValue !== null &&*/refValue !== undefined) {\n                            if (refValue instanceof _core2.default.Array) {\n                                dbInstance.initData[association.FromPropertyName] = dbInstance[association.FromPropertyName] || [];\n                                refValue.forEach(function (rv) {\n                                    var item = convertedItems.getItem(rv, true);\n                                    var contentId = item ? item.itemIndex : -1;\n                                    if (rv.entityState == _core2.default.EntityState.Modified || contentId < 0) {\n                                        var sMod = context._storageModel.getStorageModel(rv.getType());\n                                        var tblName = sMod.TableName;\n                                        var pk = '(' + context.storageProvider.getEntityKeysValue({ data: rv, entitySet: context.getEntitySetFromElementType(rv.getType()) }) + ')';\n                                        dbInstance.initData[association.FromPropertyName].push({ __metadata: { uri: tblName + pk } });\n                                    } else {\n                                        if (contentId < 0) {\n                                            _core.Guard.raise(\"Dependency graph error\");\n                                        }\n                                        //dbInstance.initData[association.FromPropertyName].push({ __metadata: { uri: \"$\" + (contentId) } });\n                                        dbInstance.initData[association.FromPropertyName].push({ __convertedRefence: item });\n                                    }\n                                }, this);\n                            } else if (refValue === null) {\n                                dbInstance.initData[association.FromPropertyName] = null;\n                            } else {\n                                var item = convertedItems.getItem(refValue, true);\n                                var contentId = item ? item.itemIndex : -1;\n                                if (refValue.entityState == _core2.default.EntityState.Modified || contentId < 0) {\n                                    var sMod = context._storageModel.getStorageModel(refValue.getType());\n                                    var tblName = sMod.TableName;\n                                    var pk = '(' + context.storageProvider.getEntityKeysValue({ data: refValue, entitySet: context.getEntitySetFromElementType(refValue.getType()) }) + ')';\n                                    dbInstance.initData[association.FromPropertyName] = { __metadata: { uri: tblName + pk } };\n                                } else {\n                                    if (contentId < 0) {\n                                        _core.Guard.raise(\"Dependency graph error\");\n                                    }\n                                    //dbInstance.initData[association.FromPropertyName] = { __metadata: { uri: \"$\" + (contentId) } };\n                                    dbInstance.initData[association.FromPropertyName] = { __convertedRefence: item };\n                                }\n                            }\n                        }\n                    }\n                }, this);\n            }\n            if (storageModel.ComplexTypes) {\n                storageModel.ComplexTypes.forEach(function (cmpType) {\n                    dbInstance.initData[cmpType.FromPropertyName] = logicalEntity[cmpType.FromPropertyName];\n                }, this);\n            }\n            return dbInstance;\n        };\n    },\n    buildDbType_modifyInstanceDefinition: function buildDbType_modifyInstanceDefinition() {\n        return;\n    },\n    executeQuery: function executeQuery(query, callBack) {\n        callBack = _core2.default.PromiseHandlerBase.createCallbackSettings(callBack);\n\n        var sql = {};\n        try {\n            sql = this._compile(query);\n        } catch (e) {\n            callBack.error(e);\n            return;\n        }\n        var schema = this.context;\n\n        var that = this;\n        var countProperty = \"@odata.count\";\n\n        var requestData = [{\n            requestUri: this.providerConfiguration.oDataServiceHost + sql.queryText,\n            method: sql.method,\n            data: sql.postData,\n            headers: {}\n        }, function (data, textStatus, jqXHR) {\n\n            if (!data && textStatus.body && !sql.isBatchExecuteQuery) data = JSON.parse(textStatus.body);\n            if (callBack.success) {\n                var processSuccess = function processSuccess(query, data, sql) {\n                    query.rawDataList = typeof data === 'string' ? [{ cnt: _core.Container.convertTo(data, _core2.default.Integer) }] : data;\n                    if (sql.withInlineCount && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object' && (typeof data[countProperty] !== 'undefined' || 'd' in data && typeof data.d[countProperty] !== 'undefined')) {\n                        query.__count = new Number(typeof data[countProperty] !== 'undefined' ? data[countProperty] : data.d[countProperty]).valueOf();\n                    }\n                };\n\n                if (sql.isBatchExecuteQuery) {\n                    query.rawDataList = sql.subQueries;\n                    for (var i = 0; i < data.__batchResponses.length; i++) {\n                        var resp = data.__batchResponses[i];\n\n                        if (!resp.data) {\n                            if (resp.body) {\n                                resp.data = JSON.parse(resp.body);\n                            } else {\n                                callBack.error(that.parseError(resp, arguments));\n                                return;\n                            }\n                        }\n\n                        processSuccess(sql.subQueries[i], resp.data, sql.subQueries[i]._getComplitedData());\n                    }\n                } else {\n                    processSuccess(query, data, sql);\n                }\n\n                callBack.success(query);\n            }\n        }, function (error) {\n            callBack.error(that.parseError(error, arguments));\n        }, sql.isBatchExecuteQuery ? this.oData.batch.batchHandler : undefined];\n\n        if (typeof this.providerConfiguration.enableJSONP !== 'undefined') {\n            requestData[0].enableJsonpCallback = this.providerConfiguration.enableJSONP;\n        }\n        if (typeof this.providerConfiguration.useJsonLight !== 'undefined') {\n            requestData[0].useJsonLight = this.providerConfiguration.useJsonLight;\n        }\n\n        this.appendBasicAuth(requestData[0], this.providerConfiguration.user, this.providerConfiguration.password, this.providerConfiguration.withCredentials);\n        //if (this.providerConfiguration.user) {\n        //    requestData[0].user = this.providerConfiguration.user;\n        //    requestData[0].password = this.providerConfiguration.password || \"\";\n        //}\n\n        this.context.prepareRequest.call(this, requestData);\n        //$data.ajax(requestData);\n        //OData.request(requestData, requestData.success, requestData.error);\n        this.oData.request.apply(this, requestData);\n    },\n    _compile: function _compile(queryable, params) {\n        var compiler = new _core2.default.storageProviders.oData.oDataCompiler();\n        var compiled = compiler.compile(queryable);\n        return compiled;\n    },\n    saveChanges: function saveChanges(callBack, changedItems) {\n        if (changedItems.length > 0) {\n            this.saveInternal(changedItems, callBack);\n        } else {\n            callBack.success(0);\n        }\n    },\n    saveInternal: function saveInternal(changedItems, callBack) {\n        var independentBlocks = this.buildIndependentBlocks(changedItems);\n        if (_checkODataMode(this, \"enableDeepSave\")) {\n            this._checkDeepSave(changedItems);\n        }\n        var convertedItems = this._buildSaveData(independentBlocks, changedItems);\n        var actionMode = this.saveStrategySelector(convertedItems);\n        if (actionMode) {\n            actionMode.save(this, convertedItems, callBack);\n        } else {\n            callBack.error(new _core.Exception('Not Found', 'Save action not found'));\n        }\n    },\n    saveStrategySelector: function saveStrategySelector(convertedItems) {\n        for (var i = 0; i < this.saveStrategies.length; i++) {\n            var saveAction = this.saveStrategies[i];\n            if (saveAction.condition(this, convertedItems)) {\n                return saveAction;\n            }\n        }\n\n        return null;\n    },\n    saveStrategies: {\n        value: [_batch.strategy, _single.strategy, _empty.strategy]\n    },\n\n    _discoverSaveOrder: function _discoverSaveOrder(changedItems) {\n        var entityItems = changedItems.map(function (it) {\n            return it.data;\n        });\n        var entityInfo = changedItems.map(function (it) {\n            return { path: [], visited: false, result: true };\n        });\n        var entityQueue = [];\n        var discoveredEntities = [];\n\n        var process = function process(currentEntity) {\n            var index = entityItems.indexOf(currentEntity);\n            var changedItem = changedItems[index];\n            var info = entityInfo[index];\n\n            if (info.visited) return info.result;\n            if (info.visiting) return false;\n\n            var references = [];\n            if (changedItem.referredBy) {\n                references = references.concat(changedItem.referredBy);\n            }\n            if (changedItem.dependentOn) {\n                references = references.concat(changedItem.dependentOn);\n            }\n\n            for (var i = 0; i < references.length; i++) {\n                var ref = references[i];\n                if (discoveredEntities.indexOf(ref) < 0) {\n                    entityQueue.push(ref);\n                    discoveredEntities.push(ref);\n                    var refIndex = entityItems.indexOf(ref);\n                    changedItems[refIndex].deepParent = currentEntity;\n                }\n            }\n        };\n\n        for (var i = 0; i < changedItems.length; i++) {\n            var changedItem = changedItems[i];\n            if (entityQueue.indexOf(changedItem.data) < 0) {\n                entityQueue.push(changedItem.data);\n                discoveredEntities.push(changedItem.data);\n                entityInfo[i].parent = null;\n            }\n\n            while (entityQueue.length) {\n                var currentItem = entityQueue.shift();\n                process(currentItem);\n            }\n        }\n    },\n\n    _checkDeepSave: function _checkDeepSave(changedItems) {\n        var entityItems = changedItems.map(function (it) {\n            return it.data;\n        });\n        var entityInfo = changedItems.map(function (it) {\n            return { path: [], visited: false, result: true };\n        });\n\n        var discover = function discover(changedItem, parent, index) {\n            var info = entityInfo[index];\n            if (info.visited) return info.result;\n            if (info.visiting) return false;\n\n            var references = [];\n            if (changedItem.referredBy) {\n                references = references.concat(changedItem.referredBy);\n            }\n            if (changedItem.dependentOn) {\n                references = references.concat(changedItem.dependentOn);\n            }\n\n            if (references.length === 0) {\n                info.visited = true;\n                info.result = true;\n            } else {\n                info.visiting = true;\n\n                for (var i = 0; i < references.length; i++) {\n                    var entity = references[i];\n                    var idx = entityItems.indexOf(entity);\n                    var innerChangeItem = changedItems[idx];\n                    if (!innerChangeItem) return false;\n                    if (innerChangeItem === parent) continue;\n\n                    var result = discover(innerChangeItem, changedItem, idx);\n                    info.result = info.result && changedItem.data.entityState === _core2.default.EntityState.Added && (!changedItem.additionalDependentOn || changedItem.additionalDependentOn.length === 0) && result;\n                }\n                delete info.visiting;\n                info.visited = true;\n            }\n\n            changedItem.enableDeepSave = info.result;\n            return info.result;\n        };\n\n        for (var i = 0; i < changedItems.length; i++) {\n            var changedItem = changedItems[i];\n            discover(changedItem, null, i);\n        }\n\n        this._discoverSaveOrder(changedItems);\n    },\n\n    _buildSaveData: function _buildSaveData(independentBlocks, changedItems) {\n        var convertedItems = new _core2.default.storageProviders.oData.RequestManager();\n        for (var index = 0; index < independentBlocks.length; index++) {\n            for (var i = 0; i < independentBlocks[index].length; i++) {\n                var independentItem = independentBlocks[index][i];\n\n                var request = null;\n                var item = convertedItems.getItem(independentItem.data);\n                if (!item) {\n                    request = new activities.RequestBuilder(this);\n                    request.add(new activities.SetUrl(this.providerConfiguration.oDataServiceHost + '/'));\n                    item = convertedItems.add(independentItem, request);\n                }\n                request = item.request;\n\n                var entityState = independentItem.data.entityState;\n                if (typeof this._buildRequestObject['EntityState_' + entityState] === 'function') {\n                    if (!this._buildRequestObject['EntityState_' + entityState](this, independentItem, convertedItems, request, changedItems)) {\n                        convertedItems.remove(independentItem.data);\n                    }\n                } else {\n                    _core.Guard.raise(new _core.Exception(\"Not supported Entity state\"));\n                }\n            }\n        }\n\n        return convertedItems;\n    },\n    _buildRequestObject: {\n        value: {\n            'EntityState_20': function EntityState_20(provider, item, convertedItem, request, changedItems) {\n                request.add(new activities.SetMethod(\"POST\"), new activities.AppendUrl(item.data[\"@odata.context\"] || item.entitySet.tableName));\n                if (item.data[\"@odata.type\"]) request.add(new activities.SetDataProperty(\"@odata.type\", item.data[\"@odata.type\"]));\n                provider.save_getInitData(item, convertedItem, undefined, undefined, request, changedItems);\n                return request;\n            },\n            'EntityState_30': function EntityState_30(provider, item, convertedItem, request, changedItems) {\n                var keysValue = provider.getEntityKeysValue(item);\n                if (keysValue) {\n                    request.add(new activities.SetMethod(provider.providerConfiguration.UpdateMethod), new activities.AppendUrl(item.data[\"@odata.context\"] || item.entitySet.tableName));\n                    request.add(new activities.AppendUrl(\"(\" + keysValue + \")\"));\n                    if (item.data[\"@odata.type\"]) request.add(new activities.SetDataProperty(\"@odata.type\", item.data[\"@odata.type\"]));\n                    provider.addETagHeader(item, request);\n                    provider.save_getInitData(item, convertedItem, undefined, undefined, request, changedItems);\n                    return request;\n                }\n            },\n            'EntityState_40': function EntityState_40(provider, item, convertedItem, request, changedItems) {\n                var keysValue = provider.getEntityKeysValue(item);\n                if (keysValue) {\n                    request.add(new activities.SetMethod(\"DELETE\"), new activities.ClearRequestData(), new activities.AppendUrl(item.data[\"@odata.context\"] || item.entitySet.tableName));\n                    request.add(new activities.AppendUrl(\"(\" + keysValue + \")\"));\n                    provider.addETagHeader(item, request);\n                    return request;\n                }\n            }\n        }\n    },\n    reload_fromResponse: function reload_fromResponse(item, data, response) {\n        var that = this;\n        item.getType().memberDefinitions.getPublicMappedProperties().forEach(function (memDef) {\n            var propType = _core.Container.resolveType(memDef.type);\n            if (memDef.computed || memDef.key || !memDef.inverseProperty) {\n                if (memDef.concurrencyMode === _core2.default.ConcurrencyMode.Fixed) {\n                    //unescape?\n                    //item[memDef.name] = response.headers.ETag || response.headers.Etag || response.headers.etag;\n                    item[memDef.name] = data['@odata.etag'];\n                } else if (memDef.isAssignableTo) {\n                    if (data[memDef.name]) {\n                        item[memDef.name] = new propType(data[memDef.name], { converters: that.fieldConverter.fromDb });\n                    } else {\n                        item[memDef.name] = data[memDef.name];\n                    }\n                } else if (propType === _core2.default.Array && memDef.elementType) {\n                    var aeType = _core.Container.resolveType(memDef.elementType);\n                    if (data[memDef.name] && Array.isArray(data[memDef.name])) {\n                        var arrayProperty = [];\n                        for (var ap = 0; ap < data[memDef.name].length; ap++) {\n                            var aitem = data[memDef.name][ap];\n                            if (aeType.isAssignableTo && !_core.Guard.isNullOrUndefined(aitem)) {\n                                arrayProperty.push(new aeType(aitem, { converters: that.fieldConverter.fromDb }));\n                            } else {\n                                var etypeName = _core.Container.resolveName(aeType);\n                                var econverter = that.fieldConverter.fromDb[etypeName];\n\n                                arrayProperty.push(econverter ? econverter(aitem) : aitem);\n                            }\n                        }\n                        item[memDef.name] = arrayProperty;\n                    } else if (!data[memDef.name]) {\n                        item[memDef.name] = data[memDef.name];\n                    }\n                } else {\n                    var typeName = _core.Container.resolveName(memDef.type);\n                    var converter = that.fieldConverter.fromDb[typeName];\n\n                    item[memDef.name] = converter ? converter(data[memDef.name]) : data[memDef.name];\n                }\n            }\n        }, this);\n    },\n\n    save_getInitData: function save_getInitData(item, convertedItems, isComplex, isDeep, request, changedItems) {\n        var self = this;\n        if (!isComplex) {\n            item.physicalData = this.context._storageModel.getStorageModel(item.data.getType()).PhysicalType.convertTo(item.data, convertedItems);\n        } else {\n            item.physicalData = item.data;\n        }\n        var hasSavedProperty = item.data.entityState === _core2.default.EntityState.Added;\n        item.physicalData.getType().memberDefinitions.asArray().forEach(function (memdef) {\n            hasSavedProperty = self.propertyConversationSelector(item, memdef, convertedItems, request, changedItems, isDeep) || hasSavedProperty;\n        }, this);\n\n        if (!hasSavedProperty && !isDeep) {\n            convertedItems.remove(item.data);\n        }\n    },\n    propertyConversationSelector: function propertyConversationSelector(item, memdef, convertedItems, request, changedItems, isDeep) {\n        if (memdef.kind == _core2.default.MemberTypes.complexProperty) {\n            return this._complexPropertySelector.apply(this, arguments);\n        }\n\n        if (memdef.kind == _core2.default.MemberTypes.property) {\n            return this._propertySelector.apply(this, arguments);\n        }\n\n        if (memdef.kind == _core2.default.MemberTypes.navProperty) {\n            return this._navigationPropertySelector.apply(this, arguments);\n        }\n\n        return false;\n    },\n    _complexPropertySelector: function _complexPropertySelector(item, memdef, convertedItems, request, changedItems, isDeep) {\n        return this.propertyConversationStrategies[\"complex\"].apply(this, arguments);\n    },\n    _propertySelector: function _propertySelector(item, memdef, convertedItems, request, changedItems, isDeep) {\n        if (typeof memdef.concurrencyMode === 'undefined') {\n            switch (true) {\n                case memdef.notMapped:\n                    return false;\n                case memdef.key === true:\n                    this.propertyConversationStrategies[\"default\"].apply(this, arguments);\n                    return false;\n                case isDeep:\n                case item.data.entityState === _core2.default.EntityState.Added:\n                case this._propertyIsChanged(item.data, memdef):\n                    return this.propertyConversationStrategies[\"default\"].apply(this, arguments);\n                case !this._propertyIsChanged(item.data, memdef) && _checkODataMode(this, 'sendAllPropertiesOnChange'):\n                    this.propertyConversationStrategies[\"default\"].apply(this, arguments);\n                    return false;\n                default:\n                    return false;\n            }\n        }\n\n        return false;\n    },\n    _navigationPropertySelector: function _navigationPropertySelector(item, memdef, convertedItems, request, changedItems, isDeep) {\n        var _this = this;\n\n        if (isDeep || item.data.entityState === _core2.default.EntityState.Added || this._propertyIsChanged(item.data, memdef)) {\n\n            var navigationValue = item.data[memdef.name];\n            if (_checkODataMode(this, 'enableDeepSave') && navigationValue && item.data.entityState === _core2.default.EntityState.Added) {\n                var result = null;\n                if (Array.isArray(navigationValue)) {\n                    navigationValue.forEach(function (navItem, index) {\n                        _this._processDeepSaveItems(item, memdef, convertedItems, request, changedItems, navItem, \"deepSaveArray\", index);\n                        //update not supported here\n                    });\n                    return true; //item.data is new\n                } else {\n                    result = this._processDeepSaveItems(item, memdef, convertedItems, request, changedItems, navigationValue, \"deepSave\");\n                }\n\n                if (result !== null) {\n                    return result;\n                }\n            }\n\n            return this._simpleNavigationPropertySelector.apply(this, arguments);\n        }\n        return false;\n    },\n    _simpleNavigationPropertySelector: function _simpleNavigationPropertySelector(item, memdef, convertedItems, request, changedItems, isDeep) {\n        if (_checkODataMode(this, 'withReferenceMethods')) {\n            return this.propertyConversationStrategies[\"withReferenceMethods\"].apply(this, arguments);\n        }\n\n        return this.propertyConversationStrategies[\"navigation\"].apply(this, arguments);\n    },\n\n    _processDeepSaveItems: function _processDeepSaveItems(item, memdef, convertedItems, request, changedItems, navigationEntity, strategy, index) {\n        var referencedItems = changedItems.filter(function (it) {\n            return it.data == navigationEntity;\n        });\n\n        if (referencedItems.length === 1 && referencedItems[0].enableDeepSave && navigationEntity.entityState === _core2.default.EntityState.Added && referencedItems[0].deepParent === item.data) {\n            var deepItem = convertedItems.getItem(referencedItems[0].data);\n            if (!deepItem) {\n                var referencedRequest = new activities.RequestBuilder(this);\n                referencedRequest.add(new activities.SetUrl(this.providerConfiguration.oDataServiceHost + '/'));\n                deepItem = convertedItems.add(referencedItems[0], referencedRequest);\n            }\n\n            convertedItems.addItemReference(item.data, deepItem);\n            if (!deepItem.removed) {\n                convertedItems.remove(referencedItems[0].data);\n            }\n\n            return this.propertyConversationStrategies[strategy].call(this, item, memdef, convertedItems, request, changedItems, index);\n        }\n\n        return null;\n    },\n    _propertyIsChanged: function _propertyIsChanged(entity, memdef) {\n        return entity && entity.changedProperties && entity.changedProperties.some(function (def) {\n            return def.name === memdef.name;\n        });\n    },\n    propertyConversationStrategies: {\n        value: {\n            \"default\": function _default(item, memdef, convertedItems, request, changedItems) {\n                var typeName = _core.Container.resolveName(memdef.type);\n                if (memdef.elementType) {\n                    var elementType = _core.Container.resolveType(memdef.elementType);\n                    if (elementType.isAssignableTo && elementType.isAssignableTo(_core2.default.Entity) && Array.isArray(item.physicalData[memdef.name])) {\n                        item.physicalData[memdef.name].forEach(function (complexElement) {\n                            var innerRequest = new activities.RequestBuilder(this);\n                            this.save_getInitData({ data: complexElement }, convertedItems, true, true, innerRequest);\n                            request.add(function (req) {\n                                req.data = req.data || {};\n                                req.data[memdef.name] = req.data[memdef.name] || [];\n                                req.data[memdef.name].push(innerRequest.build().get().data);\n                            });\n                        }, this);\n                        return true;\n                    }\n                }\n                var converter = this.fieldConverter.toDb[typeName];\n                request.add(new activities.SetProperty(memdef.name, converter ? converter(item.physicalData[memdef.name], memdef) : item.physicalData[memdef.name]));\n                return true;\n            },\n            \"withReferenceMethods\": function withReferenceMethods(item, memdef, convertedItems, request, changedItems) {\n                var reqItem = convertedItems.getItem(item.data);\n                if (reqItem && reqItem.removed) return false; //deep saved\n\n                var additionalRequest = new activities.RequestBuilder(this);\n                var value = item.physicalData[memdef.name];\n                if (value) {\n                    additionalRequest.add(new activities.SetMethod('POST'));\n                    if (value.__metadata) {\n                        additionalRequest.add(new activities.SetProperty('@odata.id', this.providerConfiguration.oDataServiceHost + '/' + value.__metadata.uri));\n                    } else if (value.__convertedRefence) {\n                        additionalRequest.add(function (req, provider) {\n                            var targetItem = value.__convertedRefence;\n                            req.data = req.data || {};\n                            if (targetItem.isProcessed) {\n                                req.data[\"@odata.id\"] = provider.getEntityUrlReference(targetItem.entity);\n                            } else {\n                                req.data[\"@odata.id\"] = provider.providerConfiguration.oDataServiceHost + '/$' + targetItem.itemIndex;\n                            }\n                        });\n                    }\n                } else {\n                    if (item.data.entityState === _core2.default.EntityState.Added || value !== null) return;\n\n                    additionalRequest.add(new activities.SetUrl(this.providerConfiguration.oDataServiceHost + '/'), new activities.AppendUrl(item.entitySet.tableName), new activities.AppendUrl(\"(\" + this.getEntityKeysValue(item) + \")\"), new activities.SetMethod('DELETE'), new activities.ClearRequestData());\n                }\n\n                additionalRequest.add(function (req, provider) {\n                    if (reqItem.isProcessed || item.data.entityState !== _core2.default.EntityState.Added) {\n                        req.requestUri = provider.providerConfiguration.oDataServiceHost + '/';\n                        req.requestUri += item.entitySet.tableName;\n                        req.requestUri += \"(\" + provider.getEntityKeysValue(item) + \")\";\n                        provider.addETagHeader(item, req);\n                    } else {\n                        req.requestUri = '$' + reqItem.itemIndex;\n                        provider.addETagHeader(item, req, _core2.default.defaults.OData.eTagAny);\n                    }\n\n                    req.requestUri += '/' + memdef.name + '/$ref';\n                });\n\n                var refItem = convertedItems.add(item, additionalRequest, false);\n                convertedItems.addItemReference(item.data, refItem);\n                return false;\n            },\n            \"deepSave\": function deepSave(item, memdef, convertedItems, request, changedItems) {\n                var refItem = convertedItems.getItem(item.data[memdef.name]);\n                request.add(function (req, provider) {\n                    req.data[memdef.name] = refItem.request.build().get().data;\n                });\n                return true;\n            },\n            \"deepSaveArray\": function deepSaveArray(item, memdef, convertedItems, request, changedItems, index) {\n                var refItem = convertedItems.getItem(item.data[memdef.name][index]);\n                request.add(function (req, provider) {\n                    req.data[memdef.name] = req.data[memdef.name] || [];\n                    req.data[memdef.name].push(refItem.request.build().get().data);\n                });\n                return true;\n            },\n            \"navigation\": function navigation(item, memdef, convertedItems, request, changedItems) {\n\n                request.add(function (req, provider) {\n                    req.data = req.data || {};\n\n                    if (item.physicalData[memdef.name] && item.physicalData[memdef.name].__metadata) {\n                        req.data[memdef.name + \"@odata.bind\"] = item.physicalData[memdef.name].__metadata.uri;\n                    } else if (item.physicalData[memdef.name] && item.physicalData[memdef.name].__convertedRefence) {\n                        var targetItem = item.physicalData[memdef.name].__convertedRefence;\n                        if (targetItem.isProcessed) {\n                            req.data[memdef.name + \"@odata.bind\"] = provider.getEntityUrlReference(targetItem.entity);\n                        } else {\n                            req.data[memdef.name + \"@odata.bind\"] = \"$\" + targetItem.itemIndex;\n                        }\n                    } else if (item.physicalData[memdef.name] === null) {\n                        req.data[memdef.name + \"@odata.bind\"] = null;\n                    }\n                });\n                return true;\n            },\n            \"complex\": function complex(item, memdef, convertedItems, request, changedItems) {\n                if (item.physicalData[memdef.name]) {\n                    var innerRequest = new activities.RequestBuilder(this);\n                    this.save_getInitData({ data: item.physicalData[memdef.name] }, convertedItems, true, true, innerRequest);\n                    request.add(function (req) {\n                        req.data = req.data || {};\n                        req.data[memdef.name] = innerRequest.build().get().data;\n                    });\n                    return true;\n                }\n                return false;\n            }\n        }\n    },\n\n    addETagHeader: function addETagHeader(item, request, value) {\n        var property = item.data.getType().memberDefinitions.getPublicMappedProperties().filter(function (memDef) {\n            return memDef.concurrencyMode === _core2.default.ConcurrencyMode.Fixed;\n        });\n        if (property && property[0]) {\n            var headerValue = typeof value !== \"undefined\" ? value : item.data[property[0].name];\n            if (typeof headerValue !== \"undefined\") {\n                if (request instanceof activities.RequestBuilder) {\n                    request.add(new activities.SetHeaderProperty('If-Match', headerValue));\n                } else {\n                    request.headers['If-Match'] = headerValue;\n                }\n            }\n        }\n    },\n\n    getTraceString: function getTraceString(queryable) {\n        var sqlText = this._compile(queryable);\n        return queryable;\n    },\n    supportedDataTypes: {\n        value: [_core2.default.Array, _core2.default.Integer, _core2.default.String, _core2.default.Number, _core2.default.Blob, _core2.default.Boolean, _core2.default.Date, _core2.default.Object, _core2.default.GeographyPoint, _core2.default.Guid, _core2.default.GeographyLineString, _core2.default.GeographyPolygon, _core2.default.GeographyMultiPoint, _core2.default.GeographyMultiLineString, _core2.default.GeographyMultiPolygon, _core2.default.GeographyCollection, _core2.default.GeometryPoint, _core2.default.GeometryLineString, _core2.default.GeometryPolygon, _core2.default.GeometryMultiPoint, _core2.default.GeometryMultiLineString, _core2.default.GeometryMultiPolygon, _core2.default.GeometryCollection, _core2.default.Byte, _core2.default.SByte, _core2.default.Decimal, _core2.default.Float, _core2.default.Int16, _core2.default.Int32, _core2.default.Int64, _core2.default.Time, _core2.default.Day, _core2.default.DateTimeOffset, _core2.default.Duration],\n        writable: false\n    },\n\n    supportedBinaryOperators: {\n        value: {\n            equal: { mapTo: 'eq', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n            notEqual: { mapTo: 'ne', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n            equalTyped: { mapTo: 'eq', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n            notEqualTyped: { mapTo: 'ne', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n            greaterThan: { mapTo: 'gt', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n            greaterThanOrEqual: { mapTo: 'ge', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n\n            lessThan: { mapTo: 'lt', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n            lessThenOrEqual: { mapTo: 'le', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n            or: { mapTo: 'or', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n            and: { mapTo: 'and', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n\n            add: { mapTo: 'add', dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n            divide: { mapTo: 'div', allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n            multiply: { mapTo: 'mul', allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n            subtract: { mapTo: 'sub', allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n            modulo: { mapTo: 'mod', allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] },\n\n            \"in\": { mapTo: \"in\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression] }\n        }\n    },\n\n    supportedUnaryOperators: {\n        value: {\n            not: { mapTo: 'not' }\n        }\n    },\n\n    supportedFieldOperations: {\n        value: {\n            /* string functions */\n\n            contains: {\n                mapTo: \"contains\",\n                dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\" }, { name: \"substring\", dataType: \"string\" }]\n            },\n\n            startsWith: {\n                mapTo: \"startswith\",\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"strFragment\", dataType: \"string\" }]\n            },\n\n            endsWith: {\n                mapTo: \"endswith\",\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"strFragment\", dataType: \"string\" }]\n            },\n\n            length: [{\n                allowedType: 'string',\n                projection: function projection(v) {\n                    return v ? v.length : 0;\n                },\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.ProjectionExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\n            }, {\n                allowedType: 'GeographyLineString',\n                mapTo: \"geo.length\",\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: ['GeographyLineString'] }],\n                fixedDataType: 'decimal'\n            }, {\n                allowedType: 'GeometryLineString',\n                mapTo: \"geo.length\",\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: 'GeometryLineString' }],\n                fixedDataType: 'decimal'\n            }],\n\n            strLength: {\n                mapTo: \"length\",\n                projection: function projection(v) {\n                    return v ? v.length : 0;\n                },\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.ProjectionExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\n            },\n\n            indexOf: {\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                mapTo: \"indexof\",\n                baseIndex: 1,\n                parameters: [{ name: '@expression', dataType: \"string\" }, { name: 'strFragment', dataType: 'string' }]\n            },\n\n            replace: {\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: '@expression', dataType: \"string\" }, { name: 'strFrom', dataType: 'string' }, { name: 'strTo', dataType: 'string' }]\n            },\n\n            substr: {\n                mapTo: \"substring\",\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"startFrom\", dataType: \"number\" }, { name: \"length\", dataType: \"number\", optional: \"true\" }]\n            },\n\n            toLowerCase: {\n                mapTo: \"tolower\",\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\n            },\n\n            toUpperCase: {\n                mapTo: \"toupper\",\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\n\n            },\n\n            trim: {\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\n            },\n\n            concat: {\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"strFragment\", dataType: \"string\" }]\n            },\n\n            /* data functions */\n\n            day: {\n                allowedIn: [_core2.default.Expressions.ProjectionExpression, _core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                dataType: \"number\",\n                projection: function projection(v) {\n                    return new Date(v).getUTCDate();\n                },\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            hour: {\n                allowedIn: [_core2.default.Expressions.ProjectionExpression, _core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                dataType: \"number\",\n                projection: function projection(v) {\n                    return new Date(v).getUTCHours();\n                },\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            minute: {\n                allowedIn: [_core2.default.Expressions.ProjectionExpression, _core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                dataType: \"number\",\n                projection: function projection(v) {\n                    return new Date(v).getUTCMinutes();\n                },\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            month: {\n                allowedIn: [_core2.default.Expressions.ProjectionExpression, _core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                dataType: \"number\",\n                projection: function projection(v) {\n                    return new Date(v).getUTCMonth() + 1;\n                },\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            second: {\n                allowedIn: [_core2.default.Expressions.ProjectionExpression, _core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                dataType: \"number\",\n                projection: function projection(v) {\n                    return new Date(v).getUTCSeconds();\n                },\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            year: {\n                allowedIn: [_core2.default.Expressions.ProjectionExpression, _core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                dataType: \"number\",\n                projection: function projection(v) {\n                    return new Date(v).getFullYear();\n                },\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            fractionalseconds: {\n                allowedIn: [_core2.default.Expressions.ProjectionExpression, _core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                dataType: \"number\",\n                projection: function projection(v) {\n                    return new Date(v).getUTCMilliseconds() / 1000;\n                },\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n\n            /* number functions */\n            round: {\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            floor: {\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            ceiling: {\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n\n            /* geo functions */\n            distance: [{\n                allowedType: 'GeographyPoint',\n                mapTo: \"geo.distance\",\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: 'GeographyPoint' }, { name: \"to\", dataType: 'GeographyPoint' }],\n                fixedDataType: 'decimal'\n            }, {\n                allowedType: 'GeometryPoint',\n                mapTo: \"geo.distance\",\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: 'GeometryPoint' }, { name: \"to\", dataType: 'GeometryPoint' }],\n                fixedDataType: 'decimal'\n            }],\n\n            intersects: [{\n                allowedType: 'GeographyPoint',\n                mapTo: \"geo.intersects\",\n                dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: 'GeographyPoint' }, { name: \"in\", dataType: 'GeographyPolygon' }]\n\n            }, {\n                allowedType: 'GeometryPoint',\n                mapTo: \"geo.intersects\",\n                dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression, _core2.default.Expressions.SomeExpression, _core2.default.Expressions.EveryExpression],\n                parameters: [{ name: \"@expression\", dataType: 'GeometryPoint' }, { name: \"in\", dataType: 'GeometryPolygon' }]\n\n            }],\n\n            // aggregate functions\n            'sum': {\n                allowedIn: [_core2.default.Expressions.ProjectionExpression],\n                mapTo: 'sum',\n                aggregate: true\n            },\n            'count': {\n                allowedIn: [_core2.default.Expressions.ProjectionExpression],\n                mapTo: 'countdistinct',\n                returnType: _core2.default.Integer,\n                aggregate: true\n            },\n            'min': {\n                allowedIn: [_core2.default.Expressions.ProjectionExpression],\n                mapTo: 'min',\n                aggregate: true\n            },\n            'max': {\n                allowedIn: [_core2.default.Expressions.ProjectionExpression],\n                mapTo: 'max',\n                aggregate: true\n            },\n            'avg': {\n                allowedIn: [_core2.default.Expressions.ProjectionExpression],\n                mapTo: 'average',\n                aggregate: true\n            }\n        },\n        enumerable: true,\n        writable: true\n    },\n    supportedSetOperations: {\n        value: {\n            filter: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [{ name: \"filter\", dataType: \"$data.Queryable\" }],\n                frameType: _core2.default.Expressions.FilterExpression,\n                includeFrameName: '$filter',\n                includeCompiler: '$data.storageProviders.oData.oDataWhereCompiler'\n            },\n            map: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [{ name: \"map\", dataType: \"$data.Queryable\" }],\n                frameType: _core2.default.Expressions.ProjectionExpression,\n                includeFrameName: '$select',\n                includeCompiler: '$data.storageProviders.oData.oDataProjectionCompiler'\n            },\n            length: {},\n            forEach: {},\n            toArray: {},\n            single: {},\n            some: {\n                invokable: false,\n                allowedIn: [_core2.default.Expressions.FilterExpression],\n                parameters: [{ name: \"some\", dataType: \"$data.Queryable\" }],\n                mapTo: 'any',\n                frameType: _core2.default.Expressions.SomeExpression\n            },\n            every: {\n                invokable: false,\n                allowedIn: [_core2.default.Expressions.FilterExpression],\n                parameters: [{ name: \"every\", dataType: \"$data.Queryable\" }],\n                mapTo: 'all',\n                frameType: _core2.default.Expressions.EveryExpression\n            },\n            take: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [{ name: \"take\", dataType: \"$data.Integer\" }],\n                frameType: _core2.default.Expressions.PagingExpression,\n                includeFrameName: '$top',\n                includeCompiler: '$data.storageProviders.oData.oDataPagingCompiler'\n            },\n            skip: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [{ name: \"skip\", dataType: \"$data.Integer\" }],\n                frameType: _core2.default.Expressions.PagingExpression,\n                includeFrameName: '$skip',\n                includeCompiler: '$data.storageProviders.oData.oDataPagingCompiler'\n            },\n            orderBy: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [{ name: \"orderBy\", dataType: \"$data.Queryable\" }],\n                frameType: _core2.default.Expressions.OrderExpression,\n                includeFrameName: '$orderby',\n                includeCompiler: '$data.storageProviders.oData.oDataOrderCompiler'\n            },\n            orderByDescending: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [{ name: \"orderByDescending\", dataType: \"$data.Queryable\" }],\n                frameType: _core2.default.Expressions.OrderExpression,\n                frameTypeFactory: function frameTypeFactory(source, selector) {\n                    return new _core2.default.Expressions.OrderExpression(source, selector, _core2.default.Expressions.ExpressionType.OrderByDescending);\n                },\n                includeFrameName: '$orderby',\n                includeCompiler: '$data.storageProviders.oData.oDataOrderCompiler'\n            },\n            first: {},\n            include: {},\n            batchDelete: {},\n            withInlineCount: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [],\n                frameType: _core2.default.Expressions.InlineCountExpression,\n                includeFrameName: '$count',\n                implementation: function implementation() {\n                    return 'true';\n                }\n            },\n            find: {},\n            distinct: {},\n            groupBy: {}\n        },\n        enumerable: true,\n        writable: true\n    },\n    supportedContextOperation: {\n        value: {\n            batchExecuteQuery: true\n        },\n        enumerable: true,\n        writable: true\n    },\n\n    fieldConverter: { value: _core2.default.oDataConverter },\n    resolveTypeOperations: function resolveTypeOperations(operation, expression, frameType) {\n        var memDef = expression.entityType.getMemberDefinition(operation);\n        if (!memDef || !memDef.method || memDef.method.IsSideEffecting !== false || !memDef.method.returnType || !(frameType === _core2.default.Expressions.FilterExpression || frameType === _core2.default.Expressions.OrderExpression)) {\n            _core.Guard.raise(new _core.Exception(\"Entity '\" + expression.entityType.name + \"' Operation '\" + operation + \"' is not supported by the provider\"));\n        }\n\n        return memDef;\n    },\n    resolveSetOperations: function resolveSetOperations(operation, expression, frameType) {\n        if (expression) {\n            var esDef = expression.storageModel.ContextType.getMemberDefinition(expression.storageModel.ItemName);\n            if (esDef && esDef.actions && esDef.actions[operation]) {\n                var memDef = _core2.default.MemberDefinition.translateDefinition(esDef.actions[operation], operation, this.getType());\n                if (!memDef || !memDef.method || memDef.method.IsSideEffecting !== false || !memDef.method.returnType || !(frameType === _core2.default.Expressions.FilterExpression || frameType === _core2.default.Expressions.OrderExpression)) {\n\n                    _core.Guard.raise(new _core.Exception(\"Collection '\" + expression.storageModel.ItemName + \"' Operation '\" + operation + \"' is not supported by the provider\"));\n                }\n\n                return memDef;\n            }\n        }\n        return _core2.default.StorageProviderBase.prototype.resolveSetOperations.apply(this, arguments);\n    },\n    resolveContextOperations: function resolveContextOperations(operation, expression, frameType) {\n        var memDef = this.context.getType().getMemberDefinition(operation);\n        if (!memDef || !memDef.method || memDef.method.IsSideEffecting !== false || !memDef.method.returnType || !(frameType === _core2.default.Expressions.FilterExpression || frameType === _core2.default.Expressions.OrderExpression)) {\n            _core.Guard.raise(new _core.Exception(\"Context '\" + expression.instance.getType().name + \"' Operation '\" + operation + \"' is not supported by the provider\"));\n        }\n        return memDef;\n    },\n\n    getEntityUrlReference: function getEntityUrlReference(entity) {\n        var sMod = this.context._storageModel.getStorageModel(entity.getType());\n        var tblName = sMod.TableName;\n        var pk = '(' + this.getEntityKeysValue({ data: entity, entitySet: this.context.getEntitySetFromElementType(entity.getType()) }) + ')';\n        return this.providerConfiguration.oDataServiceHost + '/' + tblName + pk;\n    },\n\n    getEntityKeysValue: function getEntityKeysValue(entity) {\n        var result = [];\n        var keyValue = undefined;\n        var memDefs = entity.data.getType().memberDefinitions.getKeyProperties();\n        for (var i = 0, l = memDefs.length; i < l; i++) {\n            var field = memDefs[i];\n            if (field.key) {\n                keyValue = entity.data[field.name];\n                if (_core.Guard.isNullOrUndefined(keyValue)) continue;\n\n                var typeName = _core.Container.resolveName(field.type);\n\n                var converter = this.fieldConverter.toDb[typeName];\n                keyValue = converter ? converter(keyValue) : keyValue;\n\n                converter = this.fieldConverter.escape[typeName];\n                keyValue = converter ? converter(keyValue) : keyValue;\n\n                result.push(field.name + \"=\" + keyValue);\n            }\n        }\n        if (result.length > 1) {\n            return result.join(\",\");\n        }\n        return keyValue;\n    },\n    getFieldUrl: function getFieldUrl(entity, fieldName, entitySet) {\n        var keyPart = this.getEntityKeysValue({ data: entity });\n        var servicehost = this.providerConfiguration.oDataServiceHost;\n        if (servicehost.lastIndexOf('/') === servicehost.length) servicehost = servicehost.substring(0, servicehost.length - 1);\n\n        return servicehost + '/' + entitySet.tableName + '(' + keyPart + ')/' + fieldName + '/$value';\n    }, /*\r\n       getServiceMetadata: function () {\r\n         $data.ajax(this._setAjaxAuthHeader({\r\n             url: this.providerConfiguration.oDataServiceHost + \"/$metadata\",\r\n             dataType: \"xml\",\r\n             success: function (d) {\r\n                 console.log(\"OK\");\r\n                 console.dir(d);\r\n                 console.log(typeof d);\r\n                 window[\"s\"] = d;\r\n                 window[\"k\"] = this.nsResolver;\r\n                 //s.evaluate(\"edmx:Edmx/edmx:DataServices/Schema\", s, $data.storageProviders.oData.oDataProvider.prototype.nsResolver, XPathResult.ANY_TYPE, null).iterateNext()\r\n               },\r\n             error: function (error) {\r\n                 console.log(\"error:\");\r\n                 console.dir(error);\r\n             }\r\n         }));\r\n       },\r\n       nsResolver: function (sPrefix) {\r\n         switch (sPrefix) {\r\n             case \"edmx\":\r\n                 return \"http://schemas.microsoft.com/ado/2007/06/edmx\";\r\n                 break;\r\n             case \"m\":\r\n                 return \"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\";\r\n                 break;\r\n             case \"d\":\r\n                 return \"http://schemas.microsoft.com/ado/2007/08/dataservices\";\r\n                 break;\r\n             default:\r\n                 return \"http://schemas.microsoft.com/ado/2008/09/edm\";\r\n                 break;\r\n         }\r\n       }\r\n       */\n    parseError: function parseError(error, data) {\n\n        var message = (error.response || error || {}).body || '';\n        try {\n            if (message.indexOf('{') === 0) {\n                var errorObj = JSON.parse(message);\n                errorObj = errorObj['odata.error'] || errorObj.error || errorObj;\n                if (errorObj.message) {\n                    message = errorObj.message.value || errorObj.message;\n                }\n            }\n        } catch (e) {}\n\n        return new _core.Exception(message, error.message, data || error);\n    },\n    appendBasicAuth: function appendBasicAuth(request, user, password, withCredentials) {\n        request.headers = request.headers || {};\n        if (!request.headers.Authorization && user && password) {\n            request.headers.Authorization = \"Basic \" + this.__encodeBase64(user + \":\" + password);\n        }\n        if (withCredentials) {\n            request.withCredentials = withCredentials;\n        }\n    },\n    __encodeBase64: function __encodeBase64(val) {\n        var b64array = \"ABCDEFGHIJKLMNOP\" + \"QRSTUVWXYZabcdef\" + \"ghijklmnopqrstuv\" + \"wxyz0123456789+/\" + \"=\";\n\n        var input = val;\n        var base64 = \"\";\n        var hex = \"\";\n        var chr1,\n            chr2,\n            chr3 = \"\";\n        var enc1,\n            enc2,\n            enc3,\n            enc4 = \"\";\n        var i = 0;\n\n        do {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n            enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n\n            base64 = base64 + b64array.charAt(enc1) + b64array.charAt(enc2) + b64array.charAt(enc3) + b64array.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return base64;\n    },\n    checkODataMode: function checkODataMode(functionName) {\n        return _checkODataMode(this, functionName);\n    }\n}, null);\n\n_core2.default.StorageProviderBase.registerProvider(\"oData\", _core2.default.storageProviders.oData.oDataProvider);\n\n},{\"./SaveStrategies/batch\":1,\"./SaveStrategies/empty\":2,\"./SaveStrategies/single\":3,\"./oDataRequestActivities.js\":12,\"jaydata/core\":\"jaydata/core\"}],12:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RequestBuilder = exports.RequestBuilder = function () {\n    function RequestBuilder(context, request) {\n        _classCallCheck(this, RequestBuilder);\n\n        this._context = context;\n        this._request = request || {};\n        this._activities = [];\n    }\n\n    _createClass(RequestBuilder, [{\n        key: 'get',\n        value: function get() {\n            return this._request;\n        }\n    }, {\n        key: 'add',\n        value: function add() {\n            var _activities;\n\n            (_activities = this._activities).push.apply(_activities, arguments);\n            return this;\n        }\n    }, {\n        key: 'build',\n        value: function build() {\n            var _this = this;\n\n            this._request.headers = this._request.headers || {};\n            this._request.data = this._request.data || {};\n\n            this._activities.forEach(function (a) {\n                return a instanceof RequestActivity ? a.implementation(_this._request, _this._context) : a(_this._request, _this._context);\n            });\n\n            this._activities = [];\n            return this;\n        }\n    }]);\n\n    return RequestBuilder;\n}();\n\nvar RequestActivity = exports.RequestActivity = function () {\n    function RequestActivity() {\n        _classCallCheck(this, RequestActivity);\n    }\n\n    _createClass(RequestActivity, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {}\n    }]);\n\n    return RequestActivity;\n}();\n\nvar SetRequestActivity = exports.SetRequestActivity = function (_RequestActivity) {\n    _inherits(SetRequestActivity, _RequestActivity);\n\n    function SetRequestActivity(key, value) {\n        _classCallCheck(this, SetRequestActivity);\n\n        var _this2 = _possibleConstructorReturn(this, (SetRequestActivity.__proto__ || Object.getPrototypeOf(SetRequestActivity)).call(this));\n\n        _this2.key = key;\n        _this2.value = value;\n        return _this2;\n    }\n\n    _createClass(SetRequestActivity, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {}\n    }]);\n\n    return SetRequestActivity;\n}(RequestActivity);\n\nvar SetRequestProperty = exports.SetRequestProperty = function (_SetRequestActivity) {\n    _inherits(SetRequestProperty, _SetRequestActivity);\n\n    function SetRequestProperty() {\n        _classCallCheck(this, SetRequestProperty);\n\n        return _possibleConstructorReturn(this, (SetRequestProperty.__proto__ || Object.getPrototypeOf(SetRequestProperty)).apply(this, arguments));\n    }\n\n    _createClass(SetRequestProperty, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {\n            request[this.key] = this.value;\n        }\n    }]);\n\n    return SetRequestProperty;\n}(SetRequestActivity);\n\nvar SetDataProperty = exports.SetDataProperty = function (_SetRequestActivity2) {\n    _inherits(SetDataProperty, _SetRequestActivity2);\n\n    function SetDataProperty() {\n        _classCallCheck(this, SetDataProperty);\n\n        return _possibleConstructorReturn(this, (SetDataProperty.__proto__ || Object.getPrototypeOf(SetDataProperty)).apply(this, arguments));\n    }\n\n    _createClass(SetDataProperty, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {\n            request.data[this.key] = this.value;\n        }\n    }]);\n\n    return SetDataProperty;\n}(SetRequestActivity);\n\nvar SetHeaderProperty = exports.SetHeaderProperty = function (_SetRequestActivity3) {\n    _inherits(SetHeaderProperty, _SetRequestActivity3);\n\n    function SetHeaderProperty() {\n        _classCallCheck(this, SetHeaderProperty);\n\n        return _possibleConstructorReturn(this, (SetHeaderProperty.__proto__ || Object.getPrototypeOf(SetHeaderProperty)).apply(this, arguments));\n    }\n\n    _createClass(SetHeaderProperty, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {\n            request.headers[this.key] = this.value;\n        }\n    }]);\n\n    return SetHeaderProperty;\n}(SetRequestActivity);\n\nvar SetUrl = exports.SetUrl = function (_SetRequestProperty) {\n    _inherits(SetUrl, _SetRequestProperty);\n\n    function SetUrl(url) {\n        _classCallCheck(this, SetUrl);\n\n        return _possibleConstructorReturn(this, (SetUrl.__proto__ || Object.getPrototypeOf(SetUrl)).call(this, 'requestUri', url));\n    }\n\n    return SetUrl;\n}(SetRequestProperty);\n\nvar AppendUrl = exports.AppendUrl = function (_SetUrl) {\n    _inherits(AppendUrl, _SetUrl);\n\n    function AppendUrl() {\n        _classCallCheck(this, AppendUrl);\n\n        return _possibleConstructorReturn(this, (AppendUrl.__proto__ || Object.getPrototypeOf(AppendUrl)).apply(this, arguments));\n    }\n\n    _createClass(AppendUrl, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {\n            request[this.key] == request[this.key] || \"\";\n            request[this.key] += this.value;\n        }\n    }]);\n\n    return AppendUrl;\n}(SetUrl);\n\nvar SetMethod = exports.SetMethod = function (_SetRequestProperty2) {\n    _inherits(SetMethod, _SetRequestProperty2);\n\n    function SetMethod(method) {\n        _classCallCheck(this, SetMethod);\n\n        return _possibleConstructorReturn(this, (SetMethod.__proto__ || Object.getPrototypeOf(SetMethod)).call(this, 'method', method));\n    }\n\n    return SetMethod;\n}(SetRequestProperty);\n\nvar SetProperty = exports.SetProperty = function (_SetDataProperty) {\n    _inherits(SetProperty, _SetDataProperty);\n\n    function SetProperty() {\n        _classCallCheck(this, SetProperty);\n\n        return _possibleConstructorReturn(this, (SetProperty.__proto__ || Object.getPrototypeOf(SetProperty)).apply(this, arguments));\n    }\n\n    return SetProperty;\n}(SetDataProperty);\n\nvar SetNavigationProperty = exports.SetNavigationProperty = function (_SetDataProperty2) {\n    _inherits(SetNavigationProperty, _SetDataProperty2);\n\n    function SetNavigationProperty() {\n        _classCallCheck(this, SetNavigationProperty);\n\n        return _possibleConstructorReturn(this, (SetNavigationProperty.__proto__ || Object.getPrototypeOf(SetNavigationProperty)).apply(this, arguments));\n    }\n\n    _createClass(SetNavigationProperty, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {\n            request.data[this.key] = this.value;\n        }\n    }]);\n\n    return SetNavigationProperty;\n}(SetDataProperty);\n\nvar ClearRequestData = exports.ClearRequestData = function (_RequestActivity2) {\n    _inherits(ClearRequestData, _RequestActivity2);\n\n    function ClearRequestData() {\n        _classCallCheck(this, ClearRequestData);\n\n        return _possibleConstructorReturn(this, (ClearRequestData.__proto__ || Object.getPrototypeOf(ClearRequestData)).apply(this, arguments));\n    }\n\n    _createClass(ClearRequestData, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {\n            delete request.data;\n        }\n    }]);\n\n    return ClearRequestData;\n}(RequestActivity);\n\n},{}],13:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _core.$C)('$data.storageProviders.oData.oDataWhereCompiler', _core2.default.Expressions.EntityExpressionVisitor, null, {\n    constructor: function constructor(provider, lambdaPrefix) {\n        this.provider = provider;\n        this.entityContext = provider.context;\n        this.lambdaPrefix = lambdaPrefix;\n    },\n\n    compile: function compile(expression, context) {\n        this.Visit(expression, context);\n    },\n\n    VisitParametricQueryExpression: function VisitParametricQueryExpression(expression, context) {\n        this.Visit(expression.expression, context);\n    },\n\n    VisitUnaryExpression: function VisitUnaryExpression(expression, context) {\n        context.data += expression.resolution.mapTo;\n        context.data += \"(\";\n        this.Visit(expression.operand, context);\n        context.data += \")\";\n    },\n\n    VisitSimpleBinaryExpression: function VisitSimpleBinaryExpression(expression, context) {\n        context.data += \"(\";\n        //TODO refactor!!!\n        if (expression.nodeType == \"in\") {\n            _core.Guard.requireType(\"expression.right\", expression.type, _core2.default.Expressions.ConstantExpression);\n            var paramValue = expression.right.value;\n            if (!(paramValue instanceof Array)) {\n                _core.Guard.raise(new _core.Exception(\"Right to the 'in' operator must be an array value\"));\n            }\n            var result = null;\n            var orResolution = { mapTo: \"or\", dataType: \"boolean\", name: \"or\" };\n            var eqResolution = { mapTo: \"eq\", dataType: \"boolean\", name: \"equal\" };\n\n            paramValue.forEach(function (item) {\n                var idValue = item;\n                var idCheck = _core.Container.createSimpleBinaryExpression(expression.left, idValue, _core2.default.Expressions.ExpressionType.Equal, \"==\", \"boolean\", eqResolution);\n                if (result) {\n                    result = _core.Container.createSimpleBinaryExpression(result, idCheck, _core2.default.Expressions.ExpressionType.Or, \"||\", \"boolean\", orResolution);\n                } else {\n                    result = idCheck;\n                };\n            });\n            var temp = context.data;\n            context.data = '';\n            this.Visit(result, context);\n            context.data = temp + context.data.replace(/\\(/g, '').replace(/\\)/g, '');\n        } else {\n            this.Visit(expression.left, context);\n            context.data += \" \";\n            context.data += expression.resolution.mapTo;\n            context.data += \" \";\n            this.Visit(expression.right, context);\n        };\n        context.data += \")\";\n    },\n\n    VisitEntityFieldExpression: function VisitEntityFieldExpression(expression, context) {\n        this.Visit(expression.source, context);\n        if (expression.source instanceof _core2.default.Expressions.ComplexTypeExpression) {\n            context.data += \"/\";\n        }\n        this.Visit(expression.selector, context);\n    },\n\n    VisitAssociationInfoExpression: function VisitAssociationInfoExpression(expression, context) {\n        var propName = expression.associationInfo.FromPropertyName;\n        var sm = this.entityContext._storageModel.getStorageModel(expression.associationInfo.FromType.inheritsFrom);\n        if (sm && !sm.IsComplexType) {\n            propName = expression.associationInfo.FromType.fullName + \"/\" + propName;\n        }\n        context.data += propName;\n    },\n\n    VisitMemberInfoExpression: function VisitMemberInfoExpression(expression, context) {\n        var sm = this.entityContext._storageModel.getStorageModel(expression.memberDefinition.definedBy.inheritsFrom);\n        if (sm && !sm.IsComplexType) {\n            context.data += expression.memberDefinition.definedBy.fullName + \"/\" + expression.memberName;\n        } else {\n            context.data += expression.memberName;\n        };\n    },\n\n    VisitComplexTypeExpression: function VisitComplexTypeExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        if (expression.source instanceof _core2.default.Expressions.ComplexTypeExpression) {\n            context.data += \"/\";\n        }\n\n        this.Visit(expression.selector, context);\n    },\n\n    VisitQueryParameterExpression: function VisitQueryParameterExpression(expression, context) {\n        var typeName = _core.Container.resolveName(expression.type);\n\n        var converter = this.provider.fieldConverter.toDb[typeName];\n        var value = converter ? converter(expression.value) : expression.value;\n\n        converter = this.provider.fieldConverter.escape[typeName];\n        context.data += converter ? converter(value) : value;\n    },\n\n    VisitEntityFieldOperationExpression: function VisitEntityFieldOperationExpression(expression, context) {\n        _core.Guard.requireType(\"expression.operation\", expression.operation, _core2.default.Expressions.MemberInfoExpression);\n\n        //TODO refactor!\n        var opDef = expression.operation.memberDefinition;\n        var opName = opDef.mapTo || opDef.name;\n        context.data += opName;\n        context.data += \"(\";\n        var paramCounter = 0;\n        var params = opDef.parameters || [{ name: \"@expression\" }];\n\n        var args = params.map(function (item, index) {\n            if (item.name === \"@expression\") {\n                return expression.source;\n            } else {\n                return expression.parameters[paramCounter++];\n            };\n        });\n\n        args.forEach(function (arg, index) {\n            if (index > 0) {\n                context.data += \",\";\n            };\n            this.Visit(arg, context);\n        }, this);\n        context.data += \")\";\n    },\n    VisitEntityFunctionOperationExpression: function VisitEntityFunctionOperationExpression(expression, context) {\n        _core.Guard.requireType(\"expression.operation\", expression.operation, _core2.default.Expressions.MemberInfoExpression);\n        this.Visit(expression.source, context);\n\n        //TODO refactor!\n        var opDef = expression.operation.memberDefinition;\n        var opName = opDef.mapTo || opDef.name;\n        context.data += opName;\n        context.data += \"(\";\n        var paramCounter = 0;\n        var params = opDef.method.params || [{ name: \"@expression\" }];\n\n        var args = params.map(function (item, index) {\n            if (item.name === \"@expression\") {\n                return expression.source;\n            } else {\n                return expression.parameters[paramCounter++];\n            };\n        });\n        var i = 0;\n        args.forEach(function (arg, index) {\n            if (arg === undefined || arg instanceof _core2.default.Expressions.ConstantExpression && typeof arg.value === 'undefined') return;\n\n            if (i > 0) {\n                context.data += \",\";\n            };\n            i++;\n            context.data += params[index].name + '=';\n            this.Visit(arg, context);\n        }, this);\n        context.data += \")\";\n    },\n    VisitContextFunctionOperationExpression: function VisitContextFunctionOperationExpression(expression, context) {\n        return this.VisitEntityFunctionOperationExpression(expression, context);\n    },\n\n    VisitConstantExpression: function VisitConstantExpression(expression, context) {\n        var typeName = _core.Container.resolveName(expression.type);\n\n        var converter = this.provider.fieldConverter.toDb[typeName];\n        var value = converter ? converter(expression.value) : expression.value;\n\n        converter = this.provider.fieldConverter.escape[typeName];\n        context.data += converter ? converter(value) : value;\n    },\n\n    VisitEntityExpression: function VisitEntityExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        if (this.lambdaPrefix && expression.selector.lambda) {\n            context.lambda = expression.selector.lambda;\n            context.data += expression.selector.lambda + '/';\n        }\n\n        //if (expression.selector instanceof $data.Expressions.EntityExpression) {\n        //    this.Visit(expression.selector, context);\n        //}\n    },\n\n    VisitEntitySetExpression: function VisitEntitySetExpression(expression, context) {\n        this.Visit(expression.source, context);\n        if (expression.selector instanceof _core2.default.Expressions.AssociationInfoExpression) {\n            this.Visit(expression.selector, context);\n            context.data += \"/\";\n        }\n    },\n\n    VisitFrameOperationExpression: function VisitFrameOperationExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        _core.Guard.requireType(\"expression.operation\", expression.operation, _core2.default.Expressions.MemberInfoExpression);\n\n        //TODO refactor!\n        var opDef = expression.operation.memberDefinition;\n        var opName = opDef.mapTo || opDef.name;\n        context.data += opName;\n        context.data += \"(\";\n        var paramCounter = 0;\n        var params = opDef.parameters || [{ name: \"@expression\" }];\n\n        var args = params.map(function (item, index) {\n            if (item.name === \"@expression\") {\n                return expression.source;\n            } else {\n                return expression.parameters[paramCounter++];\n            };\n        });\n\n        for (var i = 0; i < args.length; i++) {\n            var arg = args[i];\n\n            if (!opDef.method) {\n                var compiler = new _core2.default.storageProviders.oData.oDataWhereCompiler(this.provider, true);\n                var frameContext = { data: \"\" };\n\n                if (arg && arg.value instanceof _core2.default.Queryable) {\n                    var preparator = _core.Container.createQueryExpressionCreator(arg.value.entityContext);\n                    var prep_expression = preparator.Visit(arg.value.expression);\n                    arg = prep_expression;\n                } else if (arg) {\n                    arg = arg.selector;\n                }\n\n                var compiled = compiler.compile(arg, frameContext);\n\n                if (frameContext.data) {\n                    context.data += frameContext.lambda + ': ' + frameContext.data;\n                }\n            }\n        }\n        context.data += \")\";\n    }\n});\n\n},{\"jaydata/core\":\"jaydata/core\"}]},{},[4])(4)\n});\n\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\nvar strategy = {\r\n    name: 'batch',\r\n    condition: function (provider, convertedItems) {\r\n        var disabled = false;\r\n        if(typeof provider.providerConfiguration.disableBatch !== 'undefined'){\r\n            disabled = !!provider.providerConfiguration.disableBatch;\r\n        } else {\r\n            disabled = !!$data.defaults.OData.disableBatch;\r\n        }\r\n        \r\n        if (!disabled) {\r\n            var requests = convertedItems.getItems();\r\n            return requests.length > 1;\r\n        }\r\n        \r\n        return false;\r\n    },\r\n    save: function (provider, convertedItems, callBack) {\r\n        var that = provider;\r\n        var items = convertedItems.getItems();\r\n        var requests = items.map(function(it){ return it.request.build().get() })\r\n        \r\n        var requestData = [{\r\n            requestUri: that.providerConfiguration.oDataServiceHost + \"/$batch\",\r\n            method: \"POST\",\r\n            data: {\r\n                __batchRequests: [{ __changeRequests: requests }]\r\n            },\r\n            headers: {\r\n            }\r\n        }, function (data, response) {\r\n            if (response.statusCode == 200 || response.statusCode == 202) {\r\n                var result = data.__batchResponses[0].__changeResponses;\r\n                var errors = [];\r\n\r\n                for (var i = 0; i < result.length; i++) {\r\n                    if (result[i].statusCode >= 200 && result[i].statusCode < 300) {\r\n                        var item = convertedItems.getByResponse(result[i], i);\r\n                        if(item instanceof $data.Entity && result[i].statusCode != 204){\r\n                            that.reload_fromResponse(item, result[i].data, result[i]);\r\n                            convertedItems.setProcessed(item);\r\n                        }\r\n                    } else {\r\n                        errors.push(that.parseError(result[i]));\r\n                    }\r\n                }\r\n                if (errors.length > 0) {\r\n                    if (errors.length === 1) {\r\n                        callBack.error(errors[0]);\r\n                    } else {\r\n                        callBack.error(new Exception('See inner exceptions', 'Batch failed', errors));\r\n                    }\r\n                } else if (callBack.success) {\r\n                    callBack.success(convertedItems.length);\r\n                }\r\n            } else {\r\n                callBack.error(that.parseError(response));\r\n            }\r\n\r\n        }, function (e) {\r\n            callBack.error(that.parseError(e));\r\n        }, that.oData.batch.batchHandler];\r\n\r\n        if (typeof that.providerConfiguration.useJsonLight !== 'undefined') {\r\n            requestData[0].useJsonLight = that.providerConfiguration.useJsonLight;\r\n        }\r\n\r\n        that.appendBasicAuth(requestData[0], that.providerConfiguration.user, that.providerConfiguration.password, that.providerConfiguration.withCredentials);\r\n\r\n        that.context.prepareRequest.call(that, requestData);\r\n        that.oData.request.apply(that, requestData);\r\n    }\r\n}\r\n\r\n\r\nexport { strategy }","\r\nvar strategy = {\r\n    name: 'empty',\r\n    condition: function (provider, convertedItems) {\r\n        return true;\r\n    },\r\n    save: function (provider, convertedItems, callBack) {\r\n        callBack.success(0);\r\n    }\r\n}\r\n\r\n\r\nexport { strategy }","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\nvar strategy = {\r\n    name: 'single',\r\n    condition: function (provider, convertedItems) {\r\n        var requests = convertedItems.getItems();\r\n        return requests.length > 0;\r\n    },\r\n    save: function (provider, convertedItems, callBack) {\r\n        var that = provider;\r\n        var items = convertedItems.getItems();\r\n        \r\n        var doSave = function(items, index, done){\r\n            var item = items[index];\r\n            if(!item) return done()\r\n            \r\n            var request = item.request.build().get();\r\n            var requestData = [request, function (data, response) {\r\n                if (response.statusCode >= 200 && response.statusCode < 300) {\r\n                    var item = convertedItems.getByResponse(response, index);\r\n                    if(item instanceof $data.Entity && response.statusCode != 204){\r\n                        that.reload_fromResponse(item, data, response);\r\n                        convertedItems.setProcessed(item);\r\n                    }\r\n\r\n                    doSave(items, ++index, done);\r\n                } else {\r\n                    done(response);\r\n                }\r\n\r\n            }, done];\r\n\r\n            that.appendBasicAuth(requestData[0], that.providerConfiguration.user, that.providerConfiguration.password, that.providerConfiguration.withCredentials);\r\n            that.context.prepareRequest.call(that, requestData);\r\n            that.oData.request.apply(that, requestData);\r\n        }\r\n        \r\n        doSave(items, 0, function(err, result){\r\n            if(err) return callBack.error(that.parseError(err));\r\n            callBack.success(result);\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport { strategy }","import $data from 'jaydata/core';\r\nimport converter from './oDataConverter.js';\r\nimport provider from './oDataProvider.js';\r\nimport compiler from './oDataCompiler.js';\r\nimport order from './oDataWhereCompiler.js';\r\nimport include from './oDataIncludeCompiler.js';\r\nimport paging from './oDataOrderCompiler.js';\r\nimport projection from './oDataPagingCompiler.js';\r\nimport where from './oDataProjectionCompiler.js';\r\n\r\nexport default $data;\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$C('$data.storageProviders.oData.oDataModelBinderConfigCompiler', $data.modelBinder.ModelBinderConfigCompiler, null, {\r\n    VisitEntityFieldOperationExpression: function(expression, builder){\r\n        this.Visit(expression.source, builder);\r\n        var opDef = expression.operation.memberDefinition;\r\n        if (typeof opDef.projection == \"function\"){\r\n            builder.modelBinderConfig.$type = opDef.returnType || opDef.dataType;\r\n            builder.modelBinderConfig.$value = function(meta, data){ return opDef.projection(data[meta.$source]); };\r\n        }\r\n        if (opDef.aggregate){\r\n            if (opDef.returnType || opDef.dataType) builder.modelBinderConfig.$type = opDef.returnType || opDef.dataType;\r\n        }\r\n    }\r\n});\r\n\r\n$C('$data.storageProviders.oData.oDataCompiler', $data.Expressions.EntityExpressionVisitor, null, {\r\n    constructor: function () {\r\n        this.context = {};\r\n        this.provider = {};\r\n        //this.logicalType = null;\r\n        this.includes = null;\r\n        this.mainEntitySet = null;\r\n    },\r\n    compile: function (query) {\r\n\r\n        this.provider = query.context.storageProvider;\r\n        this.context = query.context;\r\n\r\n        if (query.defaultType) {\r\n            this.mainEntitySet = query.context.getEntitySetFromElementType(query.defaultType);\r\n        }\r\n\r\n        var queryFragments = { urlText: \"\" };\r\n\r\n        this.Visit(query.expression, queryFragments);\r\n        if(queryFragments.$expand){\r\n            queryFragments.$expand = queryFragments.$expand.toString();\r\n        }\r\n        var $apply = \"\";\r\n        if (queryFragments.aggregate){\r\n            $apply = `aggregate(${queryFragments.aggregate.join(\",\")})`;\r\n        }\r\n        if (queryFragments.groupby){\r\n            queryFragments.groupby = queryFragments.groupby.filter(function(it, i, arr){ return arr.indexOf(it) == i; });\r\n            $apply = queryFragments.aggregate\r\n                ? `groupby((${queryFragments.groupby.join(\",\")}),${$apply})`\r\n                : `groupby((${queryFragments.groupby.join(\",\")}))`;\r\n        }\r\n        if ($apply && queryFragments.$filter){\r\n            $apply = `filter(${queryFragments.$filter})/${$apply}`;\r\n        }\r\n        if ($apply){\r\n            queryFragments = Object.assign({}, queryFragments, {\r\n                aggregate: [],\r\n                groupby: [],\r\n                $filter: \"\",\r\n                $select: \"\",\r\n                $apply: $apply\r\n            });\r\n        }\r\n\r\n        query.modelBinderConfig = {};\r\n        var modelBinder = $data.storageProviders.oData.oDataModelBinderConfigCompiler.create(query, this.includes, true);\r\n        modelBinder.Visit(query.expression);\r\n\r\n\r\n        var queryText = queryFragments.urlText;\r\n        var addAmp = false;\r\n        \r\n        if(queryFragments.$funcParams){\r\n            queryText += \"(\" + queryFragments.$funcParams + \")\"\r\n        }\r\n        \r\n        for (var name in queryFragments) {\r\n            if (name != \"urlText\" && name != \"actionPack\" && name != \"data\" && name != \"lambda\" && name != \"method\" && name != \"postData\" &&\r\n                name != \"_isBatchExecuteQuery\" && name != \"_subQueries\" && name != \"$funcParams\" && queryFragments[name] != \"\") {\r\n\r\n                if (addAmp) { queryText += \"&\"; } else { queryText += \"?\"; }\r\n                addAmp = true;\r\n                if(name != \"$urlParams\"){\r\n                    queryText += name + '=' + queryFragments[name];\r\n                }else{\r\n                    queryText += queryFragments[name];\r\n                }\r\n            }\r\n        }\r\n        query.queryText = queryText;\r\n        query.postData = queryFragments.postData;\r\n        var result =  {\r\n            queryText: queryText,\r\n            withInlineCount: '$inlinecount' in queryFragments || '$count' in queryFragments,\r\n            method: queryFragments.method || 'GET',\r\n            postData: queryFragments.postData,\r\n            isBatchExecuteQuery: queryFragments._isBatchExecuteQuery,\r\n            subQueries: queryFragments._subQueries,\r\n            params: []\r\n        };\r\n\r\n        query._getComplitedData = function () {\r\n            return result;\r\n        }\r\n\r\n        return result;\r\n    },\r\n    VisitOrderExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        var orderCompiler = Container.createoDataOrderCompiler(this.provider);\r\n        orderCompiler.compile(expression, context);\r\n    },\r\n    VisitPagingExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        var pagingCompiler = Container.createoDataPagingCompiler(this.provider);\r\n        pagingCompiler.compile(expression, context);\r\n    },\r\n    VisitIncludeExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        var includeCompiler = Container.createoDataIncludeCompiler(this.provider);\r\n        this.includes = this.includes || []\r\n        var includeContext = { data: context[\"$expand\"], includes: this.includes }\r\n        includeCompiler.compile(expression.selector, includeContext);\r\n        context[\"$expand\"] = includeContext.data;\r\n    },\r\n    VisitFindExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        if (expression.subMember) {\r\n            context.urlText += \"/\" + expression.subMember.memberName;\r\n        }\r\n\r\n        if (expression.params && expression.params.length > 0){\r\n            context.urlText += '(';\r\n            if (expression.params.length === 1) {\r\n                var param = expression.params[0];\r\n                var typeName = Container.resolveName(param.type);\r\n\r\n                var converter = this.provider.fieldConverter.toDb[typeName];\r\n                var value = converter ? converter(param.value) : param.value;\r\n\r\n                converter = this.provider.fieldConverter.escape[typeName];\r\n                value = converter ? converter(param.value) : param.value;\r\n                context.urlText += value;\r\n            } else {\r\n                for (var i = 0; i < expression.params.length; i++) {\r\n                    var param = expression.params[i];\r\n                    var typeName = Container.resolveName(param.type);\r\n\r\n                    var converter = this.provider.fieldConverter.toDb[typeName];\r\n                    var value = converter ? converter(param.value) : param.value;\r\n\r\n                    converter = this.provider.fieldConverter.escape[typeName];\r\n                    value = converter ? converter(param.value) : param.value;\r\n\r\n                    if (i > 0) context.urlText += ',';\r\n                    context.urlText += param.name + '=' + value;\r\n                }\r\n            }\r\n            context.urlText += ')';\r\n        }\r\n    },\r\n    VisitProjectionExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        var projectionCompiler = Container.createoDataProjectionCompiler(this.provider);\r\n        projectionCompiler.compile(expression, context);\r\n    },\r\n    VisitFilterExpression: function (expression, context) {\r\n        ///<param name=\"expression\" type=\"$data.Expressions.FilterExpression\" />\r\n\r\n        this.Visit(expression.source, context);\r\n\r\n        var filterCompiler = Container.createoDataWhereCompiler(this.provider);\r\n        context.data = \"\";\r\n        filterCompiler.compile(expression.selector, context);\r\n        context[\"$filter\"] = context.data;\r\n        context.data = \"\";\r\n\r\n    },\r\n    VisitInlineCountExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        if (this.provider.providerConfiguration.maxDataServiceVersion === \"4.0\") {\r\n            context[\"$count\"] = expression.selector.value === 'allpages';\r\n        } else {\r\n            context[\"$inlinecount\"] = expression.selector.value;\r\n        }\r\n    },\r\n    VisitEntitySetExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        context.urlText += \"/\" + expression.instance.tableName;\r\n        //this.logicalType = expression.instance.elementType;\r\n        if (expression.params) {\r\n            for (var i = 0; i < expression.params.length; i++) {\r\n                this.Visit(expression.params[i], context);\r\n            }\r\n        }\r\n    },\r\n    VisitServiceOperationExpression: function (expression, context) {\r\n        if (expression.boundItem) {\r\n            context.urlText += \"/\" + expression.boundItem.entitySet.tableName;\r\n            if (expression.boundItem.data instanceof $data.Entity) {\r\n                context.urlText += '(' + this.provider.getEntityKeysValue(expression.boundItem) + ')';\r\n            }\r\n        }\r\n        context.urlText += \"/\" + (expression.cfg.namespace ? (expression.cfg.namespace + \".\" + expression.cfg.serviceName) : expression.cfg.serviceName);\r\n        context.method = context.method || expression.cfg.method;\r\n\r\n        //this.logicalType = expression.returnType;\r\n        if (expression.params) {\r\n            context.serviceConfig = expression.cfg\r\n            for (var i = 0; i < expression.params.length; i++) {\r\n                this.Visit(expression.params[i], context);\r\n            }\r\n            delete context.serviceConfig;\r\n        }\r\n    },\r\n    VisitBatchDeleteExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        context.urlText += '/$batchDelete';\r\n        context.method = 'DELETE';\r\n    },\r\n\r\n    VisitConstantExpression: function (expression, context) {\r\n        var typeName = Container.resolveName(expression.type);\r\n        if (expression.value instanceof $data.Entity)\r\n            typeName = $data.Entity.fullName;\r\n\r\n        var converter = this.provider.fieldConverter.toDb[typeName];\r\n        var value = converter ? converter(expression.value, expression) : expression.value;\r\n\r\n\r\n        if (context.method === 'GET' || !context.method) {\r\n            converter = this.provider.fieldConverter.escape[typeName];\r\n            value = converter ? converter(value, expression) : value;\r\n            if (value !== undefined) {\r\n                var serviceConfig = context.serviceConfig || {};\r\n                var paramConfig = (serviceConfig && serviceConfig.params.filter(p => p.name == expression.name)[0]) || {}\r\n                \r\n                var useAlias = serviceConfig.namespace && \r\n                    (paramConfig.useAlias || \r\n                     serviceConfig.useAlias || \r\n                     this.provider.providerConfiguration.useParameterAlias || \r\n                     $data.defaults.OData.useParameterAlias);\r\n                     \r\n                var paramValue = useAlias ? \"@\" + expression.name : value;\r\n                var paramName = (useAlias ? \"@\" : \"\") + expression.name; \r\n                \r\n                if (context['$funcParams']) { context['$funcParams'] += ','; } else { context['$funcParams'] = ''; }\r\n                    context['$funcParams'] += expression.name + '=' + paramValue;\r\n                \r\n                if (useAlias) {\r\n                    if (context['$urlParams']) { context['$urlParams'] += '&'; } else { context['$urlParams'] = ''; }\r\n                        context['$urlParams'] += paramName + '=' + value;\r\n                }\r\n            }\r\n        } else {\r\n            context.postData = context.postData || {};\r\n            context.postData[expression.name] = value;\r\n        }\r\n    },\r\n//    VisitConstantExpression: function (expression, context) {\r\n//        if (context['$urlParams']) { context['$urlParams'] += '&'; } else { context['$urlParams'] = ''; }\r\n//\r\n//\r\n//        var valueType = Container.getTypeName(expression.value);\r\n//\r\n//\r\n//\r\n//        context['$urlParams'] += expression.name + '=' + this.provider.fieldConverter.toDb[Container.resolveName(Container.resolveType(valueType))](expression.value);\r\n//    },\r\n\r\n\r\n    VisitCountExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        context.urlText += '/$count';\r\n    },\r\n\r\n    VisitBatchExecuteQueryExpression: function (expression, context) {\r\n        context.urlText += '/$batch'\r\n        context.method = 'POST';\r\n        context.postData = { __batchRequests: [] };\r\n        context._isBatchExecuteQuery = true;\r\n        context._subQueries = expression.members;\r\n\r\n        for (var i = 0; i < expression.members.length; i++) {\r\n            var queryable = expression.members[i];\r\n            var compiler = new $data.storageProviders.oData.oDataCompiler();\r\n            var compiled = compiler.compile(queryable);\r\n            context.postData.__batchRequests.push({\r\n                requestUri: this.provider.providerConfiguration.oDataServiceHost + compiled.queryText,\r\n                method: compiled.method,\r\n                data: compiled.data,\r\n                headers: compiled.headers\r\n            });\r\n        }\r\n    },\r\n\r\n    VisitDistinctExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        context.groupby = context.groupby || [];\r\n        context.groupby.push(...context.$select.split(','));\r\n    },\r\n\r\n    VisitGroupExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        \r\n        var groupContext = Object.assign({}, context);\r\n        var orderCompiler = Container.createoDataOrderCompiler(this.provider);\r\n        orderCompiler.compile(expression.selector, groupContext);\r\n\r\n        context.groupby = context.groupby || [];\r\n        context.groupby.push(...groupContext.data.split(','));\r\n    }\r\n}, {});\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\nimport atob from 'atob'\r\n\r\n$data.defaults = $data.defaults || {};\r\n$data.defaults.oDataWebApi = false;\r\n\r\n$data.oDataConverter = {\r\n    fromDb: {\r\n        '$data.Enum': function(v, enumType) { return $data.Container.convertTo(v, enumType); },\r\n        '$data.Byte': $data.Container.proxyConverter,\r\n        '$data.SByte': $data.Container.proxyConverter,\r\n        '$data.Decimal': function(v) { return $data.Container.convertTo(v, $data.Decimal); },\r\n        '$data.Float': $data.Container.proxyConverter,\r\n        '$data.Int16': $data.Container.proxyConverter,\r\n        '$data.Int64': function(v) { return $data.Container.convertTo(v, $data.Int64); },\r\n        '$data.ObjectID': $data.Container.proxyConverter,\r\n        '$data.Integer': $data.Container.proxyConverter,//function (number) { return (typeof number === 'string' && /^\\d+$/.test(number)) ? parseInt(number) : number; },\r\n        '$data.Int32': $data.Container.proxyConverter,\r\n        '$data.Number': $data.Container.proxyConverter,\r\n        '$data.Date': function (dbData) {\r\n            if (dbData) {\r\n                if (dbData instanceof Date) {\r\n                    return dbData;\r\n                } else if (dbData.substring(0, 6) === '/Date(') {\r\n                    return new Date(parseInt(dbData.substr(6)));\r\n                } else {\r\n                    //ISODate without Z? Safari compatible with Z\r\n                    if (dbData.indexOf('Z') === -1 && !dbData.match('T.*[+-]'))\r\n                        dbData += 'Z';\r\n                    return new Date(dbData);\r\n                }\r\n            } else {\r\n                return dbData;\r\n            }\r\n        },\r\n        '$data.DateTimeOffset': function (dbData) {\r\n            if (dbData) {\r\n                if (dbData instanceof Date) {\r\n                    return dbData;\r\n                } else if (dbData.substring(0, 6) === '/Date(') {\r\n                    return new Date(parseInt(dbData.substr(6)));\r\n                } else {\r\n                    //ISODate without Z? Safari compatible with Z\r\n                    if (dbData.indexOf('Z') === -1 && !dbData.match('T.*[+-]'))\r\n                        dbData += 'Z';\r\n                    return new Date(dbData);\r\n                }\r\n            } else {\r\n                return dbData;\r\n            }\r\n        },\r\n        '$data.Time': function(v) { return $data.Container.convertTo(v, $data.Time); },\r\n        '$data.Day': $data.Container.proxyConverter,\r\n        '$data.Duration': $data.Container.proxyConverter,\r\n        '$data.String': $data.Container.proxyConverter,\r\n        '$data.Boolean': $data.Container.proxyConverter,\r\n        '$data.Blob': function (v) {\r\n            if (typeof v == 'string'){\r\n                try { return $data.Container.convertTo(atob(v), '$data.Blob'); }\r\n                catch (e) { return v; }\r\n            }else return v;\r\n        },\r\n        '$data.Object': function (o) { if (o === undefined) { return new $data.Object(); } else if (typeof o === 'string') { return JSON.parse(o); } return o; },\r\n        '$data.Array': function (o) { if (o === undefined) { return new $data.Array(); } else if (o instanceof $data.Array) { return o; } return JSON.parse(o); },\r\n        '$data.GeographyPoint': function (g) { if (g) { return new $data.GeographyPoint(g); } return g; },\r\n        '$data.GeographyLineString': function (g) { if (g) { return new $data.GeographyLineString(g); } return g; },\r\n        '$data.GeographyPolygon': function (g) { if (g) { return new $data.GeographyPolygon(g); } return g; },\r\n        '$data.GeographyMultiPoint': function (g) { if (g) { return new $data.GeographyMultiPoint(g); } return g; },\r\n        '$data.GeographyMultiLineString': function (g) { if (g) { return new $data.GeographyMultiLineString(g); } return g; },\r\n        '$data.GeographyMultiPolygon': function (g) { if (g) { return new $data.GeographyMultiPolygon(g); } return g; },\r\n        '$data.GeographyCollection': function (g) { if (g) { return new $data.GeographyCollection(g); } return g; },\r\n        '$data.GeometryPoint': function (g) { if (g) { return new $data.GeometryPoint(g); } return g; },\r\n        '$data.GeometryLineString': function (g) { if (g) { return new $data.GeometryLineString(g); } return g; },\r\n        '$data.GeometryPolygon': function (g) { if (g) { return new $data.GeometryPolygon(g); } return g; },\r\n        '$data.GeometryMultiPoint': function (g) { if (g) { return new $data.GeometryMultiPoint(g); } return g; },\r\n        '$data.GeometryMultiLineString': function (g) { if (g) { return new $data.GeometryMultiLineString(g); } return g; },\r\n        '$data.GeometryMultiPolygon': function (g) { if (g) { return new $data.GeometryMultiPolygon(g); } return g; },\r\n        '$data.GeometryCollection': function (g) { if (g) { return new $data.GeometryCollection(g); } return g; },\r\n        '$data.Guid': function (guid) { return guid ? guid.toString() : guid; }\r\n    },\r\n    toDb: {\r\n        '$data.Enum': function (e, enumType) { return  (e !== null && e !== undefined) ? (enumType && enumType.getEnumName ? enumType.getEnumName(e) : \"\") : e },\r\n        '$data.Entity': $data.Container.proxyConverter,\r\n        '$data.Byte': $data.Container.proxyConverter,\r\n        '$data.SByte': $data.Container.proxyConverter,\r\n        '$data.Decimal': $data.Container.proxyConverter,//function (v) { return v ? parseFloat(v) : v },\r\n        '$data.Float': $data.Container.proxyConverter,\r\n        '$data.Int16': $data.Container.proxyConverter,\r\n        '$data.Int64': $data.Container.proxyConverter,//function (v) { return v ? parseInt(v) : v },\r\n        '$data.ObjectID': $data.Container.proxyConverter,\r\n        '$data.Integer': $data.Container.proxyConverter,\r\n        '$data.Int32': $data.Container.proxyConverter,\r\n        '$data.Number': $data.Container.proxyConverter,\r\n        '$data.Date': function (e) { return e ? e.toISOString().replace('Z', '') : e; },\r\n        '$data.Time': $data.Container.proxyConverter,\r\n        '$data.Day': $data.Container.proxyConverter,\r\n        '$data.Duration': $data.Container.proxyConverter,\r\n        '$data.DateTimeOffset': function(v){ return v ? v.toISOString() : v; },\r\n        '$data.String': $data.Container.proxyConverter,\r\n        '$data.Boolean': $data.Container.proxyConverter,\r\n        '$data.Blob': function (v) { return v ? $data.Blob.toBase64(v) : v; },\r\n        '$data.Object': $data.Container.proxyConverter,\r\n        '$data.Array': function(o, def){\r\n            if(o && def && def.elementType){\r\n                var typeName = Container.resolveName(def.elementType);\r\n                var converter = $data.oDataConverter['toDb'][typeName];\r\n                var values = [];\r\n                for(var i = 0; i < o.length; i++){\r\n                    values.push(converter ? converter(o[i]) : o[i]);\r\n                }\r\n                \r\n                return values;\r\n            }\r\n            return $data.Container.proxyConverter.apply(this, arguments);\r\n        },\r\n        '$data.GeographyPoint': $data.Container.proxyConverter,\r\n        '$data.GeographyLineString': $data.Container.proxyConverter,\r\n        '$data.GeographyPolygon': $data.Container.proxyConverter,\r\n        '$data.GeographyMultiPoint': $data.Container.proxyConverter,\r\n        '$data.GeographyMultiLineString': $data.Container.proxyConverter,\r\n        '$data.GeographyMultiPolygon': $data.Container.proxyConverter,\r\n        '$data.GeographyCollection': $data.Container.proxyConverter,\r\n        '$data.GeometryPoint': $data.Container.proxyConverter,\r\n        '$data.GeometryLineString': $data.Container.proxyConverter,\r\n        '$data.GeometryPolygon': $data.Container.proxyConverter,\r\n        '$data.GeometryMultiPoint': $data.Container.proxyConverter,\r\n        '$data.GeometryMultiLineString': $data.Container.proxyConverter,\r\n        '$data.GeometryMultiPolygon': $data.Container.proxyConverter,\r\n        '$data.GeometryCollection': $data.Container.proxyConverter,\r\n        '$data.Guid': $data.Container.proxyConverter\r\n    },\r\n    escape: {\r\n        '$data.Enum': function (e, enumType) { return  (e !== null && e !== undefined) ? ((enumType ? enumType.fullName : \"\") + \"'\" + e + \"'\") : e },\r\n        '$data.Entity': function (e) { return JSON.stringify(e); },\r\n        '$data.Integer': $data.Container.proxyConverter,\r\n        '$data.Int32': $data.Container.proxyConverter,\r\n        '$data.Number': function (v) { return v && $data.defaults.oDataWebApi ? v + 'd' : v; },\r\n        '$data.Int16': $data.Container.proxyConverter,\r\n        '$data.Byte': $data.Container.proxyConverter,\r\n        '$data.SByte': $data.Container.proxyConverter,\r\n        '$data.Decimal': function (v) { return v && $data.defaults.oDataWebApi ? v + 'm' : v; },\r\n        '$data.Float': function (v) { return v && $data.defaults.oDataWebApi ? v + 'f' : v; },\r\n        '$data.Int64': $data.Container.proxyConverter,\r\n        '$data.Time': $data.Container.proxyConverter,\r\n        '$data.Day': $data.Container.proxyConverter,\r\n        '$data.Duration': function (v) { return v ? \"duration'\" + v + \"'\" : v; },\r\n        '$data.DateTimeOffset': function (d) { return d ? encodeURIComponent(d) : d },\r\n        '$data.Date': function (date) { return date ? \"datetime'\" + date + \"'\" : date; },\r\n        '$data.String': function (text) { return typeof text === 'string' ? \"'\" + text.replace(/'/g, \"''\") + \"'\" : text; },\r\n        '$data.ObjectID': function (text) { return typeof text === 'string' ? \"'\" + text.replace(/'/g, \"''\") + \"'\" : text; },\r\n        '$data.Boolean': function (bool) { return typeof bool === 'boolean' ? bool.toString() : bool; },\r\n        '$data.Blob': function (b) { return b ? \"binary'\" + b + \"'\" : b; },\r\n        '$data.Object': function (o) { return JSON.stringify(o); },\r\n        '$data.Array': function (o, def) {\r\n            if(o && def && def.elementType){\r\n                var typeName = Container.resolveName(def.elementType);\r\n                var values = [];\r\n                for(var i = 0; i < o.length; i++){\r\n                    values.push($data.oDataConverter['escape'][typeName](o[i]));\r\n                }\r\n                \r\n                return \"[\" + values.join(',') + \"]\"\r\n            } \r\n            return JSON.stringify(o); \r\n        },\r\n        '$data.GeographyPoint': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeographyLineString': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeographyPolygon': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeographyMultiPoint': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeographyMultiLineString': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeographyMultiPolygon': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeographyCollection': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryPoint': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryLineString': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryPolygon': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryMultiPoint': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryMultiLineString': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryMultiPolygon': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryCollection': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.Guid': function (guid) { return guid ? (\"\" + guid.toString() + \"\") : guid; }\r\n    },\r\n    unescape: {\r\n        '$data.Entity': function (v, c) {\r\n            var config = c || {};\r\n            var value = JSON.parse(v);\r\n            if (value && config.type) {\r\n                var type = Container.resolveType(config.type);\r\n                /*Todo converter*/\r\n                return new type(value, { converters: undefined });\r\n            }\r\n            return value;\r\n        },\r\n        '$data.Number': function (v) { return JSON.parse(v); },\r\n        '$data.Integer': function (v) { return JSON.parse(v); },\r\n        '$data.Int32': function (v) { return JSON.parse(v); },\r\n        '$data.Byte': function (v) { return JSON.parse(v); },\r\n        '$data.SByte': function (v) { return JSON.parse(v); },\r\n        '$data.Decimal': function (v) {\r\n            if (typeof v === 'string' && v.toLowerCase().lastIndexOf('m') === v.length - 1) {\r\n                return v.substr(0, v.length - 1);\r\n            } else {\r\n                return v;\r\n            }\r\n        },\r\n        '$data.Float': function (v) {\r\n            if (typeof v === 'string' && v.toLowerCase().lastIndexOf('f') === v.length - 1) {\r\n                return v.substr(0, v.length - 1);\r\n            } else {\r\n                return v;\r\n            }\r\n        },\r\n        '$data.Int16': function (v) { return JSON.parse(v); },\r\n        '$data.Int64': function (v) {\r\n            return v;\r\n        },\r\n        '$data.Boolean': function (v) { return JSON.parse(v); },\r\n        '$data.Date': function (v) {\r\n            if (typeof v === 'string' && /^datetime'/.test(v)) {\r\n                return v.slice(9, v.length - 1);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.String': function (v) {\r\n            if (typeof v === 'string' && v.indexOf(\"'\") === 0 && v.lastIndexOf(\"'\") === v.length - 1) {\r\n                return v.slice(1, v.length - 1);\r\n            } else {\r\n                return v;\r\n            }\r\n        },\r\n        '$data.ObjectID': function (v) {\r\n            if (typeof v === 'string' && v.indexOf(\"'\") === 0 && v.lastIndexOf(\"'\") === v.length - 1) {\r\n                return v.slice(1, v.length - 1);\r\n            } else {\r\n                return v;\r\n            }\r\n        },\r\n        '$data.Guid': function (v) {\r\n            if (/^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$/.test(v)) {\r\n                var data = v.slice(5, v.length - 1)\r\n                return $data.parseGuid(data).toString();\r\n            }\r\n            return v;\r\n        },\r\n        '$data.Array': function (v, c) {\r\n            var config = c || {};\r\n\r\n            var value = JSON.parse(v) || [];\r\n            if (value && config.elementType) {\r\n                var type = Container.resolveType(config.elementType);\r\n                var typeName = Container.resolveName(type);\r\n                if (type && type.isAssignableTo && type.isAssignableTo($data.Entity)) {\r\n                    typeName = $data.Entity.fullName;\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    var converter = $data.oDataConverter.unescape[typeName];\r\n                    for (var i = 0; i < value.length; i++) {\r\n                        value[i] = converter ? converter(value[i]) : value[i];\r\n                    }\r\n                }\r\n                return value;\r\n            }\r\n            return value;\r\n        },\r\n        '$data.DateTimeOffset': function (v) {\r\n            if (typeof v === 'string') {\r\n                return $data.Container.convertTo(v, $data.DateTimeOffset);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.Time': function (v) {\r\n            if (typeof v === 'string' && /^time'/.test(v)) {\r\n                return $data.Container.convertTo(v.slice(5, v.length - 1), $data.Time);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.Day': function (v) {\r\n            if (typeof v === 'string' && /^date'/.test(v)) {\r\n                return $data.Container.convertTo(v.slice(5, v.length - 1), $data.Day);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.Duration': function (v) {\r\n            if (typeof v === 'string' && /^duration'/.test(v)) {\r\n                return $data.Container.convertTo(v.slice(9, v.length - 1), $data.Duration);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.Blob': function(v){\r\n            if (typeof v === 'string'){\r\n                if (/^X'/.test(v)){\r\n                    return $data.Blob.createFromHexString(v.slice(2, v.length - 1));\r\n                }else if (/^binary'/.test(v)){\r\n                    return $data.Blob.createFromHexString(v.slice(7, v.length - 1));\r\n                }\r\n            }\r\n            return v;\r\n        },\r\n        '$data.Object': function (v) { return JSON.parse(v); },\r\n        '$data.GeographyPoint': function (v) {\r\n            if (/^geography'POINT\\(/i.test(v)) {\r\n                var data = v.slice(10, v.length - 1);\r\n                return $data.GeographyBase.parseFromString(data);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.GeographyPolygon': function (v) {\r\n            if (/^geography'POLYGON\\(/i.test(v)) {\r\n                var data = v.slice(10, v.length - 1);\r\n                return $data.GeographyBase.parseFromString(data);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.GeometryPoint': function (v) {\r\n            if (/^geometry'POINT\\(/i.test(v)) {\r\n                var data = v.slice(9, v.length - 1);\r\n                return $data.GeometryBase.parseFromString(data);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.GeometryPolygon': function (v) {\r\n            if (/^geometry'POLYGON\\(/i.test(v)) {\r\n                var data = v.slice(9, v.length - 1);\r\n                return $data.GeometryBase.parseFromString(data);\r\n            }\r\n            return v;\r\n        }\r\n    },\r\n    xmlEscape: {\r\n        '$data.Byte': function (v) { return v.toString(); },\r\n        '$data.SByte': function (v) { return v.toString(); },\r\n        '$data.Decimal': function (v) { return v.toString(); },\r\n        '$data.Float': function (v) { return v.toString(); },\r\n        '$data.Int16': function (v) { return v.toString(); },\r\n        '$data.Int64': function (v) { return v.toString(); },\r\n        '$data.Integer': function (v) { return v.toString(); },\r\n        '$data.Int32': function (v) { return v.toString(); },\r\n        '$data.Boolean': function (v) { return v.toString(); },\r\n        '$data.Blob': function (v) { return $data.Blob.toBase64(v); },\r\n        '$data.Date': function (v) { return v.toISOString().replace('Z', ''); },\r\n        '$data.DateTimeOffset': function(v){ return v.toISOString(); },\r\n        '$data.Time': function (v) { return v.toString(); },\r\n        '$data.Day': function (v) { return v.toString(); },\r\n        '$data.Duration': function (v) { return v.toString(); },\r\n        '$data.Number': function (v) { return v.toString(); },\r\n        '$data.String': function (v) { return v.toString(); },\r\n        '$data.ObjectID': function (v) { return v.toString(); },\r\n        '$data.Object': function (v) { return JSON.stringify(v); },\r\n        '$data.Guid': function (v) { return v.toString(); }/*,\r\n        '$data.GeographyPoint': function (v) { return this._buildSpatialPoint(v, 'http://www.opengis.net/def/crs/EPSG/0/4326'); },\r\n        '$data.GeometryPoint': function (v) { return this._buildSpatialPoint(v, 'http://www.opengis.net/def/crs/EPSG/0/0'); },\r\n        '$data.GeographyLineString': function (v) { return this._buildSpatialLineString(v, 'http://www.opengis.net/def/crs/EPSG/0/4326'); },\r\n        '$data.GeometryLineString': function (v) { return this._buildSpatialLineString(v, 'http://www.opengis.net/def/crs/EPSG/0/0'); }*/\r\n    },\r\n    simple: { //$value, $count\r\n        '$data.Byte': function (v) { return v.toString(); },\r\n        '$data.SByte': function (v) { return v.toString(); },\r\n        '$data.Decimal': function (v) { return v.toString(); },\r\n        '$data.Float': function (v) { return v.toString(); },\r\n        '$data.Int16': function (v) { return v.toString(); },\r\n        '$data.Int64': function (v) { return v.toString(); },\r\n        '$data.ObjectID': function (o) { return o.toString(); },\r\n        '$data.Integer': function (o) { return o.toString(); },\r\n        '$data.Int32': function (o) { return o.toString(); },\r\n        '$data.Number': function (o) { return o.toString(); },\r\n        '$data.Date': function (o) { return o instanceof $data.Date ? o.toISOString().replace('Z', '') : o.toString() },\r\n        '$data.DateTimeOffset': function(v){ return v ? v.toISOString() : v; },\r\n        '$data.Time': function (o) { return o.toString(); },\r\n        '$data.Day': function (o) { return o.toString(); },\r\n        '$data.Duration': function (o) { return o.toString(); },\r\n        '$data.String': function (o) { return o.toString(); },\r\n        '$data.Boolean': function (o) { return o.toString(); },\r\n        '$data.Blob': function (o) { return o; },\r\n        '$data.Object': function (o) { return JSON.stringify(o); },\r\n        '$data.Array': function (o) { return JSON.stringify(o); },\r\n        '$data.Guid': function (o) { return o.toString(); },\r\n        '$data.GeographyPoint': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryPoint': function (o) { return JSON.stringify(o); },\r\n        '$data.GeographyLineString': function (o) { return JSON.stringify(o); },\r\n        '$data.GeographyPolygon': function (o) { return JSON.stringify(o); },\r\n        '$data.GeographyMultiPoint': function (o) { return JSON.stringify(o); },\r\n        '$data.GeographyMultiLineString': function (o) { return JSON.stringify(o); },\r\n        '$data.GeographyMultiPolygon': function (o) { return JSON.stringify(o); },\r\n        '$data.GeographyCollection': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryLineString': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryPolygon': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryMultiPoint': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryMultiLineString': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryMultiPolygon': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryCollection': function (o) { return JSON.stringify(o); }\r\n    }\r\n};\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\nexport class ODataIncludeFragment {\r\n    constructor (name) {\r\n        this.name = name;\r\n        this.$expand = [];\r\n        this.$operators = [];\r\n    }\r\n    \r\n    toString(){\r\n        let data = '';\r\n        if(this.$expand.length){\r\n            if(this.name){\r\n                data += this.name + '($expand=';\r\n            }\r\n            for(let i = 0; i < this.$expand.length; i++){\r\n                if(i !== 0) data += ',';\r\n                data += this[this.$expand[i]].toString();\r\n            }\r\n            if(this.name) {\r\n                data += ')';\r\n            }\r\n        }\r\n        \r\n        if(this.name){\r\n            for (let i = 0; i < this.$operators.length; i++) {\r\n                let operator = this.$operators[i];\r\n                let values = this[operator];\r\n                for(let j = 0; j < values.length; j++){\r\n                    if(data) data += ','\r\n                    data += this.name + '(' + operator + '='\r\n                    data += values[j];\r\n                    data += ')';\r\n                }\r\n            }    \r\n        }\r\n        \r\n        if(this.name && !data) {\r\n            data = this.name;\r\n        }\r\n        \r\n        return data;\r\n    }\r\n    \r\n    addInclude(path, map){\r\n        this._createIncludePath(path);\r\n    }\r\n    \r\n    addImplicitMap(path, map){\r\n        var includedFragment = this._createIncludePath(path);\r\n        this._setImplicitMap(includedFragment, map);\r\n    }\r\n    \r\n    _createIncludePath(path) {\r\n        if(!path) return this;\r\n        var inc = path;\r\n        \r\n        var current = this;\r\n        for(var i = 0; i < inc.length; i++){\r\n            var it = inc[i];\r\n            var included = true;\r\n            if(current.$expand.indexOf(it) < 0){\r\n                included = false;\r\n                current.$expand.push(it);\r\n                current[it] = new ODataIncludeFragment(it);\r\n                current[it].__implicit = true;\r\n            }\r\n            \r\n            current = current[it];\r\n            if(i < inc.length - 1 && current.__implicit){\r\n                this._setImplicitMap(current, inc[i+1]);\r\n            }\r\n        }\r\n        \r\n        return current;\r\n    }\r\n    _setImplicitMap(includeFragment, map){\r\n        if(map){\r\n            if (includeFragment.$operators.indexOf('$select') < 0) {\r\n                if(includeFragment.__implicit) {\r\n                    includeFragment.$operators.push('$select');\r\n                    includeFragment.$select = [map];\r\n                }\r\n            } else if(includeFragment.$expand.indexOf(map) < 0) {\r\n                includeFragment.$select[0] += ',' + map;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n$data.storageProviders.oData.ODataIncludeFragment = ODataIncludeFragment;\r\n\r\n$C('$data.storageProviders.oData.oDataIncludeCompiler', $data.Expressions.EntityExpressionVisitor, null, {\r\n    constructor: function (provider) {\r\n        this.provider = provider;\r\n        this.entityContext = provider.context;\r\n    },\r\n\r\n    compile: function (expression, context) {\r\n        context.data = context.data || new ODataIncludeFragment();\r\n        context.current = context.data;\r\n        this.Visit(expression, context);\r\n        \r\n    },\r\n    VisitParametricQueryExpression: function (expression, context) {\r\n        this.Visit(expression.expression, context);\r\n    },\r\n    \r\n    VisitEntitySetExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        if (expression.selector instanceof $data.Expressions.AssociationInfoExpression) {\r\n            this.Visit(expression.selector, context);\r\n        }\r\n    },\r\n    \r\n    VisitAssociationInfoExpression: function (expression, context) {\r\n        var propName = expression.associationInfo.FromPropertyName;\r\n        var sm = this.entityContext._storageModel.getStorageModel(expression.associationInfo.FromType.inheritsFrom);\r\n        if (sm && !sm.IsComplexType) {\r\n            propName = expression.associationInfo.FromType.fullName + \"/\" + propName;\r\n        }\r\n        \r\n        this.includePath = this.includePath ? (this.includePath + '.') : \"\";\r\n        this.includePath += propName;\r\n\r\n        var currentPath = this.includePath;\r\n        if (!context.includes.some(function (include) { return include.name == currentPath }, this)) {\r\n            context.includes.push({ name: currentPath, type: expression.associationInfo.ToType });\r\n        }\r\n        \r\n        if(context.current.$expand.indexOf(propName) < 0)\r\n        {\r\n            context.current.$expand.push(propName);\r\n            context.current[propName] = new ODataIncludeFragment(propName);\r\n        }\r\n        context.current = context.current[propName]; \r\n    },\r\n    \r\n    VisitFrameOperationExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        \r\n        var opDef = expression.operation.memberDefinition;\r\n        if(opDef && opDef.includeFrameName){\r\n            var opName = opDef.includeFrameName;\r\n            var paramCounter = 0;\r\n            var params = opDef.parameters || [{ name: \"@expression\" }];\r\n\r\n            var args = params.map(function (item, index) {\r\n                if (item.name === \"@expression\") {\r\n                    return expression.source;\r\n                } else {\r\n                    return expression.parameters[paramCounter++]\r\n                };\r\n            });\r\n            \r\n            if(opDef.includeCompiler){\r\n                for (var i = 0; i < args.length; i++) {\r\n                    var arg = args[i];\r\n                    var compilerType = Container.resolveType(opDef.includeCompiler);\r\n                    var compiler = new compilerType(this.provider);\r\n                    var frameContext = { data: \"\", $expand: context.current };\r\n                                        \r\n                    if (arg && arg.value instanceof $data.Queryable) {\r\n                        var preparator = Container.createQueryExpressionCreator(arg.value.entityContext);\r\n                        var prep_expression = preparator.Visit(arg.value.expression);\r\n                        arg = prep_expression;\r\n                    }\r\n                    \r\n                    var compiled = compiler.compile(arg, frameContext);\r\n                    \r\n                    if(context.current['$operators'].indexOf(opName) < 0){\r\n                        context.current[opName] = [];\r\n                        context.current['$operators'].push(opName);    \r\n                    }\r\n                    context.current[opName].push(frameContext[opName] || frameContext.data);\r\n\r\n                }\r\n            } else if(opDef.implementation) {\r\n                if(context.current['$operators'].indexOf(opName) < 0){\r\n                    context.current[opName] = [];\r\n                    context.current['$operators'].push(opName);    \r\n                }\r\n                context.current[opName].push(opDef.implementation());\r\n            }\r\n        }\r\n    }\r\n});\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$C('$data.storageProviders.oData.oDataOrderCompiler', $data.storageProviders.oData.oDataWhereCompiler, null, {\r\n    constructor: function (provider) {\r\n        this.provider = provider;\r\n        this.entityContext = provider.context;\r\n    },\r\n\r\n    compile: function (expression, context) {\r\n        this.Visit(expression, context);\r\n    },\r\n    VisitOrderExpression: function (expression, context) {\r\n        var orderContext = { data: \"\" };\r\n        this.Visit(expression.selector, orderContext);\r\n        if (context['$orderby']) { context['$orderby'] += ','; } else { context['$orderby'] = ''; }\r\n        context['$orderby'] += orderContext.data\r\n                           + (expression.nodeType == $data.Expressions.ExpressionType.OrderByDescending ? \" desc\" : \"\");\r\n    },\r\n    VisitParametricQueryExpression: function (expression, context) {\r\n        this.Visit(expression.expression, context);\r\n    },\r\n    VisitEntityFieldExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        this.Visit(expression.selector, context);\r\n    },\r\n    VisitComplexTypeExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        this.Visit(expression.selector, context);\r\n        context.data += \"/\";\r\n    },\r\n    VisitEntitySetExpression: function (expression, context) {\r\n        if (expression.selector instanceof $data.Expressions.AssociationInfoExpression) {\r\n            this.Visit(expression.source, context);\r\n            this.Visit(expression.selector, context);\r\n        }\r\n    },\r\n    VisitAssociationInfoExpression: function (expression, context) {\r\n        var propName = expression.associationInfo.FromPropertyName;\r\n        var sm = this.entityContext._storageModel.getStorageModel(expression.associationInfo.FromType.inheritsFrom);\r\n        if (sm && !sm.IsComplexType) {\r\n            propName = expression.associationInfo.FromType.fullName + \"/\" + propName;\r\n        }\r\n        context.data += propName + '/';\r\n    },\r\n    VisitEntityExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        this.Visit(expression.selector, context);\r\n    },\r\n    VisitMemberInfoExpression: function (expression, context) {\r\n        var propName = expression.memberName;\r\n        var sm = this.entityContext._storageModel.getStorageModel(expression.memberDefinition.definedBy.inheritsFrom);\r\n        if (sm && !sm.IsComplexType) {\r\n            propName = expression.memberDefinition.definedBy.fullName + \"/\" + propName;\r\n        }\r\n        context.data += propName;\r\n    },\r\n    VisitEntityFieldOperationExpression: function (expression, context) {\r\n        Guard.requireType(\"expression.operation\", expression.operation, $data.Expressions.MemberInfoExpression);\r\n\r\n        //TODO refactor!\r\n        var opDef = expression.operation.memberDefinition;\r\n        var opName = opDef.mapTo || opDef.name;\r\n        context.data += opName;\r\n        context.data += \"(\";\r\n        var paramCounter = 0;\r\n        var params = opDef.parameters || [{ name: \"@expression\" }];\r\n\r\n        var args = params.map(function (item, index) {\r\n            if (item.name === \"@expression\") {\r\n                return expression.source;\r\n            } else {\r\n                return expression.parameters[paramCounter++]\r\n            };\r\n        });\r\n\r\n        args.forEach(function (arg, index) {\r\n            if (index > 0) {\r\n                context.data += \",\";\r\n            };\r\n            this.Visit(arg, context);\r\n        }, this);\r\n        context.data += \")\";\r\n    },\r\n    VisitEntityFunctionOperationExpression: function (expression, context) {\r\n        Guard.requireType(\"expression.operation\", expression.operation, $data.Expressions.MemberInfoExpression);\r\n        this.Visit(expression.source, context);\r\n\r\n        //TODO refactor!\r\n        var opDef = expression.operation.memberDefinition;\r\n        var opName = opDef.mapTo || opDef.name;\r\n        context.data += opName;\r\n        context.data += \"(\";\r\n        var paramCounter = 0;\r\n        var params = opDef.method.params || [{ name: \"@expression\" }];\r\n\r\n        var args = params.map(function (item, index) {\r\n            if (item.name === \"@expression\") {\r\n                return expression.source;\r\n            } else {\r\n                return expression.parameters[paramCounter++]\r\n            };\r\n        });\r\n\r\n        var i = 0;\r\n        args.forEach(function (arg, index) {\r\n            if (arg === undefined || (arg instanceof $data.Expressions.ConstantExpression && typeof arg.value === 'undefined'))\r\n                return;\r\n\r\n            if (i > 0) {\r\n                context.data += \",\";\r\n            };\r\n            i++;\r\n            context.data += params[index].name + '=';\r\n            this.Visit(arg, context);\r\n        }, this);\r\n        context.data += \")\";\r\n    },\r\n    VisitContextFunctionOperationExpression: function (expression, context) {\r\n        return this.VisitEntityFunctionOperationExpression(expression, context);\r\n    }\r\n});\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$C('$data.storageProviders.oData.oDataPagingCompiler', $data.Expressions.EntityExpressionVisitor, null, {\r\n    constructor: function (provider) {\r\n        this.provider = provider;\r\n    },\r\n\r\n    compile: function (expression, context) {\r\n        this.Visit(expression, context);\r\n    },\r\n    VisitPagingExpression: function (expression, context) {\r\n        var pagingContext = { data: \"\" };\r\n        this.Visit(expression.amount, pagingContext);\r\n        switch (expression.nodeType) {\r\n            case $data.Expressions.ExpressionType.Skip: context['$skip'] = pagingContext.data; break;\r\n            case $data.Expressions.ExpressionType.Take: context['$top'] = pagingContext.data; break;\r\n            default: Guard.raise(\"Not supported nodeType\"); break;\r\n        }\r\n    },\r\n    VisitConstantExpression: function (expression, context) {\r\n        var typeName = Container.resolveName(expression.type);\r\n        var converter = this.provider.fieldConverter.escape[typeName];\r\n        context.data += converter ? converter(expression.value) : expression.value;\r\n    }\r\n});\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$C('$data.storageProviders.oData.oDataProjectionCompiler', $data.Expressions.EntityExpressionVisitor, null, {\r\n    constructor: function (provider) {\r\n        this.provider = provider; \r\n        this.entityContext = provider.context;\r\n        this.hasObjectLiteral = false;\r\n        this.modelBinderMapping = [];\r\n    },\r\n\r\n    compile: function (expression, context) {\r\n        this.Visit(expression, context);\r\n    },\r\n    VisitProjectionExpression: function (expression, context) {\r\n        ///<summary></summary>\r\n        ///<param name=\"expression\" type=\"$data.Expressions.ProjectionExpression\" mayBeNull=\"false\"></param>\r\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\r\n        context.data = \"\";\r\n        this.mapping = [];\r\n\r\n        this.Visit(expression.selector, context);\r\n        if (context['$select']) { context['$select'] += ','; } else { context['$select'] = ''; }\r\n        context[\"$select\"] += context.data;\r\n        context.data = \"\";\r\n    },\r\n    VisitParametricQueryExpression: function (expression, context) {\r\n        this.Visit(expression.expression, context);\r\n        var m = this.mapping.slice();\r\n        \r\n        if (!(expression.expression instanceof $data.Expressions.EntityExpression) && !(expression.expression instanceof $data.Expressions.EntitySetExpression)) {\r\n            m.pop();\r\n        }\r\n        \r\n        if (m.length > 0) {\r\n            if(!context['$expand'] || !(context['$expand'] instanceof $data.storageProviders.oData.ODataIncludeFragment)){\r\n                context['$expand'] = new $data.storageProviders.oData.ODataIncludeFragment();\r\n            }\r\n            context['$expand'].addInclude(m);\r\n        }\r\n    },\r\n    VisitObjectLiteralExpression: function (expression, context) {\r\n        ///<summary></summary>\r\n        ///<param name=\"expression\" type=\"$data.Expressions.ObjectLiteralExpression\" mayBeNull=\"false\"></param>\r\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\r\n        \r\n        this.hasObjectLiteral = true;\r\n        expression.members.forEach(function (member, index) {\r\n            this.Visit(member, context);\r\n            if (index < expression.members.length - 1) { context.data += ','; }\r\n            this.mapping = [];\r\n        }, this);\r\n    },\r\n    VisitObjectFieldExpression: function (expression, context) {\r\n        this.Visit(expression.expression, context);\r\n        \r\n        var m = this.mapping.slice();\r\n        var propertyName = \"\";\r\n        if (!(expression.expression instanceof $data.Expressions.EntityExpression) && !(expression.expression instanceof $data.Expressions.EntitySetExpression)) {\r\n            propertyName = m.pop();\r\n        }\r\n\r\n        if (m.length > 0) {\r\n            if(!context['$expand'] || !(context['$expand'] instanceof $data.storageProviders.oData.ODataIncludeFragment)){\r\n                context['$expand'] = new $data.storageProviders.oData.ODataIncludeFragment();\r\n            }\r\n            \r\n            if(expression.expression instanceof $data.Expressions.EntityFieldExpression && expression.expression.selector instanceof $data.Expressions.MemberInfoExpression){\r\n                var storageModel = this.entityContext._storageModel.getStorageModel(expression.expression.selector.memberDefinition.definedBy)\r\n                if(!storageModel || storageModel.IsComplexType) return;\r\n                \r\n                var isComplexProperty = storageModel && !!storageModel.ComplexTypes[expression.memberName];\r\n                if(isComplexProperty){\r\n                    var complexProperty = m.pop();\r\n                    context['$expand'].addImplicitMap(m, complexProperty);\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            \r\n            if (expression.expression instanceof $data.Expressions.ComplexTypeExpression) {\r\n                context['$expand'].addImplicitMap(m, propertyName);\r\n            } else {\r\n                context['$expand'].addInclude(m)\r\n            }\r\n        }\r\n    },\r\n\r\n    VisitComplexTypeExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        this.Visit(expression.selector, context);\r\n    },\r\n\r\n    VisitEntityFieldExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        this.Visit(expression.selector, context);\r\n    },\r\n    VisitEntityExpression: function (expression, context) {\r\n        ///<summary></summary>\r\n        ///<param name=\"expression\" type=\"$data.Expressions.EntityExpression\" mayBeNull=\"false\"></param>\r\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\r\n        this.Visit(expression.source, context);\r\n    },\r\n    VisitEntitySetExpression: function (expression, context) {\r\n        ///<summary></summary>\r\n        ///<param name=\"expression\" type=\"$data.Expressions.EntitySetExpression\" mayBeNull=\"false\"></param>\r\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\r\n        if (expression.source instanceof $data.Expressions.EntityExpression) {\r\n            this.Visit(expression.source, context);\r\n        }\r\n        if (expression.selector instanceof $data.Expressions.AssociationInfoExpression) {\r\n            this.Visit(expression.selector, context);\r\n        }\r\n    },\r\n    VisitAssociationInfoExpression: function (expression, context) {\r\n        var propName = expression.associationInfo.FromPropertyName;\r\n        var sm = this.entityContext._storageModel.getStorageModel(expression.associationInfo.FromType.inheritsFrom);\r\n        if (sm && !sm.IsComplexType) {\r\n            propName = expression.associationInfo.FromType.fullName + \"/\" + propName;\r\n        }\r\n        this.mapping.push(propName);\r\n        \r\n        if (context.data && context.data.length > 0 && context.data[context.data.length - 1] != ',') { \r\n            if(!context['$expand'] || !(context['$expand'] instanceof $data.storageProviders.oData.ODataIncludeFragment)){\r\n                context['$expand'] = new $data.storageProviders.oData.ODataIncludeFragment();\r\n            }\r\n            context['$expand'].addInclude(this.mapping);\r\n        } else {\r\n            context.data += propName;\r\n        }\r\n\r\n    },\r\n    VisitMemberInfoExpression: function (expression, context) {\r\n        var storageModel = this.entityContext._storageModel.getStorageModel(expression.memberDefinition.definedBy)\r\n        var isComplexProperty = storageModel && !storageModel.IsComplexType && !!storageModel.ComplexTypes[expression.memberName];\r\n        var isComplexField = !storageModel || storageModel.IsComplexType;\r\n\r\n        var propName = expression.memberName;\r\n        var sm = this.entityContext._storageModel.getStorageModel(expression.memberDefinition.definedBy.inheritsFrom);\r\n        if (sm && !sm.IsComplexType) {\r\n            propName = expression.memberDefinition.definedBy.fullName + \"/\" + propName;\r\n        }\r\n\r\n        if (context.data && context.data.length > 0 && context.data[context.data.length - 1] != ',') {\r\n            if(this.mapping){\r\n                if(!context['$expand'] || !(context['$expand'] instanceof $data.storageProviders.oData.ODataIncludeFragment)){\r\n                    context['$expand'] = new $data.storageProviders.oData.ODataIncludeFragment();\r\n                }\r\n                if(isComplexField){\r\n                    var m = this.mapping.slice();\r\n                    var complexProperty = m.pop();\r\n                    if(this.provider.checkODataMode(\"disableCompltexTypeMapping\")){\r\n                        context['$expand'].addImplicitMap(m, complexProperty);\r\n                    } else {\r\n                        context['$expand'].addImplicitMap(m, complexProperty + \"/\" + expression.memberName);\r\n                    }\r\n                } else if(!isComplexProperty) {\r\n                    context['$expand'].addImplicitMap(this.mapping, expression.memberName);\r\n                }\r\n            } \r\n        } else {\r\n            context.data += propName;\r\n        }\r\n        \r\n        this.mapping.push(propName);\r\n    },\r\n    VisitConstantExpression: function (expression, context) {\r\n        //Guard.raise(new Exception('Constant value is not supported in Projection.', 'Not supported!'));\r\n        //context.data += expression.value;\r\n\t\tcontext.data = context.data.slice(0, context.data.length - 1);\r\n    },\r\n    VisitEntityFieldOperationExpression: function VisitEntityFieldOperationExpression(expression, context) {\r\n        Guard.requireType(\"expression.operation\", expression.operation, $data.Expressions.MemberInfoExpression);\r\n\r\n        var opDef = expression.operation.memberDefinition;\r\n        if (opDef.aggregate){\r\n            var opName = opDef.mapTo || opDef.name;\r\n            context.aggregate = context.aggregate || [];\r\n            \r\n            var temp = context.data;\r\n            this.Visit(expression.source, context);\r\n            var field = context.data.replace(temp, \"\");\r\n            context.data = temp.replace(/,$/, \"\");\r\n            context.aggregate.push(`${field} with ${opName} as ${field}`);\r\n        }else this.Visit(expression.source, context);\r\n    }\r\n});\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\nimport * as activities from './oDataRequestActivities.js'\r\nimport { strategy as emptySaveStrategy } from './SaveStrategies/empty'\r\nimport { strategy as singleSaveStrategy } from './SaveStrategies/single'\r\nimport { strategy as batchSaveStrategy } from './SaveStrategies/batch'\r\n\r\n\r\n$data.defaults = $data.defaults || {};\r\n$data.defaults.OData = $data.defaults.OData || {};\r\nif(!(\"withReferenceMethods\" in $data.defaults.OData)){\r\n    $data.defaults.OData.withReferenceMethods = false;\r\n}\r\nif(!(\"disableBatch\" in $data.defaults.OData)){\r\n    $data.defaults.OData.disableBatch = false;\r\n}\r\nif(!(\"eTagAny\" in $data.defaults.OData)){\r\n    $data.defaults.OData.eTagAny = '*';\r\n}\r\nif(!(\"enableDeepSave\" in $data.defaults.OData)){\r\n    $data.defaults.OData.enableDeepSave = false;\r\n}\r\nif(!(\"disableCompltexTypeMapping\" in $data.defaults.OData)){\r\n    $data.defaults.OData.disableCompltexTypeMapping = false;\r\n}\r\n\r\nvar checkODataMode = function(context, functionName){\r\n    if(typeof context.providerConfiguration[functionName] !== 'undefined'){\r\n        return !!context.providerConfiguration[functionName];\r\n    }\r\n    return !!$data.defaults.OData[functionName];\r\n}\r\n\r\n$C('$data.storageProviders.oData.RequestManager', $data.Base, null, {\r\n    constructor: function(){\r\n        this._items = [];\r\n        this._entities = [];\r\n    },\r\n    _items: { type: $data.Array },\r\n    _entities: { type: $data.Array },\r\n    add: function(changedItem, request, countable){\r\n        var item = {\r\n            data: changedItem,\r\n            entity: changedItem.data,\r\n            request: request,\r\n            itemIndex: ++this.maxItemIndex,\r\n            references: []\r\n        };\r\n        \r\n        // request.headers = request.headers || {};\r\n        // request.headers[\"content-Id\"] = item.itemIndex; \r\n        request.add(new activities.SetHeaderProperty(\"content-Id\", item.itemIndex))\r\n        \r\n        if(countable !== false){\r\n            this.length++;\r\n        }\r\n        \r\n        this._entities.push(item.entity)\r\n        this._items.push(item);\r\n        \r\n        return item\r\n    },\r\n    addItemReference: function(entity, reference){\r\n        var item = this.getItem(entity);\r\n        if(item){\r\n            item.references.push(reference);\r\n        } \r\n    },\r\n    getItemIndex: function(entity){\r\n        if(!entity) return -1;\r\n        var idx = this._entities.indexOf(entity);\r\n        if(idx >= 0 && !this._items[idx].removed) {\r\n            return this._items[idx].itemIndex;\r\n        }\r\n        return -1;\r\n    },\r\n    getItem: function(entity, onlyAvailable){\r\n        if(!entity) return null;\r\n        var idx = this._entities.indexOf(entity);\r\n        if(idx >= 0 && (!onlyAvailable || !this._items[idx].removed)) {\r\n            return this._items[idx];\r\n        }\r\n        return null;\r\n    },\r\n    remove: function(entity){\r\n        var idx = this._entities.indexOf(entity);\r\n        if(idx >= 0) {\r\n            var item = this._items[idx];\r\n            if(!item.removed) {\r\n                this._items[idx].removed = true;\r\n                this.length--;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    getItems: function(){\r\n        return this._items.filter(function(it){ return !it.removed })\r\n    },\r\n    getByResponse: function(response, i){\r\n        //use response.headers['content-id']\r\n        \r\n        var idx = i;\r\n        \r\n        if(!this._indexCalculated){\r\n            this._indexCalculated = true;\r\n            this._dataForResult = this._items.filter(function(it){\r\n                return !it.removed;\r\n            });\r\n        }\r\n         \r\n        var item = this._dataForResult[idx++];\r\n        return item ? item.entity : null\r\n    },\r\n    setProcessed: function(entity){\r\n        var idx = this._entities.indexOf(entity);\r\n        if(idx >= 0) {\r\n            var item = this._items[idx];\r\n            if(!item.isProcessed){\r\n                this._items[idx].isProcessed = true;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    \r\n    maxItemIndex: { value: 0 },\r\n    length: { value: 0 }\r\n});\r\n\r\n\r\n\r\n$C('$data.storageProviders.oData.oDataProvider', $data.StorageProviderBase, null,\r\n{\r\n    constructor: function (cfg, ctx) {\r\n        this.SqlCommands = [];\r\n        this.context = ctx;\r\n        this.providerConfiguration = $data.typeSystem.extend({\r\n            dbCreation: $data.storageProviders.DbCreationType.DropTableIfChanged,\r\n            oDataServiceHost: \"/odata.svc\",\r\n            serviceUrl: \"\",\r\n            maxDataServiceVersion: '4.0',\r\n            dataServiceVersion: undefined,\r\n            user: null,\r\n            password: null,\r\n            withCredentials: false,\r\n            //enableJSONP: undefined,\r\n            //useJsonLight: undefined\r\n            //disableBatch: undefined\r\n            //withReferenceMethods: undefined\r\n            //enableDeepSave: undefined\r\n            UpdateMethod: 'PATCH'\r\n        }, cfg);\r\n\r\n        if (typeof $data.odatajs === 'undefined' || typeof $data.odatajs.oData === 'undefined') {\r\n            if (typeof odatajs === 'undefined' || typeof odatajs.oData === 'undefined') {\r\n                Guard.raise(new Exception('odatajs is required', 'Not Found!'));\r\n            } else {\r\n                this.oData = odatajs.oData\r\n            }\r\n        } else {\r\n            this.oData = $data.odatajs.oData\r\n        }\r\n\r\n        //this.fixkDataServiceVersions(cfg);\r\n\r\n        if (this.context && this.context._buildDbType_generateConvertToFunction && this.buildDbType_generateConvertToFunction) {\r\n            this.context._buildDbType_generateConvertToFunction = this.buildDbType_generateConvertToFunction;\r\n        }\r\n        if (this.context && this.context._buildDbType_modifyInstanceDefinition && this.buildDbType_modifyInstanceDefinition) {\r\n            this.context._buildDbType_modifyInstanceDefinition = this.buildDbType_modifyInstanceDefinition;\r\n        }\r\n    },\r\n    fixkDataServiceVersions: function (cfg) {\r\n        if (this.providerConfiguration.dataServiceVersion > this.providerConfiguration.maxDataServiceVersion) {\r\n            this.providerConfiguration.dataServiceVersion = this.providerConfiguration.maxDataServiceVersion;\r\n        }\r\n\r\n        if (this.providerConfiguration.setDataServiceVersionToMax === true) {\r\n            this.providerConfiguration.dataServiceVersion = this.providerConfiguration.maxDataServiceVersion;\r\n        }\r\n\r\n        if ((cfg && !cfg.UpdateMethod && this.providerConfiguration.dataServiceVersion < '3.0') || !this.providerConfiguration.dataServiceVersion) {\r\n            this.providerConfiguration.UpdateMethod = 'MERGE';\r\n        }\r\n    },\r\n    initializeStore: function (callBack) {\r\n        callBack = $data.PromiseHandlerBase.createCallbackSettings(callBack);\r\n        switch (this.providerConfiguration.dbCreation) {\r\n            case $data.storageProviders.DbCreationType.DropAllExistingTables:\r\n                var that = this;\r\n                if (this.providerConfiguration.serviceUrl) {\r\n\r\n                    var requestData = [{\r\n                        requestUri: that.providerConfiguration.serviceUrl + \"/Delete\",\r\n                        method: 'POST'\r\n                    }, function (d) {\r\n                        //console.log(\"RESET oData database\");\r\n                        callBack.success(that.context);\r\n                    }, function (error) {\r\n                        callBack.success(that.context);\r\n                    }];\r\n\r\n                    this.appendBasicAuth(requestData[0], this.providerConfiguration.user, this.providerConfiguration.password, this.providerConfiguration.withCredentials);\r\n                    //if (this.providerConfiguration.user) {\r\n                    //    requestData[0].user = this.providerConfiguration.user;\r\n                    //    requestData[0].password = this.providerConfiguration.password || \"\";\r\n                    //}\r\n\r\n                    this.context.prepareRequest.call(this, requestData);\r\n                    this.oData.request.apply(this, requestData);\r\n                } else {\r\n                    callBack.success(that.context);\r\n                }\r\n                break;\r\n            default:\r\n                callBack.success(this.context);\r\n                break;\r\n        }\r\n    },\r\n    buildDbType_generateConvertToFunction: function (storageModel, context) {\r\n        return function (logicalEntity, convertedItems) {\r\n            var dbInstance = new storageModel.PhysicalType();\r\n            dbInstance.entityState = logicalEntity.entityState;\r\n\r\n            storageModel.PhysicalType.memberDefinitions.getPublicMappedProperties().forEach(function (property) {\r\n                dbInstance.initData[property.name] = logicalEntity[property.name];\r\n            }, this);\r\n\r\n            if (storageModel.Associations) {\r\n                storageModel.Associations.forEach(function (association) {\r\n                    if ((association.FromMultiplicity == \"*\" && association.ToMultiplicity == \"0..1\") ||\r\n                        (association.FromMultiplicity == \"0..1\" && association.ToMultiplicity == \"1\") ||\r\n                        (association.FromMultiplicity == '$$unbound')) {\r\n                        var refValue = logicalEntity[association.FromPropertyName];\r\n                        if (/*refValue !== null &&*/ refValue !== undefined) {\r\n                            if (refValue instanceof $data.Array) {\r\n                                dbInstance.initData[association.FromPropertyName] = dbInstance[association.FromPropertyName] || [];\r\n                                refValue.forEach(function (rv) {\r\n                                    var item = convertedItems.getItem(rv, true)\r\n                                    var contentId = item ? item.itemIndex : -1;\r\n                                    if (rv.entityState == $data.EntityState.Modified || contentId < 0) {\r\n                                        var sMod = context._storageModel.getStorageModel(rv.getType())\r\n                                        var tblName = sMod.TableName;\r\n                                        var pk = '(' + context.storageProvider.getEntityKeysValue({ data: rv, entitySet: context.getEntitySetFromElementType(rv.getType()) }) + ')';\r\n                                        dbInstance.initData[association.FromPropertyName].push({ __metadata: { uri: tblName + pk } });\r\n                                    } else {\r\n                                        if (contentId < 0) { Guard.raise(\"Dependency graph error\"); }\r\n                                        //dbInstance.initData[association.FromPropertyName].push({ __metadata: { uri: \"$\" + (contentId) } });\r\n                                        dbInstance.initData[association.FromPropertyName].push({ __convertedRefence: item });\r\n                                    }\r\n                                }, this);\r\n                            } else if (refValue === null) {\r\n                                dbInstance.initData[association.FromPropertyName] = null;\r\n                            } else {\r\n                                var item = convertedItems.getItem(refValue, true);\r\n                                var contentId = item ? item.itemIndex : -1;\r\n                                if (refValue.entityState == $data.EntityState.Modified || contentId < 0) {\r\n                                    var sMod = context._storageModel.getStorageModel(refValue.getType())\r\n                                    var tblName = sMod.TableName;\r\n                                    var pk = '(' + context.storageProvider.getEntityKeysValue({ data: refValue, entitySet: context.getEntitySetFromElementType(refValue.getType()) }) + ')';\r\n                                    dbInstance.initData[association.FromPropertyName] = { __metadata: { uri: tblName + pk } };\r\n                                } else {\r\n                                    if (contentId < 0) { Guard.raise(\"Dependency graph error\"); }\r\n                                    //dbInstance.initData[association.FromPropertyName] = { __metadata: { uri: \"$\" + (contentId) } };\r\n                                    dbInstance.initData[association.FromPropertyName] = { __convertedRefence: item };\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }, this);\r\n            }\r\n            if (storageModel.ComplexTypes) {\r\n                storageModel.ComplexTypes.forEach(function (cmpType) {\r\n                    dbInstance.initData[cmpType.FromPropertyName] = logicalEntity[cmpType.FromPropertyName];\r\n                }, this);\r\n            }\r\n            return dbInstance;\r\n        };\r\n    },\r\n    buildDbType_modifyInstanceDefinition: function () { return; },\r\n    executeQuery: function (query, callBack) {\r\n        callBack = $data.PromiseHandlerBase.createCallbackSettings(callBack);\r\n\r\n        var sql = {};\r\n        try {\r\n            sql = this._compile(query);\r\n        } catch (e) {\r\n            callBack.error(e);\r\n            return;\r\n        }\r\n        var schema = this.context;\r\n\r\n        var that = this;\r\n        var countProperty = \"@odata.count\";\r\n\r\n        var requestData = [\r\n            {\r\n                requestUri: this.providerConfiguration.oDataServiceHost + sql.queryText,\r\n                method: sql.method,\r\n                data: sql.postData,\r\n                headers: {\r\n                }\r\n            },\r\n            function (data, textStatus, jqXHR) {\r\n\r\n                if (!data && textStatus.body && !sql.isBatchExecuteQuery) data = JSON.parse(textStatus.body);\r\n                if (callBack.success) {\r\n                    var processSuccess = function (query, data, sql) {\r\n                        query.rawDataList = typeof data === 'string' ? [{ cnt: Container.convertTo(data, $data.Integer) }] : data;\r\n                        if (sql.withInlineCount && typeof data === 'object' && (typeof data[countProperty] !== 'undefined' || ('d' in data && typeof data.d[countProperty] !== 'undefined'))) {\r\n                            query.__count = new Number(typeof data[countProperty] !== 'undefined' ? data[countProperty] : data.d[countProperty]).valueOf();\r\n                        }\r\n                    }\r\n\r\n                    if (sql.isBatchExecuteQuery) {\r\n                        query.rawDataList = sql.subQueries;\r\n                        for (var i = 0; i < data.__batchResponses.length; i++) {\r\n                            var resp = data.__batchResponses[i];\r\n\r\n                            if (!resp.data) {\r\n                                if (resp.body) {\r\n                                    resp.data = JSON.parse(resp.body);\r\n                                } else {\r\n                                    callBack.error(that.parseError(resp, arguments));\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            processSuccess(sql.subQueries[i], resp.data, sql.subQueries[i]._getComplitedData());\r\n                        }\r\n                    } else {\r\n                        processSuccess(query, data, sql);\r\n                    }\r\n\r\n                    callBack.success(query);\r\n                }\r\n            },\r\n            function (error) {\r\n                callBack.error(that.parseError(error, arguments));\r\n            },\r\n            sql.isBatchExecuteQuery ? this.oData.batch.batchHandler : undefined\r\n        ];\r\n\r\n        if (typeof this.providerConfiguration.enableJSONP !== 'undefined') {\r\n            requestData[0].enableJsonpCallback = this.providerConfiguration.enableJSONP;\r\n        }\r\n        if (typeof this.providerConfiguration.useJsonLight !== 'undefined') {\r\n            requestData[0].useJsonLight = this.providerConfiguration.useJsonLight;\r\n        }\r\n\r\n        this.appendBasicAuth(requestData[0], this.providerConfiguration.user, this.providerConfiguration.password, this.providerConfiguration.withCredentials);\r\n        //if (this.providerConfiguration.user) {\r\n        //    requestData[0].user = this.providerConfiguration.user;\r\n        //    requestData[0].password = this.providerConfiguration.password || \"\";\r\n        //}\r\n\r\n        this.context.prepareRequest.call(this, requestData);\r\n        //$data.ajax(requestData);\r\n        //OData.request(requestData, requestData.success, requestData.error);\r\n        this.oData.request.apply(this, requestData);\r\n    },\r\n    _compile: function (queryable, params) {\r\n        var compiler = new $data.storageProviders.oData.oDataCompiler();\r\n        var compiled = compiler.compile(queryable);\r\n        return compiled;\r\n    },\r\n    saveChanges: function (callBack, changedItems) {\r\n        if (changedItems.length > 0) {\r\n            this.saveInternal(changedItems, callBack);\r\n        }\r\n        else {\r\n            callBack.success(0);\r\n        }\r\n    },\r\n    saveInternal: function (changedItems, callBack) {\r\n        var independentBlocks = this.buildIndependentBlocks(changedItems);\r\n        if(checkODataMode(this, \"enableDeepSave\")){\r\n            this._checkDeepSave(changedItems)\r\n        }\r\n        var convertedItems = this._buildSaveData(independentBlocks, changedItems)\r\n        var actionMode = this.saveStrategySelector(convertedItems);\r\n        if(actionMode){\r\n            actionMode.save(this, convertedItems, callBack);\r\n        } else {\r\n            callBack.error(new Exception('Not Found', 'Save action not found'));\r\n        }\r\n    },\r\n    saveStrategySelector: function(convertedItems){\r\n        for(var i = 0; i < this.saveStrategies.length; i++){\r\n            var saveAction = this.saveStrategies[i];\r\n            if(saveAction.condition(this, convertedItems)){\r\n                return saveAction;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    },\r\n    saveStrategies: {\r\n        value: [\r\n            batchSaveStrategy,\r\n            singleSaveStrategy,\r\n            emptySaveStrategy\r\n        ]\r\n    },\r\n    \r\n    _discoverSaveOrder: function(changedItems){\r\n        var entityItems = changedItems.map(function(it){ return it.data });\r\n        var entityInfo = changedItems.map(function(it){ return { path: [], visited: false, result: true } });\r\n        var entityQueue = [];\r\n        var discoveredEntities = [];\r\n       \r\n        var process = function(currentEntity){\r\n            var index = entityItems.indexOf(currentEntity);\r\n            var changedItem = changedItems[index];\r\n            var info = entityInfo[index];\r\n            \r\n            if(info.visited) return info.result;\r\n            if(info.visiting) return false;\r\n            \r\n            var references = [];\r\n            if(changedItem.referredBy){\r\n                references = references.concat(changedItem.referredBy);\r\n            }\r\n            if(changedItem.dependentOn){\r\n                references = references.concat(changedItem.dependentOn);\r\n            }\r\n            \r\n            for(var i = 0; i < references.length; i++){\r\n                var ref = references[i];\r\n                if(discoveredEntities.indexOf(ref) < 0){\r\n                    entityQueue.push(ref);\r\n                    discoveredEntities.push(ref);\r\n                    var refIndex = entityItems.indexOf(ref);\r\n                    changedItems[refIndex].deepParent = currentEntity;\r\n                }\r\n            }\r\n        }\r\n        \r\n        \r\n        for(var i = 0; i < changedItems.length; i++){\r\n            var changedItem = changedItems[i];\r\n            if(entityQueue.indexOf(changedItem.data) < 0){\r\n                entityQueue.push(changedItem.data);\r\n                discoveredEntities.push(changedItem.data);\r\n                entityInfo[i].parent = null;\r\n            }\r\n            \r\n            while(entityQueue.length){\r\n                var currentItem = entityQueue.shift();\r\n                process(currentItem);\r\n            }\r\n        }\r\n    },\r\n    \r\n    _checkDeepSave: function(changedItems){\r\n        var entityItems = changedItems.map(function(it){ return it.data });\r\n        var entityInfo = changedItems.map(function(it){ return { path: [], visited: false, result: true } });\r\n       \r\n        var discover = function(changedItem, parent, index){\r\n            var info = entityInfo[index];\r\n            if(info.visited) return info.result;\r\n            if(info.visiting) return false;\r\n            \r\n            var references = [];\r\n            if(changedItem.referredBy){\r\n                references = references.concat(changedItem.referredBy);\r\n            }\r\n            if(changedItem.dependentOn){\r\n                references = references.concat(changedItem.dependentOn);\r\n            }\r\n            \r\n            \r\n            if(references.length === 0){\r\n                info.visited = true;\r\n                info.result = true;\r\n            } else {\r\n                info.visiting = true;\r\n                \r\n                for(var i = 0; i < references.length; i++){\r\n                    var entity = references[i]\r\n                    var idx = entityItems.indexOf(entity);\r\n                    var innerChangeItem = changedItems[idx];\r\n                    if(!innerChangeItem) return false; \r\n                    if(innerChangeItem === parent) continue;\r\n                    \r\n                    var result = discover(innerChangeItem, changedItem, idx);\r\n                    info.result = info.result && changedItem.data.entityState === $data.EntityState.Added && (!changedItem.additionalDependentOn || changedItem.additionalDependentOn.length === 0) && result;\r\n                }\r\n                delete info.visiting;\r\n                info.visited = true; \r\n            }\r\n            \r\n            changedItem.enableDeepSave = info.result;\r\n            return info.result;\r\n        }\r\n        \r\n        \r\n        for(var i = 0; i < changedItems.length; i++){\r\n            var changedItem = changedItems[i];\r\n            discover(changedItem, null, i);\r\n        }\r\n        \r\n        this._discoverSaveOrder(changedItems);\r\n    },\r\n    \r\n    _buildSaveData: function(independentBlocks, changedItems) {\r\n        var convertedItems = new $data.storageProviders.oData.RequestManager();\r\n        for (var index = 0; index < independentBlocks.length; index++) {\r\n            for (var i = 0; i < independentBlocks[index].length; i++) {\r\n                var independentItem = independentBlocks[index][i];\r\n                \r\n                var request = null;\r\n                var item = convertedItems.getItem(independentItem.data)\r\n                if(!item){\r\n                    request = new activities.RequestBuilder(this)\r\n                    request.add(new activities.SetUrl(this.providerConfiguration.oDataServiceHost + '/'))\r\n                    item = convertedItems.add(independentItem, request);\r\n                }\r\n                request = item.request;\r\n                \r\n                var entityState = independentItem.data.entityState;\r\n                if(typeof this._buildRequestObject['EntityState_' + entityState] === 'function'){\r\n                    if (!this._buildRequestObject['EntityState_' + entityState](this, independentItem, convertedItems, request, changedItems)){\r\n                        convertedItems.remove(independentItem.data);\r\n                    }\r\n                } else {\r\n                    Guard.raise(new Exception(\"Not supported Entity state\"));\r\n                }\r\n            }\r\n        }\r\n        \r\n        return convertedItems;\r\n    },\r\n    _buildRequestObject: {\r\n        value: {\r\n            'EntityState_20': function EntityState_20(provider, item, convertedItem, request, changedItems) {\r\n                request.add(new activities.SetMethod(\"POST\"), new activities.AppendUrl(item.data[\"@odata.context\"] || item.entitySet.tableName));\r\n                if (item.data[\"@odata.type\"]) request.add(new activities.SetDataProperty(\"@odata.type\", item.data[\"@odata.type\"]));\r\n                provider.save_getInitData(item, convertedItem, undefined, undefined, request, changedItems);\r\n                return request;\r\n            },\r\n            'EntityState_30': function EntityState_30(provider, item, convertedItem, request, changedItems) {\r\n                const keysValue = provider.getEntityKeysValue(item);\r\n                if (keysValue) {\r\n                    request.add(new activities.SetMethod(provider.providerConfiguration.UpdateMethod), new activities.AppendUrl(item.data[\"@odata.context\"] || item.entitySet.tableName));\r\n                    request.add(new activities.AppendUrl(\"(\" + keysValue + \")\"));\r\n                    if (item.data[\"@odata.type\"]) request.add(new activities.SetDataProperty(\"@odata.type\", item.data[\"@odata.type\"]));\r\n                    provider.addETagHeader(item, request);\r\n                    provider.save_getInitData(item, convertedItem, undefined, undefined, request, changedItems);\r\n                    return request;\r\n                }\r\n            },\r\n            'EntityState_40': function EntityState_40(provider, item, convertedItem, request, changedItems) {\r\n                const keysValue = provider.getEntityKeysValue(item);\r\n                if (keysValue){\r\n                    request.add(new activities.SetMethod(\"DELETE\"), new activities.ClearRequestData(), new activities.AppendUrl(item.data[\"@odata.context\"] || item.entitySet.tableName));\r\n                    request.add(new activities.AppendUrl(\"(\" + keysValue + \")\"));\r\n                    provider.addETagHeader(item, request);\r\n                    return request;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    reload_fromResponse: function (item, data, response) {\r\n        var that = this;\r\n        item.getType().memberDefinitions.getPublicMappedProperties().forEach(function (memDef) {\r\n            var propType = Container.resolveType(memDef.type);\r\n            if (memDef.computed || memDef.key || !memDef.inverseProperty) {\r\n                if (memDef.concurrencyMode === $data.ConcurrencyMode.Fixed) {\r\n                    //unescape?\r\n                    //item[memDef.name] = response.headers.ETag || response.headers.Etag || response.headers.etag;\r\n                    item[memDef.name] = data['@odata.etag'];\r\n\r\n                } else if (memDef.isAssignableTo) {\r\n                    if (data[memDef.name]) {\r\n                        item[memDef.name] = new propType(data[memDef.name], { converters: that.fieldConverter.fromDb });\r\n                    } else {\r\n                        item[memDef.name] = data[memDef.name]\r\n                    }\r\n\r\n                } else if (propType === $data.Array && memDef.elementType) {\r\n                    var aeType = Container.resolveType(memDef.elementType);\r\n                    if (data[memDef.name] && Array.isArray(data[memDef.name])) {\r\n                        var arrayProperty = [];\r\n                        for (var ap = 0; ap < data[memDef.name].length; ap++) {\r\n                            var aitem = data[memDef.name][ap];\r\n                            if (aeType.isAssignableTo && !Guard.isNullOrUndefined(aitem)) {\r\n                                arrayProperty.push(new aeType(aitem, { converters: that.fieldConverter.fromDb }));\r\n                            } else {\r\n                                var etypeName = Container.resolveName(aeType);\r\n                                var econverter = that.fieldConverter.fromDb[etypeName];\r\n\r\n                                arrayProperty.push(econverter ? econverter(aitem) : aitem);\r\n                            }\r\n                        }\r\n                        item[memDef.name] = arrayProperty;\r\n                    } else if (!data[memDef.name]) {\r\n                        item[memDef.name] = data[memDef.name]\r\n                    }\r\n\r\n                } else {\r\n                    var typeName = Container.resolveName(memDef.type);\r\n                    var converter = that.fieldConverter.fromDb[typeName];\r\n\r\n                    item[memDef.name] = converter ? converter(data[memDef.name]) : data[memDef.name];\r\n                }\r\n            }\r\n        }, this);\r\n    },\r\n\r\n    save_getInitData: function (item, convertedItems, isComplex, isDeep, request, changedItems) {\r\n        var self = this;\r\n        if (!isComplex) {\r\n            item.physicalData = this.context._storageModel.getStorageModel(item.data.getType()).PhysicalType.convertTo(item.data, convertedItems);\r\n        } else {\r\n            item.physicalData = item.data;\r\n        }\r\n        var hasSavedProperty = item.data.entityState === $data.EntityState.Added;\r\n        item.physicalData.getType().memberDefinitions.asArray().forEach(function (memdef) {\r\n            hasSavedProperty = self.propertyConversationSelector(item, memdef, convertedItems, request, changedItems, isDeep) || hasSavedProperty;\r\n        }, this);\r\n        \r\n        if(!hasSavedProperty && !isDeep){\r\n            convertedItems.remove(item.data)\r\n        }\r\n    },\r\n    propertyConversationSelector: function(item, memdef, convertedItems, request, changedItems, isDeep) {\r\n        if (memdef.kind == $data.MemberTypes.complexProperty) {\r\n            return this._complexPropertySelector.apply(this, arguments)\r\n        }\r\n        \r\n        if (memdef.kind == $data.MemberTypes.property) {\r\n            return this._propertySelector.apply(this, arguments);\r\n        }\r\n        \r\n        if(memdef.kind == $data.MemberTypes.navProperty){\r\n            return this._navigationPropertySelector.apply(this, arguments);\r\n        }\r\n        \r\n        return false;\r\n    },\r\n    _complexPropertySelector: function(item, memdef, convertedItems, request, changedItems, isDeep){\r\n        return this.propertyConversationStrategies[\"complex\"].apply(this, arguments)\r\n    },\r\n    _propertySelector: function(item, memdef, convertedItems, request, changedItems, isDeep){\r\n        if(typeof memdef.concurrencyMode === 'undefined') {\r\n            switch (true){\r\n                case memdef.notMapped: \r\n                    return false;\r\n                case memdef.key === true:\r\n                    this.propertyConversationStrategies[\"default\"].apply(this, arguments)\r\n                    return false;\r\n                case isDeep:\r\n                case item.data.entityState === $data.EntityState.Added:\r\n                case this._propertyIsChanged(item.data, memdef):\r\n                    return this.propertyConversationStrategies[\"default\"].apply(this, arguments)\r\n                case !this._propertyIsChanged(item.data, memdef) && checkODataMode(this, 'sendAllPropertiesOnChange'):\r\n                    this.propertyConversationStrategies[\"default\"].apply(this, arguments)\r\n                    return false\r\n                default: return false;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n    },\r\n    _navigationPropertySelector: function(item, memdef, convertedItems, request, changedItems, isDeep){\r\n        if (isDeep || item.data.entityState === $data.EntityState.Added || this._propertyIsChanged(item.data, memdef)) {\r\n            \r\n            var navigationValue = item.data[memdef.name];\r\n            if (checkODataMode(this, 'enableDeepSave') && navigationValue && item.data.entityState === $data.EntityState.Added) {\r\n                var result = null;\r\n                if (Array.isArray(navigationValue)) {\r\n                    navigationValue.forEach((navItem, index) => {\r\n                        this._processDeepSaveItems(item, memdef, convertedItems, request, changedItems, navItem, \"deepSaveArray\", index);\r\n                        //update not supported here\r\n                    })\r\n                    return true; //item.data is new\r\n                } else {\r\n                    result = this._processDeepSaveItems(item, memdef, convertedItems, request, changedItems, navigationValue, \"deepSave\")\r\n                }\r\n                \r\n                if(result !== null){\r\n                    return result;\r\n                }\r\n            }\r\n            \r\n\r\n            return this._simpleNavigationPropertySelector.apply(this, arguments)\r\n        }\r\n        return false;\r\n    },\r\n    _simpleNavigationPropertySelector: function(item, memdef, convertedItems, request, changedItems, isDeep){\r\n        if(checkODataMode(this, 'withReferenceMethods')){\r\n            return this.propertyConversationStrategies[\"withReferenceMethods\"].apply(this, arguments)\r\n        } \r\n        \r\n        return this.propertyConversationStrategies[\"navigation\"].apply(this, arguments)\r\n    },\r\n    \r\n    _processDeepSaveItems: function(item, memdef, convertedItems, request, changedItems, navigationEntity, strategy, index){\r\n        var referencedItems = changedItems.filter(function(it){ return it.data == navigationEntity });\r\n        \r\n        if (referencedItems.length === 1 &&\r\n            referencedItems[0].enableDeepSave &&\r\n            navigationEntity.entityState === $data.EntityState.Added &&\r\n            referencedItems[0].deepParent === item.data) \r\n        {\r\n            var deepItem = convertedItems.getItem(referencedItems[0].data);\r\n            if(!deepItem) {\r\n                var referencedRequest = new activities.RequestBuilder(this)\r\n                referencedRequest.add(new activities.SetUrl(this.providerConfiguration.oDataServiceHost + '/'))\r\n                deepItem = convertedItems.add(referencedItems[0], referencedRequest)\r\n            }\r\n            \r\n            convertedItems.addItemReference(item.data, deepItem);\r\n            if(!deepItem.removed) {\r\n                convertedItems.remove(referencedItems[0].data)\r\n            }\r\n\r\n            return this.propertyConversationStrategies[strategy].call(this, item, memdef, convertedItems, request, changedItems, index)\r\n        }\r\n        \r\n        return null;\r\n    },\r\n    _propertyIsChanged: function(entity, memdef){\r\n        return entity && entity.changedProperties && entity.changedProperties.some(function (def) { return def.name === memdef.name; })\r\n    },\r\n    propertyConversationStrategies: {\r\n        value:{\r\n            \"default\": function (item, memdef, convertedItems, request, changedItems) {\r\n                var typeName = Container.resolveName(memdef.type);\r\n                if(memdef.elementType) {\r\n                    var elementType = Container.resolveType(memdef.elementType);\r\n                    if (elementType.isAssignableTo && elementType.isAssignableTo($data.Entity) && Array.isArray(item.physicalData[memdef.name])) {\r\n                        item.physicalData[memdef.name].forEach(function (complexElement) {\r\n                            var innerRequest = new activities.RequestBuilder(this);\r\n                            this.save_getInitData({ data: complexElement }, convertedItems, true, true, innerRequest);\r\n                            request.add(function(req){\r\n                                req.data = req.data || {}\r\n                                req.data[memdef.name] = req.data[memdef.name] || []\r\n                                req.data[memdef.name].push(innerRequest.build().get().data);\r\n                            })\r\n                        }, this)\r\n                        return true;\r\n                    }\r\n                }\r\n                var converter = this.fieldConverter.toDb[typeName];\r\n                request.add(new activities.SetProperty(memdef.name, converter ? converter(item.physicalData[memdef.name], memdef) : item.physicalData[memdef.name]))\r\n                return true;\r\n            },\r\n            \"withReferenceMethods\": function (item, memdef, convertedItems, request, changedItems) {\r\n                var reqItem = convertedItems.getItem(item.data);\r\n                if(reqItem && reqItem.removed) return false; //deep saved\r\n                \r\n                var additionalRequest = new activities.RequestBuilder(this)\r\n                var value = item.physicalData[memdef.name];\r\n                if(value){\r\n                    additionalRequest.add(new activities.SetMethod('POST'))\r\n                    if (value.__metadata) {\r\n                        additionalRequest.add(new activities.SetProperty('@odata.id', this.providerConfiguration.oDataServiceHost + '/' + value.__metadata.uri))\r\n                    } else if (value.__convertedRefence) {\r\n                        additionalRequest.add(function(req, provider){\r\n                            var targetItem = value.__convertedRefence;\r\n                            req.data = req.data || {};\r\n                            if(targetItem.isProcessed){\r\n                                req.data[\"@odata.id\"] = provider.getEntityUrlReference(targetItem.entity);\r\n                            } else {\r\n                                req.data[\"@odata.id\"] = provider.providerConfiguration.oDataServiceHost + '/$' + targetItem.itemIndex\r\n                            } \r\n                        })\r\n                    }\r\n                } else {\r\n                    if(item.data.entityState === $data.EntityState.Added || value !== null) return\r\n                    \r\n                    additionalRequest.add(\r\n                        new activities.SetUrl(this.providerConfiguration.oDataServiceHost + '/'),\r\n                        new activities.AppendUrl(item.entitySet.tableName),\r\n                        new activities.AppendUrl(\"(\" + this.getEntityKeysValue(item) + \")\"),\r\n                        new activities.SetMethod('DELETE'),\r\n                        new activities.ClearRequestData())\r\n                }\r\n                \r\n                additionalRequest.add(function(req, provider){\r\n                    if(reqItem.isProcessed || item.data.entityState !== $data.EntityState.Added){\r\n                        req.requestUri = provider.providerConfiguration.oDataServiceHost + '/';\r\n                        req.requestUri += item.entitySet.tableName;\r\n                        req.requestUri += \"(\" + provider.getEntityKeysValue(item) + \")\";\r\n                        provider.addETagHeader(item, req)\r\n                    } else {\r\n                        req.requestUri = '$' + reqItem.itemIndex;\r\n                        provider.addETagHeader(item, req, $data.defaults.OData.eTagAny)\r\n                    } \r\n                    \r\n                    req.requestUri += '/' + memdef.name + '/$ref';\r\n                })\r\n                \r\n                var refItem = convertedItems.add(item, additionalRequest, false);\r\n                convertedItems.addItemReference(item.data, refItem);\r\n                return false;\r\n            },\r\n            \"deepSave\": function (item, memdef, convertedItems, request, changedItems) {\r\n                var refItem = convertedItems.getItem(item.data[memdef.name])\r\n                request.add(function(req, provider){\r\n                        req.data[memdef.name] = refItem.request.build().get().data;\r\n                })\r\n                return true;\r\n            },\r\n            \"deepSaveArray\": function (item, memdef, convertedItems, request, changedItems, index) {\r\n                var refItem = convertedItems.getItem(item.data[memdef.name][index])\r\n                request.add(function(req, provider){\r\n                        req.data[memdef.name] = req.data[memdef.name] || [];\r\n                        req.data[memdef.name].push(refItem.request.build().get().data);\r\n                })\r\n                return true;\r\n            },\r\n            \"navigation\": function (item, memdef, convertedItems, request, changedItems) {\r\n                \r\n                request.add(function(req, provider){\r\n                    req.data = req.data || {};\r\n                    \r\n                    if(item.physicalData[memdef.name] && item.physicalData[memdef.name].__metadata) {\r\n                        req.data[memdef.name + \"@odata.bind\"] = item.physicalData[memdef.name].__metadata.uri;\r\n                    } else if (item.physicalData[memdef.name] && item.physicalData[memdef.name].__convertedRefence) {\r\n                        var targetItem = item.physicalData[memdef.name].__convertedRefence;\r\n                        if(targetItem.isProcessed){\r\n                            req.data[memdef.name + \"@odata.bind\"] = provider.getEntityUrlReference(targetItem.entity);\r\n                        } else {\r\n                            req.data[memdef.name + \"@odata.bind\"] = \"$\" + targetItem.itemIndex;\r\n                        } \r\n                    } else if(item.physicalData[memdef.name] === null) {\r\n                        req.data[memdef.name + \"@odata.bind\"] = null;\r\n                    }\r\n                })\r\n                return true;\r\n            },\r\n            \"complex\": function(item, memdef, convertedItems, request, changedItems){\r\n                if (item.physicalData[memdef.name]) {\r\n                    var innerRequest = new activities.RequestBuilder(this);\r\n                    this.save_getInitData({ data: item.physicalData[memdef.name] }, convertedItems, true, true, innerRequest);\r\n                    request.add(function(req){\r\n                        req.data = req.data || {}\r\n                        req.data[memdef.name] = innerRequest.build().get().data;\r\n                    })\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n    \r\n    addETagHeader: function(item, request, value){\r\n        var property = item.data.getType().memberDefinitions.getPublicMappedProperties().filter(function (memDef) { return memDef.concurrencyMode === $data.ConcurrencyMode.Fixed });\r\n        if (property && property[0]) {\r\n            var headerValue = (typeof value !== \"undefined\") ? value : item.data[property[0].name];\r\n            if(typeof headerValue !== \"undefined\"){\r\n                if(request instanceof activities.RequestBuilder){\r\n                    request.add(new activities.SetHeaderProperty('If-Match', headerValue))\r\n                } else {\r\n                    request.headers['If-Match'] = headerValue;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n    getTraceString: function (queryable) {\r\n        var sqlText = this._compile(queryable);\r\n        return queryable;\r\n    },\r\n    supportedDataTypes: {\r\n        value: [$data.Array, $data.Integer, $data.String, $data.Number, $data.Blob, $data.Boolean, $data.Date, $data.Object, $data.GeographyPoint, $data.Guid,\r\n            $data.GeographyLineString, $data.GeographyPolygon, $data.GeographyMultiPoint, $data.GeographyMultiLineString, $data.GeographyMultiPolygon, $data.GeographyCollection,\r\n            $data.GeometryPoint, $data.GeometryLineString, $data.GeometryPolygon, $data.GeometryMultiPoint, $data.GeometryMultiLineString, $data.GeometryMultiPolygon, $data.GeometryCollection,\r\n            $data.Byte, $data.SByte, $data.Decimal, $data.Float, $data.Int16, $data.Int32, $data.Int64, $data.Time, $data.Day, $data.DateTimeOffset, $data.Duration],\r\n        writable: false\r\n    },\r\n\r\n    supportedBinaryOperators: {\r\n        value: {\r\n            equal: { mapTo: 'eq', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n            notEqual: { mapTo: 'ne', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n            equalTyped: { mapTo: 'eq', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n            notEqualTyped: { mapTo: 'ne', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n            greaterThan: { mapTo: 'gt', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n            greaterThanOrEqual: { mapTo: 'ge', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n\r\n            lessThan: { mapTo: 'lt', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n            lessThenOrEqual: { mapTo: 'le', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n            or: { mapTo: 'or', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n            and: { mapTo: 'and', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n\r\n            add: { mapTo: 'add', dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n            divide: { mapTo: 'div', allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n            multiply: { mapTo: 'mul', allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n            subtract: { mapTo: 'sub', allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n            modulo: { mapTo: 'mod', allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] },\r\n\r\n            \"in\": { mapTo: \"in\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression] }\r\n        }\r\n    },\r\n\r\n    supportedUnaryOperators: {\r\n        value: {\r\n            not: { mapTo: 'not' }\r\n        }\r\n    },\r\n\r\n    supportedFieldOperations: {\r\n        value: {\r\n            /* string functions */\r\n\r\n            contains: {\r\n                mapTo: \"contains\",\r\n                dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\" }, { name: \"substring\", dataType: \"string\" }]\r\n            },\r\n\r\n            startsWith: {\r\n                mapTo: \"startswith\",\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"strFragment\", dataType: \"string\" }]\r\n            },\r\n\r\n            endsWith: {\r\n                mapTo: \"endswith\",\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"strFragment\", dataType: \"string\" }]\r\n            },\r\n\r\n            length: [{\r\n                allowedType: 'string',\r\n                projection: function(v){ return v ? v.length : 0; },\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.ProjectionExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\r\n            },\r\n            {\r\n                allowedType: 'GeographyLineString',\r\n                mapTo: \"geo.length\",\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: ['GeographyLineString'] }],\r\n                fixedDataType: 'decimal'\r\n            },\r\n            {\r\n                allowedType: 'GeometryLineString',\r\n                mapTo: \"geo.length\",\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: 'GeometryLineString' }],\r\n                fixedDataType: 'decimal'\r\n            }],\r\n\r\n            strLength: {\r\n                mapTo: \"length\",\r\n                projection: function(v){ return v ? v.length : 0; },\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.ProjectionExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\r\n            },\r\n\r\n            indexOf: {\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                mapTo: \"indexof\",\r\n                baseIndex: 1,\r\n                parameters: [{ name: '@expression', dataType: \"string\" }, { name: 'strFragment', dataType: 'string' }]\r\n            },\r\n\r\n            replace: {\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: '@expression', dataType: \"string\" }, { name: 'strFrom', dataType: 'string' }, { name: 'strTo', dataType: 'string' }]\r\n            },\r\n\r\n            substr: {\r\n                mapTo: \"substring\",\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"startFrom\", dataType: \"number\" }, { name: \"length\", dataType: \"number\", optional: \"true\" }]\r\n            },\r\n\r\n            toLowerCase: {\r\n                mapTo: \"tolower\",\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\r\n            },\r\n\r\n            toUpperCase: {\r\n                mapTo: \"toupper\",\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\r\n\r\n            },\r\n\r\n            trim: {\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\r\n            },\r\n\r\n\r\n            concat: {\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"strFragment\", dataType: \"string\" }]\r\n            },\r\n\r\n\r\n            /* data functions */\r\n\r\n            day: {\r\n                allowedIn: [$data.Expressions.ProjectionExpression, $data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                dataType: \"number\",\r\n                projection: function(v){ return new Date(v).getUTCDate(); },\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            hour: {\r\n                allowedIn: [$data.Expressions.ProjectionExpression, $data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                dataType: \"number\",\r\n                projection: function(v){ return new Date(v).getUTCHours(); },\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            minute: {\r\n                allowedIn: [$data.Expressions.ProjectionExpression, $data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                dataType: \"number\",\r\n                projection: function(v){ return new Date(v).getUTCMinutes(); },\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            month: {\r\n                allowedIn: [$data.Expressions.ProjectionExpression, $data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                dataType: \"number\",\r\n                projection: function(v){ return new Date(v).getUTCMonth() + 1; },\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            second: {\r\n                allowedIn: [$data.Expressions.ProjectionExpression, $data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                dataType: \"number\",\r\n                projection: function(v){ return new Date(v).getUTCSeconds(); },\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            year: {\r\n                allowedIn: [$data.Expressions.ProjectionExpression, $data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                dataType: \"number\",\r\n                projection: function(v){ return new Date(v).getFullYear(); },\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            fractionalseconds: {\r\n                allowedIn: [$data.Expressions.ProjectionExpression, $data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                dataType: \"number\",\r\n                projection: function(v){ return new Date(v).getUTCMilliseconds() / 1000; },\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n\r\n            /* number functions */\r\n            round: {\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            floor: {\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            ceiling: {\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n\r\n\r\n            /* geo functions */\r\n            distance: [{\r\n                allowedType: 'GeographyPoint',\r\n                mapTo: \"geo.distance\",\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: 'GeographyPoint' }, { name: \"to\", dataType: 'GeographyPoint' }],\r\n                fixedDataType: 'decimal'\r\n            }, {\r\n                allowedType: 'GeometryPoint',\r\n                mapTo: \"geo.distance\",\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: 'GeometryPoint' }, { name: \"to\", dataType: 'GeometryPoint' }],\r\n                fixedDataType: 'decimal'\r\n            }],\r\n\r\n            intersects: [{\r\n                allowedType: 'GeographyPoint',\r\n                mapTo: \"geo.intersects\",\r\n                dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: 'GeographyPoint' }, { name: \"in\", dataType: 'GeographyPolygon' }]\r\n\r\n            }, {\r\n                allowedType: 'GeometryPoint',\r\n                mapTo: \"geo.intersects\",\r\n                dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression, $data.Expressions.SomeExpression, $data.Expressions.EveryExpression],\r\n                parameters: [{ name: \"@expression\", dataType: 'GeometryPoint' }, { name: \"in\", dataType: 'GeometryPolygon' }]\r\n\r\n            }],\r\n\r\n            // aggregate functions\r\n            'sum': {\r\n                allowedIn: [$data.Expressions.ProjectionExpression],\r\n                mapTo: 'sum',\r\n                aggregate: true\r\n            },\r\n            'count': {\r\n                allowedIn: [$data.Expressions.ProjectionExpression],\r\n                mapTo: 'countdistinct',\r\n                returnType: $data.Integer,\r\n                aggregate: true\r\n            },\r\n            'min': {\r\n                allowedIn: [$data.Expressions.ProjectionExpression],\r\n                mapTo: 'min',\r\n                aggregate: true\r\n            },\r\n            'max': {\r\n                allowedIn: [$data.Expressions.ProjectionExpression],\r\n                mapTo: 'max',\r\n                aggregate: true\r\n            },\r\n            'avg': {\r\n                allowedIn: [$data.Expressions.ProjectionExpression],\r\n                mapTo: 'average',\r\n                aggregate: true\r\n            }\r\n        },\r\n        enumerable: true,\r\n        writable: true\r\n    },\r\n    supportedSetOperations: {\r\n        value: {\r\n            filter: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [{ name: \"filter\", dataType: \"$data.Queryable\" }],\r\n                frameType: $data.Expressions.FilterExpression,\r\n                includeFrameName: '$filter',\r\n                includeCompiler: '$data.storageProviders.oData.oDataWhereCompiler'\r\n            },\r\n            map: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [{ name: \"map\", dataType: \"$data.Queryable\" }],\r\n                frameType: $data.Expressions.ProjectionExpression,\r\n                includeFrameName: '$select',\r\n                includeCompiler: '$data.storageProviders.oData.oDataProjectionCompiler'\r\n            },\r\n            length: {},\r\n            forEach: {},\r\n            toArray: {},\r\n            single: {},\r\n            some: {\r\n                invokable: false,\r\n                allowedIn: [$data.Expressions.FilterExpression],\r\n                parameters: [{ name: \"some\", dataType: \"$data.Queryable\" }],\r\n                mapTo: 'any',\r\n                frameType: $data.Expressions.SomeExpression\r\n            },\r\n            every: {\r\n                invokable: false,\r\n                allowedIn: [$data.Expressions.FilterExpression],\r\n                parameters: [{ name: \"every\", dataType: \"$data.Queryable\" }],\r\n                mapTo: 'all',\r\n                frameType: $data.Expressions.EveryExpression\r\n            },\r\n            take: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [{ name: \"take\", dataType: \"$data.Integer\" }],\r\n                frameType: $data.Expressions.PagingExpression,\r\n                includeFrameName: '$top',\r\n                includeCompiler: '$data.storageProviders.oData.oDataPagingCompiler'\r\n            },\r\n            skip: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [{ name: \"skip\", dataType: \"$data.Integer\" }],\r\n                frameType: $data.Expressions.PagingExpression,\r\n                includeFrameName: '$skip',\r\n                includeCompiler: '$data.storageProviders.oData.oDataPagingCompiler'\r\n            },\r\n            orderBy: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [{ name: \"orderBy\", dataType: \"$data.Queryable\" }],\r\n                frameType: $data.Expressions.OrderExpression,\r\n                includeFrameName: '$orderby',\r\n                includeCompiler: '$data.storageProviders.oData.oDataOrderCompiler'\r\n            },\r\n            orderByDescending: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [{ name: \"orderByDescending\", dataType: \"$data.Queryable\" }],\r\n                frameType: $data.Expressions.OrderExpression,\r\n                frameTypeFactory: function(source, selector){\r\n                    return new $data.Expressions.OrderExpression(source, selector, $data.Expressions.ExpressionType.OrderByDescending)\r\n                },\r\n                includeFrameName: '$orderby',\r\n                includeCompiler: '$data.storageProviders.oData.oDataOrderCompiler'\r\n            },\r\n            first: {},\r\n            include: {},\r\n            batchDelete: {},\r\n            withInlineCount: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [],\r\n                frameType: $data.Expressions.InlineCountExpression,\r\n                includeFrameName: '$count',\r\n                implementation: function(){ return 'true' }\r\n            },\r\n            find: {},\r\n            distinct: {},\r\n            groupBy: {}\r\n        },\r\n        enumerable: true,\r\n        writable: true\r\n    },\r\n    supportedContextOperation: {\r\n        value: {\r\n            batchExecuteQuery: true\r\n        },\r\n        enumerable: true,\r\n        writable: true\r\n    },\r\n\r\n    fieldConverter: { value: $data.oDataConverter },\r\n    resolveTypeOperations: function (operation, expression, frameType) {\r\n        var memDef = expression.entityType.getMemberDefinition(operation);\r\n        if (!memDef ||\r\n            !memDef.method ||\r\n            memDef.method.IsSideEffecting !== false ||\r\n            !memDef.method.returnType ||\r\n            !(frameType === $data.Expressions.FilterExpression || frameType === $data.Expressions.OrderExpression))\r\n        {\r\n            Guard.raise(new Exception(\"Entity '\" + expression.entityType.name + \"' Operation '\" + operation + \"' is not supported by the provider\"));\r\n        }\r\n\r\n        return memDef;\r\n    },\r\n    resolveSetOperations: function (operation, expression, frameType) {\r\n        if (expression) {\r\n            var esDef = expression.storageModel.ContextType.getMemberDefinition(expression.storageModel.ItemName);\r\n            if (esDef && esDef.actions && esDef.actions[operation]) {\r\n                var memDef = $data.MemberDefinition.translateDefinition(esDef.actions[operation], operation, this.getType());\r\n                if (!memDef ||\r\n                    !memDef.method ||\r\n                    memDef.method.IsSideEffecting !== false ||\r\n                    !memDef.method.returnType ||\r\n                    !(frameType === $data.Expressions.FilterExpression || frameType === $data.Expressions.OrderExpression)) {\r\n\r\n                    Guard.raise(new Exception(\"Collection '\" + expression.storageModel.ItemName + \"' Operation '\" + operation + \"' is not supported by the provider\"));\r\n                }\r\n\r\n                return memDef;\r\n            }\r\n        }\r\n        return $data.StorageProviderBase.prototype.resolveSetOperations.apply(this, arguments);\r\n\r\n    },\r\n    resolveContextOperations: function (operation, expression, frameType) {\r\n        var memDef = this.context.getType().getMemberDefinition(operation);\r\n        if (!memDef ||\r\n            !memDef.method ||\r\n            memDef.method.IsSideEffecting !== false ||\r\n            !memDef.method.returnType ||\r\n            !(frameType === $data.Expressions.FilterExpression || frameType === $data.Expressions.OrderExpression)) {\r\n            Guard.raise(new Exception(\"Context '\" + expression.instance.getType().name + \"' Operation '\" + operation + \"' is not supported by the provider\"));\r\n        }\r\n        return memDef;\r\n    },\r\n    \r\n    getEntityUrlReference: function(entity){\r\n        var sMod = this.context._storageModel.getStorageModel(entity.getType())\r\n        var tblName = sMod.TableName;\r\n        var pk = '(' + this.getEntityKeysValue({ data: entity, entitySet: this.context.getEntitySetFromElementType(entity.getType()) }) + ')';\r\n        return this.providerConfiguration.oDataServiceHost + '/' + tblName + pk;\r\n    },\r\n\r\n    getEntityKeysValue: function (entity) {\r\n        var result = [];\r\n        var keyValue = undefined;\r\n        var memDefs = entity.data.getType().memberDefinitions.getKeyProperties();\r\n        for (var i = 0, l = memDefs.length; i < l; i++) {\r\n            var field = memDefs[i];\r\n            if (field.key) {\r\n                keyValue = entity.data[field.name];\r\n                if (Guard.isNullOrUndefined(keyValue)) continue;\r\n\r\n                var typeName = Container.resolveName(field.type);\r\n\r\n                var converter = this.fieldConverter.toDb[typeName];\r\n                keyValue = converter ? converter(keyValue) : keyValue;\r\n\r\n                converter = this.fieldConverter.escape[typeName];\r\n                keyValue = converter ? converter(keyValue) : keyValue;\r\n\r\n                result.push(field.name + \"=\" + keyValue);\r\n            }\r\n        }\r\n        if (result.length > 1) {\r\n            return result.join(\",\");\r\n        }\r\n        return keyValue;\r\n    },\r\n    getFieldUrl: function (entity, fieldName, entitySet) {\r\n        var keyPart = this.getEntityKeysValue({ data: entity });\r\n        var servicehost = this.providerConfiguration.oDataServiceHost\r\n        if (servicehost.lastIndexOf('/') === servicehost.length)\r\n            servicehost = servicehost.substring(0, servicehost.length - 1);\r\n\r\n        return servicehost + '/' + entitySet.tableName + '(' + keyPart + ')/' + fieldName + '/$value';\r\n    },/*\r\n    getServiceMetadata: function () {\r\n        $data.ajax(this._setAjaxAuthHeader({\r\n            url: this.providerConfiguration.oDataServiceHost + \"/$metadata\",\r\n            dataType: \"xml\",\r\n            success: function (d) {\r\n                console.log(\"OK\");\r\n                console.dir(d);\r\n                console.log(typeof d);\r\n                window[\"s\"] = d;\r\n                window[\"k\"] = this.nsResolver;\r\n                //s.evaluate(\"edmx:Edmx/edmx:DataServices/Schema\", s, $data.storageProviders.oData.oDataProvider.prototype.nsResolver, XPathResult.ANY_TYPE, null).iterateNext()\r\n\r\n            },\r\n            error: function (error) {\r\n                console.log(\"error:\");\r\n                console.dir(error);\r\n            }\r\n        }));\r\n    },\r\n    nsResolver: function (sPrefix) {\r\n        switch (sPrefix) {\r\n            case \"edmx\":\r\n                return \"http://schemas.microsoft.com/ado/2007/06/edmx\";\r\n                break;\r\n            case \"m\":\r\n                return \"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\";\r\n                break;\r\n            case \"d\":\r\n                return \"http://schemas.microsoft.com/ado/2007/08/dataservices\";\r\n                break;\r\n            default:\r\n                return \"http://schemas.microsoft.com/ado/2008/09/edm\";\r\n                break;\r\n        }\r\n    }\r\n    */\r\n    parseError: function(error, data){\r\n\r\n        var message = (error.response || error || {}).body || '';\r\n        try {\r\n            if(message.indexOf('{') === 0){\r\n                var errorObj = JSON.parse(message);\r\n                errorObj = errorObj['odata.error'] || errorObj.error || errorObj;\r\n                if (errorObj.message) {\r\n                    message = errorObj.message.value || errorObj.message;\r\n                }\r\n            }\r\n        } catch (e) {}\r\n\r\n        return new Exception(message, error.message, data || error);\r\n    },\r\n    appendBasicAuth: function (request, user, password, withCredentials) {\r\n        request.headers = request.headers || {};\r\n        if (!request.headers.Authorization && user && password) {\r\n            request.headers.Authorization = \"Basic \" + this.__encodeBase64(user + \":\" + password);\r\n        }\r\n        if (withCredentials){\r\n            request.withCredentials = withCredentials;\r\n        }\r\n    },\r\n    __encodeBase64: function (val) {\r\n        var b64array = \"ABCDEFGHIJKLMNOP\" +\r\n                           \"QRSTUVWXYZabcdef\" +\r\n                           \"ghijklmnopqrstuv\" +\r\n                           \"wxyz0123456789+/\" +\r\n                           \"=\";\r\n\r\n        var input = val;\r\n        var base64 = \"\";\r\n        var hex = \"\";\r\n        var chr1, chr2, chr3 = \"\";\r\n        var enc1, enc2, enc3, enc4 = \"\";\r\n        var i = 0;\r\n\r\n        do {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n\r\n            base64 = base64 +\r\n                        b64array.charAt(enc1) +\r\n                        b64array.charAt(enc2) +\r\n                        b64array.charAt(enc3) +\r\n                        b64array.charAt(enc4);\r\n            chr1 = chr2 = chr3 = \"\";\r\n            enc1 = enc2 = enc3 = enc4 = \"\";\r\n        } while (i < input.length);\r\n\r\n        return base64;\r\n    },\r\n    checkODataMode: function(functionName){\r\n        return checkODataMode(this, functionName)\r\n    }\r\n}, null);\r\n\r\n$data.StorageProviderBase.registerProvider(\"oData\", $data.storageProviders.oData.oDataProvider);\r\n","export class RequestBuilder {\r\n    constructor(context, request){\r\n        this._context = context;\r\n        this._request = request || {};\r\n        this._activities = [];\r\n    }\r\n    get(){\r\n        return this._request; \r\n    }\r\n    add(...activities){\r\n        this._activities.push(...activities);\r\n        return this;\r\n    }\r\n    build(){\r\n        this._request.headers = this._request.headers || {}\r\n        this._request.data = this._request.data || {}\r\n        \r\n        this._activities.forEach((a) =>  a instanceof RequestActivity ? \r\n            a.implementation(this._request, this._context) :\r\n            a(this._request, this._context))\r\n        \r\n        this._activities = [];\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class RequestActivity {\r\n    constructor(){}\r\n    implementation(request, provider){ }\r\n}\r\n\r\nexport class SetRequestActivity extends RequestActivity {\r\n    constructor(key, value){\r\n        super()\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n    implementation(request, provider){ }\r\n}\r\n\r\nexport class SetRequestProperty extends SetRequestActivity {\r\n    implementation(request, provider){\r\n        request[this.key] = this.value\r\n    }\r\n}\r\n\r\nexport class SetDataProperty extends SetRequestActivity {\r\n    implementation(request, provider){\r\n        request.data[this.key] = this.value\r\n    }\r\n}\r\n\r\nexport class SetHeaderProperty extends SetRequestActivity {\r\n    implementation(request, provider){\r\n        request.headers[this.key] = this.value\r\n    }\r\n}\r\n\r\nexport class SetUrl extends SetRequestProperty {\r\n    constructor(url){\r\n        super('requestUri', url)\r\n    }\r\n}\r\n\r\nexport class AppendUrl extends SetUrl {\r\n    implementation(request, provider){\r\n        request[this.key] == request[this.key] || \"\"\r\n        request[this.key] += this.value\r\n    }\r\n}\r\n\r\nexport class SetMethod extends SetRequestProperty {\r\n    constructor(method){\r\n        super('method', method)\r\n    }\r\n}\r\n\r\nexport class SetProperty extends SetDataProperty {\r\n}\r\n\r\nexport class SetNavigationProperty extends SetDataProperty {\r\n    implementation(request, provider){\r\n        request.data[this.key] = this.value\r\n    }\r\n}\r\n\r\nexport class ClearRequestData extends RequestActivity {\r\n    implementation(request, provider){\r\n        delete request.data;\r\n    }\r\n}\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$C('$data.storageProviders.oData.oDataWhereCompiler', $data.Expressions.EntityExpressionVisitor, null, {\r\n    constructor: function (provider, lambdaPrefix) {\r\n        this.provider = provider;\r\n        this.entityContext = provider.context;\r\n        this.lambdaPrefix = lambdaPrefix;\r\n    },\r\n\r\n    compile: function (expression, context) {\r\n        this.Visit(expression, context);\r\n    },\r\n\r\n    VisitParametricQueryExpression: function (expression, context) {\r\n        this.Visit(expression.expression, context);\r\n    },\r\n\r\n    VisitUnaryExpression: function (expression, context) {\r\n        context.data += expression.resolution.mapTo;\r\n        context.data += \"(\";\r\n        this.Visit(expression.operand, context);\r\n        context.data += \")\";\r\n    },\r\n\r\n\r\n    VisitSimpleBinaryExpression: function (expression, context) {\r\n        context.data += \"(\";\r\n        //TODO refactor!!!\r\n        if (expression.nodeType == \"in\") {\r\n            Guard.requireType(\"expression.right\", expression.type, $data.Expressions.ConstantExpression);\r\n            var paramValue = expression.right.value;\r\n            if (!(paramValue instanceof Array)) { Guard.raise(new Exception(\"Right to the 'in' operator must be an array value\")); }\r\n            var result = null;\r\n            var orResolution = { mapTo: \"or\", dataType: \"boolean\", name: \"or\" };\r\n            var eqResolution = { mapTo: \"eq\", dataType: \"boolean\", name: \"equal\" };\r\n\r\n            paramValue.forEach(function (item) {\r\n                var idValue = item;\r\n                var idCheck = Container.createSimpleBinaryExpression(expression.left, idValue,\r\n                    $data.Expressions.ExpressionType.Equal, \"==\", \"boolean\", eqResolution);\r\n                if (result) {\r\n                    result = Container.createSimpleBinaryExpression(result, idCheck,\r\n                    $data.Expressions.ExpressionType.Or, \"||\", \"boolean\", orResolution);\r\n                } else {\r\n                    result = idCheck;\r\n                };\r\n            });\r\n            var temp = context.data;\r\n            context.data = '';\r\n            this.Visit(result, context);\r\n            context.data = temp + context.data.replace(/\\(/g, '').replace(/\\)/g, '');\r\n        } else {\r\n            this.Visit(expression.left, context);\r\n            context.data += \" \";\r\n            context.data += expression.resolution.mapTo;\r\n            context.data += \" \";\r\n            this.Visit(expression.right, context);\r\n        };\r\n        context.data += \")\";\r\n\r\n    },\r\n\r\n    VisitEntityFieldExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        if (expression.source instanceof $data.Expressions.ComplexTypeExpression) {\r\n            context.data += \"/\";\r\n        }\r\n        this.Visit(expression.selector, context);\r\n    },\r\n\r\n    VisitAssociationInfoExpression: function (expression, context) {\r\n        var propName = expression.associationInfo.FromPropertyName;\r\n        var sm = this.entityContext._storageModel.getStorageModel(expression.associationInfo.FromType.inheritsFrom);\r\n        if (sm && !sm.IsComplexType) {\r\n            propName = expression.associationInfo.FromType.fullName + \"/\" + propName;\r\n        }\r\n        context.data += propName;\r\n    },\r\n\r\n    VisitMemberInfoExpression: function (expression, context) {\r\n        var sm = this.entityContext._storageModel.getStorageModel(expression.memberDefinition.definedBy.inheritsFrom);\r\n        if (sm && !sm.IsComplexType) {\r\n            context.data += expression.memberDefinition.definedBy.fullName + \"/\" + expression.memberName;\r\n        }else {\r\n            context.data += expression.memberName\r\n        };\r\n    },\r\n\r\n    VisitComplexTypeExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        if (expression.source instanceof $data.Expressions.ComplexTypeExpression) {\r\n            context.data += \"/\";\r\n        }\r\n\r\n        this.Visit(expression.selector, context);\r\n    },\r\n\r\n    VisitQueryParameterExpression: function (expression, context) {\r\n        var typeName = Container.resolveName(expression.type);\r\n\r\n        var converter = this.provider.fieldConverter.toDb[typeName];\r\n        var value = converter ? converter(expression.value) : expression.value;\r\n\r\n        converter = this.provider.fieldConverter.escape[typeName];\r\n        context.data += converter ? converter(value) : value;\r\n    },\r\n\r\n    VisitEntityFieldOperationExpression: function (expression, context) {\r\n        Guard.requireType(\"expression.operation\", expression.operation, $data.Expressions.MemberInfoExpression);\r\n\r\n        //TODO refactor!\r\n        var opDef = expression.operation.memberDefinition;\r\n        var opName = opDef.mapTo || opDef.name;\r\n        context.data += opName;\r\n        context.data += \"(\";\r\n        var paramCounter = 0;\r\n        var params = opDef.parameters || [{ name: \"@expression\" }];\r\n\r\n        var args = params.map(function (item, index) {\r\n            if (item.name === \"@expression\") {\r\n                return expression.source;\r\n            } else {\r\n                return expression.parameters[paramCounter++]\r\n            };\r\n        });\r\n\r\n        args.forEach(function (arg, index) {\r\n            if (index > 0) {\r\n                context.data += \",\";\r\n            };\r\n            this.Visit(arg, context);\r\n        }, this);\r\n        context.data += \")\";\r\n    },\r\n    VisitEntityFunctionOperationExpression: function (expression, context) {\r\n        Guard.requireType(\"expression.operation\", expression.operation, $data.Expressions.MemberInfoExpression);\r\n        this.Visit(expression.source, context);\r\n\r\n        //TODO refactor!\r\n        var opDef = expression.operation.memberDefinition;\r\n        var opName = opDef.mapTo || opDef.name;\r\n        context.data += opName;\r\n        context.data += \"(\";\r\n        var paramCounter = 0;\r\n        var params = opDef.method.params || [{ name: \"@expression\" }];\r\n\r\n        var args = params.map(function (item, index) {\r\n            if (item.name === \"@expression\") {\r\n                return expression.source;\r\n            } else {\r\n                return expression.parameters[paramCounter++]\r\n            };\r\n        });\r\n        var i = 0;\r\n        args.forEach(function (arg, index) {\r\n            if (arg === undefined || (arg instanceof $data.Expressions.ConstantExpression && typeof arg.value === 'undefined'))\r\n                return;\r\n\r\n            if (i > 0) {\r\n                context.data += \",\";\r\n            };\r\n            i++;\r\n            context.data += params[index].name + '=';\r\n            this.Visit(arg, context);\r\n        }, this);\r\n        context.data += \")\";\r\n    },\r\n    VisitContextFunctionOperationExpression: function (expression, context) {\r\n        return this.VisitEntityFunctionOperationExpression(expression, context);\r\n    },\r\n\r\n    VisitConstantExpression: function (expression, context) {\r\n        var typeName = Container.resolveName(expression.type);\r\n\r\n        var converter = this.provider.fieldConverter.toDb[typeName];\r\n        var value = converter ? converter(expression.value) : expression.value;\r\n\r\n        converter = this.provider.fieldConverter.escape[typeName];\r\n        context.data += converter ? converter(value) : value;\r\n    },\r\n\r\n    VisitEntityExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        if (this.lambdaPrefix && expression.selector.lambda) {\r\n            context.lambda = expression.selector.lambda;\r\n            context.data += (expression.selector.lambda + '/');\r\n        }\r\n\r\n        //if (expression.selector instanceof $data.Expressions.EntityExpression) {\r\n        //    this.Visit(expression.selector, context);\r\n        //}\r\n    },\r\n\r\n    VisitEntitySetExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        if (expression.selector instanceof $data.Expressions.AssociationInfoExpression) {\r\n            this.Visit(expression.selector, context);\r\n            context.data += \"/\";\r\n        }\r\n    },\r\n\r\n    VisitFrameOperationExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        Guard.requireType(\"expression.operation\", expression.operation, $data.Expressions.MemberInfoExpression);\r\n\r\n        //TODO refactor!\r\n        var opDef = expression.operation.memberDefinition;\r\n        var opName = opDef.mapTo || opDef.name;\r\n        context.data += opName;\r\n        context.data += \"(\";\r\n        var paramCounter = 0;\r\n        var params = opDef.parameters || [{ name: \"@expression\" }];\r\n\r\n        var args = params.map(function (item, index) {\r\n            if (item.name === \"@expression\") {\r\n                return expression.source;\r\n            } else {\r\n                return expression.parameters[paramCounter++]\r\n            };\r\n        });\r\n\r\n        for (var i = 0; i < args.length; i++) {\r\n            var arg = args[i];\r\n            \r\n            if(!opDef.method) {\r\n                var compiler = new $data.storageProviders.oData.oDataWhereCompiler(this.provider, true);\r\n                var frameContext = { data: \"\" };\r\n                                    \r\n                if (arg && arg.value instanceof $data.Queryable) {\r\n                    var preparator = Container.createQueryExpressionCreator(arg.value.entityContext);\r\n                    var prep_expression = preparator.Visit(arg.value.expression);\r\n                    arg = prep_expression;\r\n                } else if(arg) {\r\n                    arg = arg.selector;\r\n                }\r\n                \r\n                var compiled = compiler.compile(arg, frameContext);\r\n                \r\n                if(frameContext.data){\r\n                    context.data += (frameContext.lambda + ': ' + frameContext.data);\r\n                }\r\n            }\r\n            \r\n        }\r\n        context.data += \")\";\r\n    }\r\n});\r\n"]}